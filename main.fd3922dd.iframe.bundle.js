(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{1185:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__(16),__webpack_require__(36),__webpack_require__(48),__webpack_require__(1186),__webpack_require__(53),__webpack_require__(54),__webpack_require__(1187),__webpack_require__(192),__webpack_require__(243);var _Users_evgeny_WebstormProjects_storybook_typescript_example_may_node_modules_storybook_client_api__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__(200),_Users_evgeny_WebstormProjects_storybook_typescript_example_may_node_modules_storybook_client_logger__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__(8),_Users_evgeny_WebstormProjects_storybook_typescript_example_may_storybook_preview_js__WEBPACK_IMPORTED_MODULE_11__=__webpack_require__(356);function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.keys(_Users_evgeny_WebstormProjects_storybook_typescript_example_may_storybook_preview_js__WEBPACK_IMPORTED_MODULE_11__).forEach((function(key){var value=_Users_evgeny_WebstormProjects_storybook_typescript_example_may_storybook_preview_js__WEBPACK_IMPORTED_MODULE_11__[key];switch(key){case"args":case"argTypes":return _Users_evgeny_WebstormProjects_storybook_typescript_example_may_node_modules_storybook_client_logger__WEBPACK_IMPORTED_MODULE_10__.a.warn("Invalid args/argTypes in config, ignoring.",JSON.stringify(value));case"decorators":return value.forEach((function(decorator){return Object(_Users_evgeny_WebstormProjects_storybook_typescript_example_may_node_modules_storybook_client_api__WEBPACK_IMPORTED_MODULE_9__.b)(decorator,!1)}));case"loaders":return value.forEach((function(loader){return Object(_Users_evgeny_WebstormProjects_storybook_typescript_example_may_node_modules_storybook_client_api__WEBPACK_IMPORTED_MODULE_9__.c)(loader,!1)}));case"parameters":return Object(_Users_evgeny_WebstormProjects_storybook_typescript_example_may_node_modules_storybook_client_api__WEBPACK_IMPORTED_MODULE_9__.d)(function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}({},value),!1);case"argTypesEnhancers":return value.forEach((function(enhancer){return Object(_Users_evgeny_WebstormProjects_storybook_typescript_example_may_node_modules_storybook_client_api__WEBPACK_IMPORTED_MODULE_9__.a)(enhancer)}));case"globals":case"globalTypes":var v={};return v[key]=value,Object(_Users_evgeny_WebstormProjects_storybook_typescript_example_may_node_modules_storybook_client_api__WEBPACK_IMPORTED_MODULE_9__.d)(v,!1);default:return console.log(key+" was not supported :( !")}}))},1188:function(module,exports,__webpack_require__){"use strict";(function(module){(0,__webpack_require__(413).configure)([__webpack_require__(1189)],module,!1)}).call(this,__webpack_require__(120)(module))},1189:function(module,exports,__webpack_require__){var map={"./components/stories/Autocomplete.stories.tsx":1190,"./components/stories/Button.stories.tsx":1195,"./components/stories/Radio.stories.tsx":1192};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=1189},1190:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"SingleChoice",(function(){return SingleChoice})),__webpack_require__.d(__webpack_exports__,"MultipleSelectChoice",(function(){return MultipleSelectChoice}));__webpack_require__(48),__webpack_require__(13),__webpack_require__(243),__webpack_require__(536),__webpack_require__(36),__webpack_require__(43),__webpack_require__(22),__webpack_require__(119),__webpack_require__(46),__webpack_require__(47),__webpack_require__(55),__webpack_require__(49),__webpack_require__(12),__webpack_require__(146);var react__WEBPACK_IMPORTED_MODULE_14__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_14___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_14__),_storybook__WEBPACK_IMPORTED_MODULE_15__=__webpack_require__(59),_Autocomplete__WEBPACK_IMPORTED_MODULE_16__=__webpack_require__(161);function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){var _i=arr&&("undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"]);if(null==_i)return;var _s,_e,_arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}__webpack_exports__.default={parameters:function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}({storySource:{source:'\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = "\\n    \\n    // @ts-nocheck\\n    // @ts-ignore\\n    var __STORY__ = \\"import React, { useState } from \'react\';\\\\nimport { PageWrapper } from \'../storybook\';\\\\nimport { OptionType } from \'../Autocomplete/types\';\\\\nimport AutocompleteComponent from \'../Autocomplete\';\\\\n\\\\nexport default {\\\\n    title: \'Components/Autocomplete\',\\\\n    component: AutocompleteComponent,\\\\n};\\\\n\\\\nconst top100Films: OptionType[] = [\\\\n    { value: \'The Shawshank Redemption\', title: \'The Shawshank Redemption\' },\\\\n    { value: \'The Godfather\', title: \'The Godfather\' },\\\\n    { value: \'The Dark Knight\', title: \'The Dark Knight\' },\\\\n    { value: \'12 Angry Men\', title: \'12 Angry Men\' },\\\\n];\\\\n\\\\nexport const SingleChoice = () => {\\\\n    const [value, setValue] = useState<OptionType>();\\\\n\\\\n    return (\\\\n        <PageWrapper>\\\\n            <AutocompleteComponent\\\\n                freeSolo\\\\n                options={top100Films}\\\\n                defaultValue={top100Films}\\\\n                getOptionLabel={(option) => option.title}\\\\n                value={value}\\\\n                onChange={(e, newValue) => setValue(newValue as OptionType)}\\\\n            />\\\\n        </PageWrapper>\\\\n    );\\\\n};\\\\n\\\\nexport const MultipleSelectChoice = () => {\\\\n    const [value, setValue] = useState<OptionType[]>([]);\\\\n\\\\n    return (\\\\n        <PageWrapper>\\\\n            <AutocompleteComponent\\\\n                onDelete={(title) => {\\\\n                    setValue((prevValue) => prevValue.filter((v) => v.title !== title));\\\\n                }}\\\\n                multiple\\\\n                options={top100Films}\\\\n                defaultValue={top100Films}\\\\n                getOptionLabel={(option) => option.title}\\\\n                value={value}\\\\n                onChange={(e, newValue) => setValue(newValue as OptionType[])}\\\\n            />\\\\n        </PageWrapper>\\\\n    );\\\\n};\\\\n\\";\\n    // @ts-ignore\\n    var __LOCATIONS_MAP__ = {\\"SingleChoice\\":{\\"startLoc\\":{\\"col\\":28,\\"line\\":18},\\"endLoc\\":{\\"col\\":1,\\"line\\":33},\\"startBody\\":{\\"col\\":28,\\"line\\":18},\\"endBody\\":{\\"col\\":1,\\"line\\":33}},\\"MultipleSelectChoice\\":{\\"startLoc\\":{\\"col\\":36,\\"line\\":35},\\"endLoc\\":{\\"col\\":1,\\"line\\":53},\\"startBody\\":{\\"col\\":36,\\"line\\":35},\\"endBody\\":{\\"col\\":1,\\"line\\":53}}};\\n    \\nimport React, { useState } from \'react\';\\nimport { PageWrapper } from \'../storybook\';\\nimport { OptionType } from \'../Autocomplete/types\';\\nimport AutocompleteComponent from \'../Autocomplete\';\\n\\nexport default {parameters: {\\"storySource\\":{\\"source\\":\\"import React, { useState } from \'react\';\\\\nimport { PageWrapper } from \'../storybook\';\\\\nimport { OptionType } from \'../Autocomplete/types\';\\\\nimport AutocompleteComponent from \'../Autocomplete\';\\\\n\\\\nexport default {\\\\n    title: \'Components/Autocomplete\',\\\\n    component: AutocompleteComponent,\\\\n};\\\\n\\\\nconst top100Films: OptionType[] = [\\\\n    { value: \'The Shawshank Redemption\', title: \'The Shawshank Redemption\' },\\\\n    { value: \'The Godfather\', title: \'The Godfather\' },\\\\n    { value: \'The Dark Knight\', title: \'The Dark Knight\' },\\\\n    { value: \'12 Angry Men\', title: \'12 Angry Men\' },\\\\n];\\\\n\\\\nexport const SingleChoice = () => {\\\\n    const [value, setValue] = useState<OptionType>();\\\\n\\\\n    return (\\\\n        <PageWrapper>\\\\n            <AutocompleteComponent\\\\n                freeSolo\\\\n                options={top100Films}\\\\n                defaultValue={top100Films}\\\\n                getOptionLabel={(option) => option.title}\\\\n                value={value}\\\\n                onChange={(e, newValue) => setValue(newValue as OptionType)}\\\\n            />\\\\n        </PageWrapper>\\\\n    );\\\\n};\\\\n\\\\nexport const MultipleSelectChoice = () => {\\\\n    const [value, setValue] = useState<OptionType[]>([]);\\\\n\\\\n    return (\\\\n        <PageWrapper>\\\\n            <AutocompleteComponent\\\\n                onDelete={(title) => {\\\\n                    setValue((prevValue) => prevValue.filter((v) => v.title !== title));\\\\n                }}\\\\n                multiple\\\\n                options={top100Films}\\\\n                defaultValue={top100Films}\\\\n                getOptionLabel={(option) => option.title}\\\\n                value={value}\\\\n                onChange={(e, newValue) => setValue(newValue as OptionType[])}\\\\n            />\\\\n        </PageWrapper>\\\\n    );\\\\n};\\\\n\\",\\"locationsMap\\":{\\"single-choice\\":{\\"startLoc\\":{\\"col\\":28,\\"line\\":18},\\"endLoc\\":{\\"col\\":1,\\"line\\":33},\\"startBody\\":{\\"col\\":28,\\"line\\":18},\\"endBody\\":{\\"col\\":1,\\"line\\":33}},\\"multiple-select-choice\\":{\\"startLoc\\":{\\"col\\":36,\\"line\\":35},\\"endLoc\\":{\\"col\\":1,\\"line\\":53},\\"startBody\\":{\\"col\\":36,\\"line\\":35},\\"endBody\\":{\\"col\\":1,\\"line\\":53}}}},},\\n    title: \'Components/Autocomplete\',\\n    component: AutocompleteComponent,\\n};\\n\\nconst top100Films: OptionType[] = [\\n    { value: \'The Shawshank Redemption\', title: \'The Shawshank Redemption\' },\\n    { value: \'The Godfather\', title: \'The Godfather\' },\\n    { value: \'The Dark Knight\', title: \'The Dark Knight\' },\\n    { value: \'12 Angry Men\', title: \'12 Angry Men\' },\\n];\\n\\nexport const SingleChoice = () => {\\n    const [value, setValue] = useState<OptionType>();\\n\\n    return (\\n        <PageWrapper>\\n            <AutocompleteComponent\\n                freeSolo\\n                options={top100Films}\\n                defaultValue={top100Films}\\n                getOptionLabel={(option) => option.title}\\n                value={value}\\n                onChange={(e, newValue) => setValue(newValue as OptionType)}\\n            />\\n        </PageWrapper>\\n    );\\n};;\\n\\nexport const MultipleSelectChoice = () => {\\n    const [value, setValue] = useState<OptionType[]>([]);\\n\\n    return (\\n        <PageWrapper>\\n            <AutocompleteComponent\\n                onDelete={(title) => {\\n                    setValue((prevValue) => prevValue.filter((v) => v.title !== title));\\n                }}\\n                multiple\\n                options={top100Films}\\n                defaultValue={top100Films}\\n                getOptionLabel={(option) => option.title}\\n                value={value}\\n                onChange={(e, newValue) => setValue(newValue as OptionType[])}\\n            />\\n        </PageWrapper>\\n    );\\n};\\n";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {"SingleChoice":{"startLoc":{"col":28,"line":26},"endLoc":{"col":1,"line":41},"startBody":{"col":28,"line":26},"endBody":{"col":1,"line":41}},"MultipleSelectChoice":{"startLoc":{"col":36,"line":43},"endLoc":{"col":1,"line":61},"startBody":{"col":36,"line":43},"endBody":{"col":1,"line":61}}};\n    \n\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = "import React, { useState } from \'react\';\\nimport { PageWrapper } from \'../storybook\';\\nimport { OptionType } from \'../Autocomplete/types\';\\nimport AutocompleteComponent from \'../Autocomplete\';\\n\\nexport default {\\n    title: \'Components/Autocomplete\',\\n    component: AutocompleteComponent,\\n};\\n\\nconst top100Films: OptionType[] = [\\n    { value: \'The Shawshank Redemption\', title: \'The Shawshank Redemption\' },\\n    { value: \'The Godfather\', title: \'The Godfather\' },\\n    { value: \'The Dark Knight\', title: \'The Dark Knight\' },\\n    { value: \'12 Angry Men\', title: \'12 Angry Men\' },\\n];\\n\\nexport const SingleChoice = () => {\\n    const [value, setValue] = useState<OptionType>();\\n\\n    return (\\n        <PageWrapper>\\n            <AutocompleteComponent\\n                freeSolo\\n                options={top100Films}\\n                defaultValue={top100Films}\\n                getOptionLabel={(option) => option.title}\\n                value={value}\\n                onChange={(e, newValue) => setValue(newValue as OptionType)}\\n            />\\n        </PageWrapper>\\n    );\\n};\\n\\nexport const MultipleSelectChoice = () => {\\n    const [value, setValue] = useState<OptionType[]>([]);\\n\\n    return (\\n        <PageWrapper>\\n            <AutocompleteComponent\\n                onDelete={(title) => {\\n                    setValue((prevValue) => prevValue.filter((v) => v.title !== title));\\n                }}\\n                multiple\\n                options={top100Films}\\n                defaultValue={top100Films}\\n                getOptionLabel={(option) => option.title}\\n                value={value}\\n                onChange={(e, newValue) => setValue(newValue as OptionType[])}\\n            />\\n        </PageWrapper>\\n    );\\n};\\n";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {"SingleChoice":{"startLoc":{"col":28,"line":18},"endLoc":{"col":1,"line":33},"startBody":{"col":28,"line":18},"endBody":{"col":1,"line":33}},"MultipleSelectChoice":{"startLoc":{"col":36,"line":35},"endLoc":{"col":1,"line":53},"startBody":{"col":36,"line":35},"endBody":{"col":1,"line":53}}};\n    \nimport React, { useState } from \'react\';\nimport { PageWrapper } from \'../storybook\';\nimport { OptionType } from \'../Autocomplete/types\';\nimport AutocompleteComponent from \'../Autocomplete\';\n\nexport default {parameters: {"storySource":{"source":"import React, { useState } from \'react\';\\nimport { PageWrapper } from \'../storybook\';\\nimport { OptionType } from \'../Autocomplete/types\';\\nimport AutocompleteComponent from \'../Autocomplete\';\\n\\nexport default {\\n    title: \'Components/Autocomplete\',\\n    component: AutocompleteComponent,\\n};\\n\\nconst top100Films: OptionType[] = [\\n    { value: \'The Shawshank Redemption\', title: \'The Shawshank Redemption\' },\\n    { value: \'The Godfather\', title: \'The Godfather\' },\\n    { value: \'The Dark Knight\', title: \'The Dark Knight\' },\\n    { value: \'12 Angry Men\', title: \'12 Angry Men\' },\\n];\\n\\nexport const SingleChoice = () => {\\n    const [value, setValue] = useState<OptionType>();\\n\\n    return (\\n        <PageWrapper>\\n            <AutocompleteComponent\\n                freeSolo\\n                options={top100Films}\\n                defaultValue={top100Films}\\n                getOptionLabel={(option) => option.title}\\n                value={value}\\n                onChange={(e, newValue) => setValue(newValue as OptionType)}\\n            />\\n        </PageWrapper>\\n    );\\n};\\n\\nexport const MultipleSelectChoice = () => {\\n    const [value, setValue] = useState<OptionType[]>([]);\\n\\n    return (\\n        <PageWrapper>\\n            <AutocompleteComponent\\n                onDelete={(title) => {\\n                    setValue((prevValue) => prevValue.filter((v) => v.title !== title));\\n                }}\\n                multiple\\n                options={top100Films}\\n                defaultValue={top100Films}\\n                getOptionLabel={(option) => option.title}\\n                value={value}\\n                onChange={(e, newValue) => setValue(newValue as OptionType[])}\\n            />\\n        </PageWrapper>\\n    );\\n};\\n","locationsMap":{"single-choice":{"startLoc":{"col":28,"line":18},"endLoc":{"col":1,"line":33},"startBody":{"col":28,"line":18},"endBody":{"col":1,"line":33}},"multiple-select-choice":{"startLoc":{"col":36,"line":35},"endLoc":{"col":1,"line":53},"startBody":{"col":36,"line":35},"endBody":{"col":1,"line":53}}}},},\n    title: \'Components/Autocomplete\',\n    component: AutocompleteComponent,\n};\n\nconst top100Films: OptionType[] = [\n    { value: \'The Shawshank Redemption\', title: \'The Shawshank Redemption\' },\n    { value: \'The Godfather\', title: \'The Godfather\' },\n    { value: \'The Dark Knight\', title: \'The Dark Knight\' },\n    { value: \'12 Angry Men\', title: \'12 Angry Men\' },\n];\n\nexport const SingleChoice = () => {\n    const [value, setValue] = useState<OptionType>();\n\n    return (\n        <PageWrapper>\n            <AutocompleteComponent\n                freeSolo\n                options={top100Films}\n                defaultValue={top100Films}\n                getOptionLabel={(option) => option.title}\n                value={value}\n                onChange={(e, newValue) => setValue(newValue as OptionType)}\n            />\n        </PageWrapper>\n    );\n};;;\n\nexport const MultipleSelectChoice = () => {\n    const [value, setValue] = useState<OptionType[]>([]);\n\n    return (\n        <PageWrapper>\n            <AutocompleteComponent\n                onDelete={(title) => {\n                    setValue((prevValue) => prevValue.filter((v) => v.title !== title));\n                }}\n                multiple\n                options={top100Films}\n                defaultValue={top100Films}\n                getOptionLabel={(option) => option.title}\n                value={value}\n                onChange={(e, newValue) => setValue(newValue as OptionType[])}\n            />\n        </PageWrapper>\n    );\n};\n\n\n\nSingleChoice.parameters = { storySource: { source: "() => {\\n    const [value, setValue] = useState<OptionType>();\\n\\n    return (\\n        <PageWrapper>\\n            <AutocompleteComponent\\n                freeSolo\\n                options={top100Films}\\n                defaultValue={top100Films}\\n                getOptionLabel={(option) => option.title}\\n                value={value}\\n                onChange={(e, newValue) => setValue(newValue as OptionType)}\\n            />\\n        </PageWrapper>\\n    );\\n}" }, ...SingleChoice.parameters };\nMultipleSelectChoice.parameters = { storySource: { source: "() => {\\n    const [value, setValue] = useState<OptionType[]>([]);\\n\\n    return (\\n        <PageWrapper>\\n            <AutocompleteComponent\\n                onDelete={(title) => {\\n                    setValue((prevValue) => prevValue.filter((v) => v.title !== title));\\n                }}\\n                multiple\\n                options={top100Films}\\n                defaultValue={top100Films}\\n                getOptionLabel={(option) => option.title}\\n                value={value}\\n                onChange={(e, newValue) => setValue(newValue as OptionType[])}\\n            />\\n        </PageWrapper>\\n    );\\n}" }, ...MultipleSelectChoice.parameters };',locationsMap:{"single-choice":{startLoc:{col:28,line:34},endLoc:{col:1,line:49},startBody:{col:28,line:34},endBody:{col:1,line:49}},"multiple-select-choice":{startLoc:{col:36,line:51},endLoc:{col:1,line:69},startBody:{col:36,line:51},endBody:{col:1,line:69}}}}},"storySource",{source:"import React, { useState } from 'react';\nimport { PageWrapper } from '../storybook';\nimport { OptionType } from '../Autocomplete/types';\nimport AutocompleteComponent from '../Autocomplete';\n\nexport default {\n    title: 'Components/Autocomplete',\n    component: AutocompleteComponent,\n};\n\nconst top100Films: OptionType[] = [\n    { value: 'The Shawshank Redemption', title: 'The Shawshank Redemption' },\n    { value: 'The Godfather', title: 'The Godfather' },\n    { value: 'The Dark Knight', title: 'The Dark Knight' },\n    { value: '12 Angry Men', title: '12 Angry Men' },\n];\n\nexport const SingleChoice = () => {\n    const [value, setValue] = useState<OptionType>();\n\n    return (\n        <PageWrapper>\n            <AutocompleteComponent\n                freeSolo\n                options={top100Films}\n                defaultValue={top100Films}\n                getOptionLabel={(option) => option.title}\n                value={value}\n                onChange={(e, newValue) => setValue(newValue as OptionType)}\n            />\n        </PageWrapper>\n    );\n};\n\nexport const MultipleSelectChoice = () => {\n    const [value, setValue] = useState<OptionType[]>([]);\n\n    return (\n        <PageWrapper>\n            <AutocompleteComponent\n                onDelete={(title) => {\n                    setValue((prevValue) => prevValue.filter((v) => v.title !== title));\n                }}\n                multiple\n                options={top100Films}\n                defaultValue={top100Films}\n                getOptionLabel={(option) => option.title}\n                value={value}\n                onChange={(e, newValue) => setValue(newValue as OptionType[])}\n            />\n        </PageWrapper>\n    );\n};\n",locationsMap:{"single-choice":{startLoc:{col:28,line:18},endLoc:{col:1,line:33},startBody:{col:28,line:18},endBody:{col:1,line:33}},"multiple-select-choice":{startLoc:{col:36,line:35},endLoc:{col:1,line:53},startBody:{col:36,line:35},endBody:{col:1,line:53}}}}),title:"Components/Autocomplete",component:_Autocomplete__WEBPACK_IMPORTED_MODULE_16__.a};var top100Films=[{value:"The Shawshank Redemption",title:"The Shawshank Redemption"},{value:"The Godfather",title:"The Godfather"},{value:"The Dark Knight",title:"The Dark Knight"},{value:"12 Angry Men",title:"12 Angry Men"}],SingleChoice=function SingleChoice(){var _useState2=_slicedToArray(Object(react__WEBPACK_IMPORTED_MODULE_14__.useState)(),2),value=_useState2[0],setValue=_useState2[1];return react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(_storybook__WEBPACK_IMPORTED_MODULE_15__.a,null,react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(_Autocomplete__WEBPACK_IMPORTED_MODULE_16__.a,{freeSolo:!0,options:top100Films,defaultValue:top100Films,getOptionLabel:function getOptionLabel(option){return option.title},value:value,onChange:function onChange(e,newValue){return setValue(newValue)}}))},MultipleSelectChoice=function MultipleSelectChoice(){var _useState4=_slicedToArray(Object(react__WEBPACK_IMPORTED_MODULE_14__.useState)([]),2),value=_useState4[0],setValue=_useState4[1];return react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(_storybook__WEBPACK_IMPORTED_MODULE_15__.a,null,react__WEBPACK_IMPORTED_MODULE_14___default.a.createElement(_Autocomplete__WEBPACK_IMPORTED_MODULE_16__.a,{onDelete:function onDelete(title){setValue((function(prevValue){return prevValue.filter((function(v){return v.title!==title}))}))},multiple:!0,options:top100Films,defaultValue:top100Films,getOptionLabel:function getOptionLabel(option){return option.title},value:value,onChange:function onChange(e,newValue){return setValue(newValue)}}))};SingleChoice.parameters=Object.assign({storySource:{source:"() => {\n    const [value, setValue] = useState<OptionType>();\n\n    return (\n        <PageWrapper>\n            <AutocompleteComponent\n                freeSolo\n                options={top100Films}\n                defaultValue={top100Films}\n                getOptionLabel={(option) => option.title}\n                value={value}\n                onChange={(e, newValue) => setValue(newValue as OptionType)}\n            />\n        </PageWrapper>\n    );\n}"}},SingleChoice.parameters),MultipleSelectChoice.parameters=Object.assign({storySource:{source:"() => {\n    const [value, setValue] = useState<OptionType[]>([]);\n\n    return (\n        <PageWrapper>\n            <AutocompleteComponent\n                onDelete={(title) => {\n                    setValue((prevValue) => prevValue.filter((v) => v.title !== title));\n                }}\n                multiple\n                options={top100Films}\n                defaultValue={top100Films}\n                getOptionLabel={(option) => option.title}\n                value={value}\n                onChange={(e, newValue) => setValue(newValue as OptionType[])}\n            />\n        </PageWrapper>\n    );\n}"}},MultipleSelectChoice.parameters)},1192:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Standard",(function(){return Standard})),__webpack_require__.d(__webpack_exports__,"DisabledState",(function(){return DisabledState})),__webpack_require__.d(__webpack_exports__,"HorizontalLayout",(function(){return HorizontalLayout})),__webpack_require__.d(__webpack_exports__,"LabelPlacement",(function(){return LabelPlacement})),__webpack_require__.d(__webpack_exports__,"PassingRadioProps",(function(){return PassingRadioProps})),__webpack_require__.d(__webpack_exports__,"ErrorState",(function(){return ErrorState}));__webpack_require__(13),__webpack_require__(243),__webpack_require__(536),__webpack_require__(36),__webpack_require__(43),__webpack_require__(22),__webpack_require__(119),__webpack_require__(46),__webpack_require__(47),__webpack_require__(55),__webpack_require__(49),__webpack_require__(12),__webpack_require__(146);var react__WEBPACK_IMPORTED_MODULE_13__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_13___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_13__),_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_14__=__webpack_require__(1197),_Radio__WEBPACK_IMPORTED_MODULE_15__=__webpack_require__(27),_storybook__WEBPACK_IMPORTED_MODULE_16__=__webpack_require__(59),_material_ui_core__WEBPACK_IMPORTED_MODULE_17__=__webpack_require__(576),_material_ui_core__WEBPACK_IMPORTED_MODULE_18__=__webpack_require__(1196);function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){var _i=arr&&("undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"]);if(null==_i)return;var _s,_e,_arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}__webpack_exports__.default={parameters:function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}({storySource:{source:"\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"\\n    \\n    // @ts-nocheck\\n    // @ts-ignore\\n    var __STORY__ = \\\"import React, { useState } from 'react';\\\\nimport Button from '@material-ui/core/Button';\\\\nimport RadioGroup, { Radio } from '../Radio';\\\\n\\\\nimport { PageWrapper } from '../storybook';\\\\nimport { FormControlLabel, FormHelperText } from '@material-ui/core';\\\\n\\\\nexport default {\\\\n    title: 'Components/Radio',\\\\n    component: RadioGroup,\\\\n};\\\\n\\\\nexport const Standard = () => {\\\\n    const defaultValue = 'female';\\\\n    const [, setValue] = useState(defaultValue);\\\\n\\\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\\\\n        setValue((event.target as HTMLInputElement).value);\\\\n    };\\\\n\\\\n    return (\\\\n        <PageWrapper>\\\\n            <RadioGroup\\\\n                name='standard-usage'\\\\n                onChange={onChange}\\\\n                label='Standard Usage'\\\\n                defaultValue={defaultValue}\\\\n            >\\\\n                <Radio value='female' label='Female' />\\\\n                <Radio value='male' label='Male' />\\\\n                <Radio value='other' label='Other' />\\\\n            </RadioGroup>\\\\n        </PageWrapper>\\\\n    );\\\\n};\\\\n\\\\nexport const DisabledState = () => {\\\\n    const defaultValue = 'male';\\\\n    const [, setValue] = useState(defaultValue);\\\\n\\\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\\\\n        setValue((event.target as HTMLInputElement).value);\\\\n    };\\\\n\\\\n    return (\\\\n        <PageWrapper>\\\\n            <RadioGroup\\\\n                name='disabled-state'\\\\n                onChange={onChange}\\\\n                label='Disabled State'\\\\n                defaultValue={defaultValue}\\\\n                disabled\\\\n            >\\\\n                <Radio value='female' label='Female' disabled />\\\\n                <Radio value='male' label='Male' disabled />\\\\n                <Radio value='other' label='Other' disabled />\\\\n            </RadioGroup>\\\\n        </PageWrapper>\\\\n    );\\\\n};\\\\n\\\\nexport const HorizontalLayout = () => {\\\\n    const defaultValue = 'female';\\\\n    const [, setValue] = useState(defaultValue);\\\\n\\\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\\\\n        setValue((event.target as HTMLInputElement).value);\\\\n    };\\\\n    return (\\\\n        <PageWrapper>\\\\n            <RadioGroup\\\\n                name='horizontal-layout'\\\\n                onChange={onChange}\\\\n                label='Horizontal layout'\\\\n                defaultValue={defaultValue}\\\\n                row\\\\n            >\\\\n                <Radio value='female' label='Female' />\\\\n                <Radio value='male' label='Male' />\\\\n                <Radio value='other' label='Other' />\\\\n            </RadioGroup>\\\\n        </PageWrapper>\\\\n    );\\\\n};\\\\n\\\\nexport const LabelPlacement = () => {\\\\n    const defaultValue = 'start';\\\\n    const [, setValue] = useState(defaultValue);\\\\n\\\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\\\\n        setValue((event.target as HTMLInputElement).value);\\\\n    };\\\\n    return (\\\\n        <PageWrapper>\\\\n            <RadioGroup\\\\n                name='label-placement'\\\\n                onChange={onChange}\\\\n                label='Label placement'\\\\n                defaultValue={defaultValue}\\\\n                row\\\\n            >\\\\n                <Radio value='top' label='Top' labelPlacement='top' />\\\\n                <Radio value='start' label='Start' labelPlacement='start' />\\\\n                <Radio value='bottom' label='Bottom' labelPlacement='bottom' />\\\\n                <Radio value='end' label='End' labelPlacement='end' />\\\\n            </RadioGroup>\\\\n        </PageWrapper>\\\\n    );\\\\n};\\\\n\\\\nexport const PassingRadioProps = () => {\\\\n    const defaultValue = 'top';\\\\n    const [, setValue] = useState(defaultValue);\\\\n\\\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\\\\n        setValue((event.target as HTMLInputElement).value);\\\\n    };\\\\n    return (\\\\n        <PageWrapper>\\\\n            <RadioGroup\\\\n                name='label-placement'\\\\n                onChange={onChange}\\\\n                label='Use of Radio props'\\\\n                defaultValue={defaultValue}\\\\n            >\\\\n                <Radio\\\\n                    value='top'\\\\n                    label='Disabled ripple, small size radio button'\\\\n                    muiRadioProps={{ disableRipple: true, size: 'small' }}\\\\n                />\\\\n                <Radio value='start' label='Disabled' muiRadioProps={{ disabled: true }} />\\\\n                <Radio value='bottom' label='Default Mui color' muiRadioProps={{ color: 'default' }} />\\\\n                <Radio value='end' label='Without Radio props' />\\\\n            </RadioGroup>\\\\n        </PageWrapper>\\\\n    );\\\\n};\\\\n\\\\nexport const ErrorState = () => {\\\\n    const [value, setValue] = useState('');\\\\n    const [error, setError] = useState(true);\\\\n    const [helperText, setHelperText] = useState('Choose wisely');\\\\n\\\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\\\\n        setValue((event.target as HTMLInputElement).value);\\\\n        setError(false);\\\\n    };\\\\n\\\\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\\\\n        event.preventDefault();\\\\n        if (value === 'best') {\\\\n            setHelperText('You got it!');\\\\n            setError(false);\\\\n        } else if (value === 'worst') {\\\\n            setHelperText('Sorry, wrong answer!');\\\\n            setError(true);\\\\n        } else {\\\\n            setHelperText('Please select an option.');\\\\n            setError(true);\\\\n        }\\\\n    };\\\\n\\\\n    return (\\\\n        <PageWrapper>\\\\n            <form onSubmit={handleSubmit} name='simple-form'>\\\\n                <RadioGroup\\\\n                    name='error-state'\\\\n                    label='Select Black'\\\\n                    value={value}\\\\n                    onChange={onChange}\\\\n                    hasError={error}\\\\n                    message={helperText}\\\\n                >\\\\n                    <FormControlLabel value=\\\\\\\"best\\\\\\\" control={<Radio/>} label=\\\\\\\"The best!\\\\\\\" />\\\\n                    <FormControlLabel value=\\\\\\\"worst\\\\\\\" control={<Radio/>} label=\\\\\\\"The worst.\\\\\\\" />\\\\n                </RadioGroup>\\\\n                <FormHelperText>{helperText}</FormHelperText>\\\\n                <Button type='submit' variant='outlined' size='small'>\\\\n                    Check Answer\\\\n                </Button>\\\\n            </form>\\\\n        </PageWrapper>\\\\n    );\\\\n};\\\\n\\\";\\n    // @ts-ignore\\n    var __LOCATIONS_MAP__ = {\\\"Standard\\\":{\\\"startLoc\\\":{\\\"col\\\":24,\\\"line\\\":13},\\\"endLoc\\\":{\\\"col\\\":1,\\\"line\\\":35},\\\"startBody\\\":{\\\"col\\\":24,\\\"line\\\":13},\\\"endBody\\\":{\\\"col\\\":1,\\\"line\\\":35}},\\\"DisabledState\\\":{\\\"startLoc\\\":{\\\"col\\\":29,\\\"line\\\":37},\\\"endLoc\\\":{\\\"col\\\":1,\\\"line\\\":60},\\\"startBody\\\":{\\\"col\\\":29,\\\"line\\\":37},\\\"endBody\\\":{\\\"col\\\":1,\\\"line\\\":60}},\\\"HorizontalLayout\\\":{\\\"startLoc\\\":{\\\"col\\\":32,\\\"line\\\":62},\\\"endLoc\\\":{\\\"col\\\":1,\\\"line\\\":84},\\\"startBody\\\":{\\\"col\\\":32,\\\"line\\\":62},\\\"endBody\\\":{\\\"col\\\":1,\\\"line\\\":84}},\\\"LabelPlacement\\\":{\\\"startLoc\\\":{\\\"col\\\":30,\\\"line\\\":86},\\\"endLoc\\\":{\\\"col\\\":1,\\\"line\\\":109},\\\"startBody\\\":{\\\"col\\\":30,\\\"line\\\":86},\\\"endBody\\\":{\\\"col\\\":1,\\\"line\\\":109}},\\\"PassingRadioProps\\\":{\\\"startLoc\\\":{\\\"col\\\":33,\\\"line\\\":111},\\\"endLoc\\\":{\\\"col\\\":1,\\\"line\\\":137},\\\"startBody\\\":{\\\"col\\\":33,\\\"line\\\":111},\\\"endBody\\\":{\\\"col\\\":1,\\\"line\\\":137}},\\\"ErrorState\\\":{\\\"startLoc\\\":{\\\"col\\\":26,\\\"line\\\":139},\\\"endLoc\\\":{\\\"col\\\":1,\\\"line\\\":184},\\\"startBody\\\":{\\\"col\\\":26,\\\"line\\\":139},\\\"endBody\\\":{\\\"col\\\":1,\\\"line\\\":184}}};\\n    \\nimport React, { useState } from 'react';\\nimport Button from '@material-ui/core/Button';\\nimport RadioGroup, { Radio } from '../Radio';\\n\\nimport { PageWrapper } from '../storybook';\\nimport { FormControlLabel, FormHelperText } from '@material-ui/core';\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"import React, { useState } from 'react';\\\\nimport Button from '@material-ui/core/Button';\\\\nimport RadioGroup, { Radio } from '../Radio';\\\\n\\\\nimport { PageWrapper } from '../storybook';\\\\nimport { FormControlLabel, FormHelperText } from '@material-ui/core';\\\\n\\\\nexport default {\\\\n    title: 'Components/Radio',\\\\n    component: RadioGroup,\\\\n};\\\\n\\\\nexport const Standard = () => {\\\\n    const defaultValue = 'female';\\\\n    const [, setValue] = useState(defaultValue);\\\\n\\\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\\\\n        setValue((event.target as HTMLInputElement).value);\\\\n    };\\\\n\\\\n    return (\\\\n        <PageWrapper>\\\\n            <RadioGroup\\\\n                name='standard-usage'\\\\n                onChange={onChange}\\\\n                label='Standard Usage'\\\\n                defaultValue={defaultValue}\\\\n            >\\\\n                <Radio value='female' label='Female' />\\\\n                <Radio value='male' label='Male' />\\\\n                <Radio value='other' label='Other' />\\\\n            </RadioGroup>\\\\n        </PageWrapper>\\\\n    );\\\\n};\\\\n\\\\nexport const DisabledState = () => {\\\\n    const defaultValue = 'male';\\\\n    const [, setValue] = useState(defaultValue);\\\\n\\\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\\\\n        setValue((event.target as HTMLInputElement).value);\\\\n    };\\\\n\\\\n    return (\\\\n        <PageWrapper>\\\\n            <RadioGroup\\\\n                name='disabled-state'\\\\n                onChange={onChange}\\\\n                label='Disabled State'\\\\n                defaultValue={defaultValue}\\\\n                disabled\\\\n            >\\\\n                <Radio value='female' label='Female' disabled />\\\\n                <Radio value='male' label='Male' disabled />\\\\n                <Radio value='other' label='Other' disabled />\\\\n            </RadioGroup>\\\\n        </PageWrapper>\\\\n    );\\\\n};\\\\n\\\\nexport const HorizontalLayout = () => {\\\\n    const defaultValue = 'female';\\\\n    const [, setValue] = useState(defaultValue);\\\\n\\\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\\\\n        setValue((event.target as HTMLInputElement).value);\\\\n    };\\\\n    return (\\\\n        <PageWrapper>\\\\n            <RadioGroup\\\\n                name='horizontal-layout'\\\\n                onChange={onChange}\\\\n                label='Horizontal layout'\\\\n                defaultValue={defaultValue}\\\\n                row\\\\n            >\\\\n                <Radio value='female' label='Female' />\\\\n                <Radio value='male' label='Male' />\\\\n                <Radio value='other' label='Other' />\\\\n            </RadioGroup>\\\\n        </PageWrapper>\\\\n    );\\\\n};\\\\n\\\\nexport const LabelPlacement = () => {\\\\n    const defaultValue = 'start';\\\\n    const [, setValue] = useState(defaultValue);\\\\n\\\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\\\\n        setValue((event.target as HTMLInputElement).value);\\\\n    };\\\\n    return (\\\\n        <PageWrapper>\\\\n            <RadioGroup\\\\n                name='label-placement'\\\\n                onChange={onChange}\\\\n                label='Label placement'\\\\n                defaultValue={defaultValue}\\\\n                row\\\\n            >\\\\n                <Radio value='top' label='Top' labelPlacement='top' />\\\\n                <Radio value='start' label='Start' labelPlacement='start' />\\\\n                <Radio value='bottom' label='Bottom' labelPlacement='bottom' />\\\\n                <Radio value='end' label='End' labelPlacement='end' />\\\\n            </RadioGroup>\\\\n        </PageWrapper>\\\\n    );\\\\n};\\\\n\\\\nexport const PassingRadioProps = () => {\\\\n    const defaultValue = 'top';\\\\n    const [, setValue] = useState(defaultValue);\\\\n\\\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\\\\n        setValue((event.target as HTMLInputElement).value);\\\\n    };\\\\n    return (\\\\n        <PageWrapper>\\\\n            <RadioGroup\\\\n                name='label-placement'\\\\n                onChange={onChange}\\\\n                label='Use of Radio props'\\\\n                defaultValue={defaultValue}\\\\n            >\\\\n                <Radio\\\\n                    value='top'\\\\n                    label='Disabled ripple, small size radio button'\\\\n                    muiRadioProps={{ disableRipple: true, size: 'small' }}\\\\n                />\\\\n                <Radio value='start' label='Disabled' muiRadioProps={{ disabled: true }} />\\\\n                <Radio value='bottom' label='Default Mui color' muiRadioProps={{ color: 'default' }} />\\\\n                <Radio value='end' label='Without Radio props' />\\\\n            </RadioGroup>\\\\n        </PageWrapper>\\\\n    );\\\\n};\\\\n\\\\nexport const ErrorState = () => {\\\\n    const [value, setValue] = useState('');\\\\n    const [error, setError] = useState(true);\\\\n    const [helperText, setHelperText] = useState('Choose wisely');\\\\n\\\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\\\\n        setValue((event.target as HTMLInputElement).value);\\\\n        setError(false);\\\\n    };\\\\n\\\\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\\\\n        event.preventDefault();\\\\n        if (value === 'best') {\\\\n            setHelperText('You got it!');\\\\n            setError(false);\\\\n        } else if (value === 'worst') {\\\\n            setHelperText('Sorry, wrong answer!');\\\\n            setError(true);\\\\n        } else {\\\\n            setHelperText('Please select an option.');\\\\n            setError(true);\\\\n        }\\\\n    };\\\\n\\\\n    return (\\\\n        <PageWrapper>\\\\n            <form onSubmit={handleSubmit} name='simple-form'>\\\\n                <RadioGroup\\\\n                    name='error-state'\\\\n                    label='Select Black'\\\\n                    value={value}\\\\n                    onChange={onChange}\\\\n                    hasError={error}\\\\n                    message={helperText}\\\\n                >\\\\n                    <FormControlLabel value=\\\\\\\"best\\\\\\\" control={<Radio/>} label=\\\\\\\"The best!\\\\\\\" />\\\\n                    <FormControlLabel value=\\\\\\\"worst\\\\\\\" control={<Radio/>} label=\\\\\\\"The worst.\\\\\\\" />\\\\n                </RadioGroup>\\\\n                <FormHelperText>{helperText}</FormHelperText>\\\\n                <Button type='submit' variant='outlined' size='small'>\\\\n                    Check Answer\\\\n                </Button>\\\\n            </form>\\\\n        </PageWrapper>\\\\n    );\\\\n};\\\\n\\\",\\\"locationsMap\\\":{\\\"standard\\\":{\\\"startLoc\\\":{\\\"col\\\":24,\\\"line\\\":13},\\\"endLoc\\\":{\\\"col\\\":1,\\\"line\\\":35},\\\"startBody\\\":{\\\"col\\\":24,\\\"line\\\":13},\\\"endBody\\\":{\\\"col\\\":1,\\\"line\\\":35}},\\\"disabled-state\\\":{\\\"startLoc\\\":{\\\"col\\\":29,\\\"line\\\":37},\\\"endLoc\\\":{\\\"col\\\":1,\\\"line\\\":60},\\\"startBody\\\":{\\\"col\\\":29,\\\"line\\\":37},\\\"endBody\\\":{\\\"col\\\":1,\\\"line\\\":60}},\\\"horizontal-layout\\\":{\\\"startLoc\\\":{\\\"col\\\":32,\\\"line\\\":62},\\\"endLoc\\\":{\\\"col\\\":1,\\\"line\\\":84},\\\"startBody\\\":{\\\"col\\\":32,\\\"line\\\":62},\\\"endBody\\\":{\\\"col\\\":1,\\\"line\\\":84}},\\\"label-placement\\\":{\\\"startLoc\\\":{\\\"col\\\":30,\\\"line\\\":86},\\\"endLoc\\\":{\\\"col\\\":1,\\\"line\\\":109},\\\"startBody\\\":{\\\"col\\\":30,\\\"line\\\":86},\\\"endBody\\\":{\\\"col\\\":1,\\\"line\\\":109}},\\\"passing-radio-props\\\":{\\\"startLoc\\\":{\\\"col\\\":33,\\\"line\\\":111},\\\"endLoc\\\":{\\\"col\\\":1,\\\"line\\\":137},\\\"startBody\\\":{\\\"col\\\":33,\\\"line\\\":111},\\\"endBody\\\":{\\\"col\\\":1,\\\"line\\\":137}},\\\"error-state\\\":{\\\"startLoc\\\":{\\\"col\\\":26,\\\"line\\\":139},\\\"endLoc\\\":{\\\"col\\\":1,\\\"line\\\":184},\\\"startBody\\\":{\\\"col\\\":26,\\\"line\\\":139},\\\"endBody\\\":{\\\"col\\\":1,\\\"line\\\":184}}}},},\\n    title: 'Components/Radio',\\n    component: RadioGroup,\\n};\\n\\nexport const Standard = () => {\\n    const defaultValue = 'female';\\n    const [, setValue] = useState(defaultValue);\\n\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\\n        setValue((event.target as HTMLInputElement).value);\\n    };\\n\\n    return (\\n        <PageWrapper>\\n            <RadioGroup\\n                name='standard-usage'\\n                onChange={onChange}\\n                label='Standard Usage'\\n                defaultValue={defaultValue}\\n            >\\n                <Radio value='female' label='Female' />\\n                <Radio value='male' label='Male' />\\n                <Radio value='other' label='Other' />\\n            </RadioGroup>\\n        </PageWrapper>\\n    );\\n};;\\n\\nexport const DisabledState = () => {\\n    const defaultValue = 'male';\\n    const [, setValue] = useState(defaultValue);\\n\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\\n        setValue((event.target as HTMLInputElement).value);\\n    };\\n\\n    return (\\n        <PageWrapper>\\n            <RadioGroup\\n                name='disabled-state'\\n                onChange={onChange}\\n                label='Disabled State'\\n                defaultValue={defaultValue}\\n                disabled\\n            >\\n                <Radio value='female' label='Female' disabled />\\n                <Radio value='male' label='Male' disabled />\\n                <Radio value='other' label='Other' disabled />\\n            </RadioGroup>\\n        </PageWrapper>\\n    );\\n};;\\n\\nexport const HorizontalLayout = () => {\\n    const defaultValue = 'female';\\n    const [, setValue] = useState(defaultValue);\\n\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\\n        setValue((event.target as HTMLInputElement).value);\\n    };\\n    return (\\n        <PageWrapper>\\n            <RadioGroup\\n                name='horizontal-layout'\\n                onChange={onChange}\\n                label='Horizontal layout'\\n                defaultValue={defaultValue}\\n                row\\n            >\\n                <Radio value='female' label='Female' />\\n                <Radio value='male' label='Male' />\\n                <Radio value='other' label='Other' />\\n            </RadioGroup>\\n        </PageWrapper>\\n    );\\n};;\\n\\nexport const LabelPlacement = () => {\\n    const defaultValue = 'start';\\n    const [, setValue] = useState(defaultValue);\\n\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\\n        setValue((event.target as HTMLInputElement).value);\\n    };\\n    return (\\n        <PageWrapper>\\n            <RadioGroup\\n                name='label-placement'\\n                onChange={onChange}\\n                label='Label placement'\\n                defaultValue={defaultValue}\\n                row\\n            >\\n                <Radio value='top' label='Top' labelPlacement='top' />\\n                <Radio value='start' label='Start' labelPlacement='start' />\\n                <Radio value='bottom' label='Bottom' labelPlacement='bottom' />\\n                <Radio value='end' label='End' labelPlacement='end' />\\n            </RadioGroup>\\n        </PageWrapper>\\n    );\\n};;\\n\\nexport const PassingRadioProps = () => {\\n    const defaultValue = 'top';\\n    const [, setValue] = useState(defaultValue);\\n\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\\n        setValue((event.target as HTMLInputElement).value);\\n    };\\n    return (\\n        <PageWrapper>\\n            <RadioGroup\\n                name='label-placement'\\n                onChange={onChange}\\n                label='Use of Radio props'\\n                defaultValue={defaultValue}\\n            >\\n                <Radio\\n                    value='top'\\n                    label='Disabled ripple, small size radio button'\\n                    muiRadioProps={{ disableRipple: true, size: 'small' }}\\n                />\\n                <Radio value='start' label='Disabled' muiRadioProps={{ disabled: true }} />\\n                <Radio value='bottom' label='Default Mui color' muiRadioProps={{ color: 'default' }} />\\n                <Radio value='end' label='Without Radio props' />\\n            </RadioGroup>\\n        </PageWrapper>\\n    );\\n};;\\n\\nexport const ErrorState = () => {\\n    const [value, setValue] = useState('');\\n    const [error, setError] = useState(true);\\n    const [helperText, setHelperText] = useState('Choose wisely');\\n\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\\n        setValue((event.target as HTMLInputElement).value);\\n        setError(false);\\n    };\\n\\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\\n        event.preventDefault();\\n        if (value === 'best') {\\n            setHelperText('You got it!');\\n            setError(false);\\n        } else if (value === 'worst') {\\n            setHelperText('Sorry, wrong answer!');\\n            setError(true);\\n        } else {\\n            setHelperText('Please select an option.');\\n            setError(true);\\n        }\\n    };\\n\\n    return (\\n        <PageWrapper>\\n            <form onSubmit={handleSubmit} name='simple-form'>\\n                <RadioGroup\\n                    name='error-state'\\n                    label='Select Black'\\n                    value={value}\\n                    onChange={onChange}\\n                    hasError={error}\\n                    message={helperText}\\n                >\\n                    <FormControlLabel value=\\\"best\\\" control={<Radio/>} label=\\\"The best!\\\" />\\n                    <FormControlLabel value=\\\"worst\\\" control={<Radio/>} label=\\\"The worst.\\\" />\\n                </RadioGroup>\\n                <FormHelperText>{helperText}</FormHelperText>\\n                <Button type='submit' variant='outlined' size='small'>\\n                    Check Answer\\n                </Button>\\n            </form>\\n        </PageWrapper>\\n    );\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Standard\":{\"startLoc\":{\"col\":24,\"line\":21},\"endLoc\":{\"col\":1,\"line\":43},\"startBody\":{\"col\":24,\"line\":21},\"endBody\":{\"col\":1,\"line\":43}},\"DisabledState\":{\"startLoc\":{\"col\":29,\"line\":45},\"endLoc\":{\"col\":1,\"line\":68},\"startBody\":{\"col\":29,\"line\":45},\"endBody\":{\"col\":1,\"line\":68}},\"HorizontalLayout\":{\"startLoc\":{\"col\":32,\"line\":70},\"endLoc\":{\"col\":1,\"line\":92},\"startBody\":{\"col\":32,\"line\":70},\"endBody\":{\"col\":1,\"line\":92}},\"LabelPlacement\":{\"startLoc\":{\"col\":30,\"line\":94},\"endLoc\":{\"col\":1,\"line\":117},\"startBody\":{\"col\":30,\"line\":94},\"endBody\":{\"col\":1,\"line\":117}},\"PassingRadioProps\":{\"startLoc\":{\"col\":33,\"line\":119},\"endLoc\":{\"col\":1,\"line\":145},\"startBody\":{\"col\":33,\"line\":119},\"endBody\":{\"col\":1,\"line\":145}},\"ErrorState\":{\"startLoc\":{\"col\":26,\"line\":147},\"endLoc\":{\"col\":1,\"line\":192},\"startBody\":{\"col\":26,\"line\":147},\"endBody\":{\"col\":1,\"line\":192}}};\n    \n\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React, { useState } from 'react';\\nimport Button from '@material-ui/core/Button';\\nimport RadioGroup, { Radio } from '../Radio';\\n\\nimport { PageWrapper } from '../storybook';\\nimport { FormControlLabel, FormHelperText } from '@material-ui/core';\\n\\nexport default {\\n    title: 'Components/Radio',\\n    component: RadioGroup,\\n};\\n\\nexport const Standard = () => {\\n    const defaultValue = 'female';\\n    const [, setValue] = useState(defaultValue);\\n\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\\n        setValue((event.target as HTMLInputElement).value);\\n    };\\n\\n    return (\\n        <PageWrapper>\\n            <RadioGroup\\n                name='standard-usage'\\n                onChange={onChange}\\n                label='Standard Usage'\\n                defaultValue={defaultValue}\\n            >\\n                <Radio value='female' label='Female' />\\n                <Radio value='male' label='Male' />\\n                <Radio value='other' label='Other' />\\n            </RadioGroup>\\n        </PageWrapper>\\n    );\\n};\\n\\nexport const DisabledState = () => {\\n    const defaultValue = 'male';\\n    const [, setValue] = useState(defaultValue);\\n\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\\n        setValue((event.target as HTMLInputElement).value);\\n    };\\n\\n    return (\\n        <PageWrapper>\\n            <RadioGroup\\n                name='disabled-state'\\n                onChange={onChange}\\n                label='Disabled State'\\n                defaultValue={defaultValue}\\n                disabled\\n            >\\n                <Radio value='female' label='Female' disabled />\\n                <Radio value='male' label='Male' disabled />\\n                <Radio value='other' label='Other' disabled />\\n            </RadioGroup>\\n        </PageWrapper>\\n    );\\n};\\n\\nexport const HorizontalLayout = () => {\\n    const defaultValue = 'female';\\n    const [, setValue] = useState(defaultValue);\\n\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\\n        setValue((event.target as HTMLInputElement).value);\\n    };\\n    return (\\n        <PageWrapper>\\n            <RadioGroup\\n                name='horizontal-layout'\\n                onChange={onChange}\\n                label='Horizontal layout'\\n                defaultValue={defaultValue}\\n                row\\n            >\\n                <Radio value='female' label='Female' />\\n                <Radio value='male' label='Male' />\\n                <Radio value='other' label='Other' />\\n            </RadioGroup>\\n        </PageWrapper>\\n    );\\n};\\n\\nexport const LabelPlacement = () => {\\n    const defaultValue = 'start';\\n    const [, setValue] = useState(defaultValue);\\n\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\\n        setValue((event.target as HTMLInputElement).value);\\n    };\\n    return (\\n        <PageWrapper>\\n            <RadioGroup\\n                name='label-placement'\\n                onChange={onChange}\\n                label='Label placement'\\n                defaultValue={defaultValue}\\n                row\\n            >\\n                <Radio value='top' label='Top' labelPlacement='top' />\\n                <Radio value='start' label='Start' labelPlacement='start' />\\n                <Radio value='bottom' label='Bottom' labelPlacement='bottom' />\\n                <Radio value='end' label='End' labelPlacement='end' />\\n            </RadioGroup>\\n        </PageWrapper>\\n    );\\n};\\n\\nexport const PassingRadioProps = () => {\\n    const defaultValue = 'top';\\n    const [, setValue] = useState(defaultValue);\\n\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\\n        setValue((event.target as HTMLInputElement).value);\\n    };\\n    return (\\n        <PageWrapper>\\n            <RadioGroup\\n                name='label-placement'\\n                onChange={onChange}\\n                label='Use of Radio props'\\n                defaultValue={defaultValue}\\n            >\\n                <Radio\\n                    value='top'\\n                    label='Disabled ripple, small size radio button'\\n                    muiRadioProps={{ disableRipple: true, size: 'small' }}\\n                />\\n                <Radio value='start' label='Disabled' muiRadioProps={{ disabled: true }} />\\n                <Radio value='bottom' label='Default Mui color' muiRadioProps={{ color: 'default' }} />\\n                <Radio value='end' label='Without Radio props' />\\n            </RadioGroup>\\n        </PageWrapper>\\n    );\\n};\\n\\nexport const ErrorState = () => {\\n    const [value, setValue] = useState('');\\n    const [error, setError] = useState(true);\\n    const [helperText, setHelperText] = useState('Choose wisely');\\n\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\\n        setValue((event.target as HTMLInputElement).value);\\n        setError(false);\\n    };\\n\\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\\n        event.preventDefault();\\n        if (value === 'best') {\\n            setHelperText('You got it!');\\n            setError(false);\\n        } else if (value === 'worst') {\\n            setHelperText('Sorry, wrong answer!');\\n            setError(true);\\n        } else {\\n            setHelperText('Please select an option.');\\n            setError(true);\\n        }\\n    };\\n\\n    return (\\n        <PageWrapper>\\n            <form onSubmit={handleSubmit} name='simple-form'>\\n                <RadioGroup\\n                    name='error-state'\\n                    label='Select Black'\\n                    value={value}\\n                    onChange={onChange}\\n                    hasError={error}\\n                    message={helperText}\\n                >\\n                    <FormControlLabel value=\\\"best\\\" control={<Radio/>} label=\\\"The best!\\\" />\\n                    <FormControlLabel value=\\\"worst\\\" control={<Radio/>} label=\\\"The worst.\\\" />\\n                </RadioGroup>\\n                <FormHelperText>{helperText}</FormHelperText>\\n                <Button type='submit' variant='outlined' size='small'>\\n                    Check Answer\\n                </Button>\\n            </form>\\n        </PageWrapper>\\n    );\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Standard\":{\"startLoc\":{\"col\":24,\"line\":13},\"endLoc\":{\"col\":1,\"line\":35},\"startBody\":{\"col\":24,\"line\":13},\"endBody\":{\"col\":1,\"line\":35}},\"DisabledState\":{\"startLoc\":{\"col\":29,\"line\":37},\"endLoc\":{\"col\":1,\"line\":60},\"startBody\":{\"col\":29,\"line\":37},\"endBody\":{\"col\":1,\"line\":60}},\"HorizontalLayout\":{\"startLoc\":{\"col\":32,\"line\":62},\"endLoc\":{\"col\":1,\"line\":84},\"startBody\":{\"col\":32,\"line\":62},\"endBody\":{\"col\":1,\"line\":84}},\"LabelPlacement\":{\"startLoc\":{\"col\":30,\"line\":86},\"endLoc\":{\"col\":1,\"line\":109},\"startBody\":{\"col\":30,\"line\":86},\"endBody\":{\"col\":1,\"line\":109}},\"PassingRadioProps\":{\"startLoc\":{\"col\":33,\"line\":111},\"endLoc\":{\"col\":1,\"line\":137},\"startBody\":{\"col\":33,\"line\":111},\"endBody\":{\"col\":1,\"line\":137}},\"ErrorState\":{\"startLoc\":{\"col\":26,\"line\":139},\"endLoc\":{\"col\":1,\"line\":184},\"startBody\":{\"col\":26,\"line\":139},\"endBody\":{\"col\":1,\"line\":184}}};\n    \nimport React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport RadioGroup, { Radio } from '../Radio';\n\nimport { PageWrapper } from '../storybook';\nimport { FormControlLabel, FormHelperText } from '@material-ui/core';\n\nexport default {parameters: {\"storySource\":{\"source\":\"import React, { useState } from 'react';\\nimport Button from '@material-ui/core/Button';\\nimport RadioGroup, { Radio } from '../Radio';\\n\\nimport { PageWrapper } from '../storybook';\\nimport { FormControlLabel, FormHelperText } from '@material-ui/core';\\n\\nexport default {\\n    title: 'Components/Radio',\\n    component: RadioGroup,\\n};\\n\\nexport const Standard = () => {\\n    const defaultValue = 'female';\\n    const [, setValue] = useState(defaultValue);\\n\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\\n        setValue((event.target as HTMLInputElement).value);\\n    };\\n\\n    return (\\n        <PageWrapper>\\n            <RadioGroup\\n                name='standard-usage'\\n                onChange={onChange}\\n                label='Standard Usage'\\n                defaultValue={defaultValue}\\n            >\\n                <Radio value='female' label='Female' />\\n                <Radio value='male' label='Male' />\\n                <Radio value='other' label='Other' />\\n            </RadioGroup>\\n        </PageWrapper>\\n    );\\n};\\n\\nexport const DisabledState = () => {\\n    const defaultValue = 'male';\\n    const [, setValue] = useState(defaultValue);\\n\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\\n        setValue((event.target as HTMLInputElement).value);\\n    };\\n\\n    return (\\n        <PageWrapper>\\n            <RadioGroup\\n                name='disabled-state'\\n                onChange={onChange}\\n                label='Disabled State'\\n                defaultValue={defaultValue}\\n                disabled\\n            >\\n                <Radio value='female' label='Female' disabled />\\n                <Radio value='male' label='Male' disabled />\\n                <Radio value='other' label='Other' disabled />\\n            </RadioGroup>\\n        </PageWrapper>\\n    );\\n};\\n\\nexport const HorizontalLayout = () => {\\n    const defaultValue = 'female';\\n    const [, setValue] = useState(defaultValue);\\n\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\\n        setValue((event.target as HTMLInputElement).value);\\n    };\\n    return (\\n        <PageWrapper>\\n            <RadioGroup\\n                name='horizontal-layout'\\n                onChange={onChange}\\n                label='Horizontal layout'\\n                defaultValue={defaultValue}\\n                row\\n            >\\n                <Radio value='female' label='Female' />\\n                <Radio value='male' label='Male' />\\n                <Radio value='other' label='Other' />\\n            </RadioGroup>\\n        </PageWrapper>\\n    );\\n};\\n\\nexport const LabelPlacement = () => {\\n    const defaultValue = 'start';\\n    const [, setValue] = useState(defaultValue);\\n\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\\n        setValue((event.target as HTMLInputElement).value);\\n    };\\n    return (\\n        <PageWrapper>\\n            <RadioGroup\\n                name='label-placement'\\n                onChange={onChange}\\n                label='Label placement'\\n                defaultValue={defaultValue}\\n                row\\n            >\\n                <Radio value='top' label='Top' labelPlacement='top' />\\n                <Radio value='start' label='Start' labelPlacement='start' />\\n                <Radio value='bottom' label='Bottom' labelPlacement='bottom' />\\n                <Radio value='end' label='End' labelPlacement='end' />\\n            </RadioGroup>\\n        </PageWrapper>\\n    );\\n};\\n\\nexport const PassingRadioProps = () => {\\n    const defaultValue = 'top';\\n    const [, setValue] = useState(defaultValue);\\n\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\\n        setValue((event.target as HTMLInputElement).value);\\n    };\\n    return (\\n        <PageWrapper>\\n            <RadioGroup\\n                name='label-placement'\\n                onChange={onChange}\\n                label='Use of Radio props'\\n                defaultValue={defaultValue}\\n            >\\n                <Radio\\n                    value='top'\\n                    label='Disabled ripple, small size radio button'\\n                    muiRadioProps={{ disableRipple: true, size: 'small' }}\\n                />\\n                <Radio value='start' label='Disabled' muiRadioProps={{ disabled: true }} />\\n                <Radio value='bottom' label='Default Mui color' muiRadioProps={{ color: 'default' }} />\\n                <Radio value='end' label='Without Radio props' />\\n            </RadioGroup>\\n        </PageWrapper>\\n    );\\n};\\n\\nexport const ErrorState = () => {\\n    const [value, setValue] = useState('');\\n    const [error, setError] = useState(true);\\n    const [helperText, setHelperText] = useState('Choose wisely');\\n\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\\n        setValue((event.target as HTMLInputElement).value);\\n        setError(false);\\n    };\\n\\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\\n        event.preventDefault();\\n        if (value === 'best') {\\n            setHelperText('You got it!');\\n            setError(false);\\n        } else if (value === 'worst') {\\n            setHelperText('Sorry, wrong answer!');\\n            setError(true);\\n        } else {\\n            setHelperText('Please select an option.');\\n            setError(true);\\n        }\\n    };\\n\\n    return (\\n        <PageWrapper>\\n            <form onSubmit={handleSubmit} name='simple-form'>\\n                <RadioGroup\\n                    name='error-state'\\n                    label='Select Black'\\n                    value={value}\\n                    onChange={onChange}\\n                    hasError={error}\\n                    message={helperText}\\n                >\\n                    <FormControlLabel value=\\\"best\\\" control={<Radio/>} label=\\\"The best!\\\" />\\n                    <FormControlLabel value=\\\"worst\\\" control={<Radio/>} label=\\\"The worst.\\\" />\\n                </RadioGroup>\\n                <FormHelperText>{helperText}</FormHelperText>\\n                <Button type='submit' variant='outlined' size='small'>\\n                    Check Answer\\n                </Button>\\n            </form>\\n        </PageWrapper>\\n    );\\n};\\n\",\"locationsMap\":{\"standard\":{\"startLoc\":{\"col\":24,\"line\":13},\"endLoc\":{\"col\":1,\"line\":35},\"startBody\":{\"col\":24,\"line\":13},\"endBody\":{\"col\":1,\"line\":35}},\"disabled-state\":{\"startLoc\":{\"col\":29,\"line\":37},\"endLoc\":{\"col\":1,\"line\":60},\"startBody\":{\"col\":29,\"line\":37},\"endBody\":{\"col\":1,\"line\":60}},\"horizontal-layout\":{\"startLoc\":{\"col\":32,\"line\":62},\"endLoc\":{\"col\":1,\"line\":84},\"startBody\":{\"col\":32,\"line\":62},\"endBody\":{\"col\":1,\"line\":84}},\"label-placement\":{\"startLoc\":{\"col\":30,\"line\":86},\"endLoc\":{\"col\":1,\"line\":109},\"startBody\":{\"col\":30,\"line\":86},\"endBody\":{\"col\":1,\"line\":109}},\"passing-radio-props\":{\"startLoc\":{\"col\":33,\"line\":111},\"endLoc\":{\"col\":1,\"line\":137},\"startBody\":{\"col\":33,\"line\":111},\"endBody\":{\"col\":1,\"line\":137}},\"error-state\":{\"startLoc\":{\"col\":26,\"line\":139},\"endLoc\":{\"col\":1,\"line\":184},\"startBody\":{\"col\":26,\"line\":139},\"endBody\":{\"col\":1,\"line\":184}}}},},\n    title: 'Components/Radio',\n    component: RadioGroup,\n};\n\nexport const Standard = () => {\n    const defaultValue = 'female';\n    const [, setValue] = useState(defaultValue);\n\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n        setValue((event.target as HTMLInputElement).value);\n    };\n\n    return (\n        <PageWrapper>\n            <RadioGroup\n                name='standard-usage'\n                onChange={onChange}\n                label='Standard Usage'\n                defaultValue={defaultValue}\n            >\n                <Radio value='female' label='Female' />\n                <Radio value='male' label='Male' />\n                <Radio value='other' label='Other' />\n            </RadioGroup>\n        </PageWrapper>\n    );\n};;;\n\nexport const DisabledState = () => {\n    const defaultValue = 'male';\n    const [, setValue] = useState(defaultValue);\n\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n        setValue((event.target as HTMLInputElement).value);\n    };\n\n    return (\n        <PageWrapper>\n            <RadioGroup\n                name='disabled-state'\n                onChange={onChange}\n                label='Disabled State'\n                defaultValue={defaultValue}\n                disabled\n            >\n                <Radio value='female' label='Female' disabled />\n                <Radio value='male' label='Male' disabled />\n                <Radio value='other' label='Other' disabled />\n            </RadioGroup>\n        </PageWrapper>\n    );\n};;;\n\nexport const HorizontalLayout = () => {\n    const defaultValue = 'female';\n    const [, setValue] = useState(defaultValue);\n\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValue((event.target as HTMLInputElement).value);\n    };\n    return (\n        <PageWrapper>\n            <RadioGroup\n                name='horizontal-layout'\n                onChange={onChange}\n                label='Horizontal layout'\n                defaultValue={defaultValue}\n                row\n            >\n                <Radio value='female' label='Female' />\n                <Radio value='male' label='Male' />\n                <Radio value='other' label='Other' />\n            </RadioGroup>\n        </PageWrapper>\n    );\n};;;\n\nexport const LabelPlacement = () => {\n    const defaultValue = 'start';\n    const [, setValue] = useState(defaultValue);\n\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValue((event.target as HTMLInputElement).value);\n    };\n    return (\n        <PageWrapper>\n            <RadioGroup\n                name='label-placement'\n                onChange={onChange}\n                label='Label placement'\n                defaultValue={defaultValue}\n                row\n            >\n                <Radio value='top' label='Top' labelPlacement='top' />\n                <Radio value='start' label='Start' labelPlacement='start' />\n                <Radio value='bottom' label='Bottom' labelPlacement='bottom' />\n                <Radio value='end' label='End' labelPlacement='end' />\n            </RadioGroup>\n        </PageWrapper>\n    );\n};;;\n\nexport const PassingRadioProps = () => {\n    const defaultValue = 'top';\n    const [, setValue] = useState(defaultValue);\n\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValue((event.target as HTMLInputElement).value);\n    };\n    return (\n        <PageWrapper>\n            <RadioGroup\n                name='label-placement'\n                onChange={onChange}\n                label='Use of Radio props'\n                defaultValue={defaultValue}\n            >\n                <Radio\n                    value='top'\n                    label='Disabled ripple, small size radio button'\n                    muiRadioProps={{ disableRipple: true, size: 'small' }}\n                />\n                <Radio value='start' label='Disabled' muiRadioProps={{ disabled: true }} />\n                <Radio value='bottom' label='Default Mui color' muiRadioProps={{ color: 'default' }} />\n                <Radio value='end' label='Without Radio props' />\n            </RadioGroup>\n        </PageWrapper>\n    );\n};;;\n\nexport const ErrorState = () => {\n    const [value, setValue] = useState('');\n    const [error, setError] = useState(true);\n    const [helperText, setHelperText] = useState('Choose wisely');\n\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValue((event.target as HTMLInputElement).value);\n        setError(false);\n    };\n\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        if (value === 'best') {\n            setHelperText('You got it!');\n            setError(false);\n        } else if (value === 'worst') {\n            setHelperText('Sorry, wrong answer!');\n            setError(true);\n        } else {\n            setHelperText('Please select an option.');\n            setError(true);\n        }\n    };\n\n    return (\n        <PageWrapper>\n            <form onSubmit={handleSubmit} name='simple-form'>\n                <RadioGroup\n                    name='error-state'\n                    label='Select Black'\n                    value={value}\n                    onChange={onChange}\n                    hasError={error}\n                    message={helperText}\n                >\n                    <FormControlLabel value=\"best\" control={<Radio/>} label=\"The best!\" />\n                    <FormControlLabel value=\"worst\" control={<Radio/>} label=\"The worst.\" />\n                </RadioGroup>\n                <FormHelperText>{helperText}</FormHelperText>\n                <Button type='submit' variant='outlined' size='small'>\n                    Check Answer\n                </Button>\n            </form>\n        </PageWrapper>\n    );\n};\n\n\n\nStandard.parameters = { storySource: { source: \"() => {\\n    const defaultValue = 'female';\\n    const [, setValue] = useState(defaultValue);\\n\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\\n        setValue((event.target as HTMLInputElement).value);\\n    };\\n\\n    return (\\n        <PageWrapper>\\n            <RadioGroup\\n                name='standard-usage'\\n                onChange={onChange}\\n                label='Standard Usage'\\n                defaultValue={defaultValue}\\n            >\\n                <Radio value='female' label='Female' />\\n                <Radio value='male' label='Male' />\\n                <Radio value='other' label='Other' />\\n            </RadioGroup>\\n        </PageWrapper>\\n    );\\n}\" }, ...Standard.parameters };\nDisabledState.parameters = { storySource: { source: \"() => {\\n    const defaultValue = 'male';\\n    const [, setValue] = useState(defaultValue);\\n\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\\n        setValue((event.target as HTMLInputElement).value);\\n    };\\n\\n    return (\\n        <PageWrapper>\\n            <RadioGroup\\n                name='disabled-state'\\n                onChange={onChange}\\n                label='Disabled State'\\n                defaultValue={defaultValue}\\n                disabled\\n            >\\n                <Radio value='female' label='Female' disabled />\\n                <Radio value='male' label='Male' disabled />\\n                <Radio value='other' label='Other' disabled />\\n            </RadioGroup>\\n        </PageWrapper>\\n    );\\n}\" }, ...DisabledState.parameters };\nHorizontalLayout.parameters = { storySource: { source: \"() => {\\n    const defaultValue = 'female';\\n    const [, setValue] = useState(defaultValue);\\n\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\\n        setValue((event.target as HTMLInputElement).value);\\n    };\\n    return (\\n        <PageWrapper>\\n            <RadioGroup\\n                name='horizontal-layout'\\n                onChange={onChange}\\n                label='Horizontal layout'\\n                defaultValue={defaultValue}\\n                row\\n            >\\n                <Radio value='female' label='Female' />\\n                <Radio value='male' label='Male' />\\n                <Radio value='other' label='Other' />\\n            </RadioGroup>\\n        </PageWrapper>\\n    );\\n}\" }, ...HorizontalLayout.parameters };\nLabelPlacement.parameters = { storySource: { source: \"() => {\\n    const defaultValue = 'start';\\n    const [, setValue] = useState(defaultValue);\\n\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\\n        setValue((event.target as HTMLInputElement).value);\\n    };\\n    return (\\n        <PageWrapper>\\n            <RadioGroup\\n                name='label-placement'\\n                onChange={onChange}\\n                label='Label placement'\\n                defaultValue={defaultValue}\\n                row\\n            >\\n                <Radio value='top' label='Top' labelPlacement='top' />\\n                <Radio value='start' label='Start' labelPlacement='start' />\\n                <Radio value='bottom' label='Bottom' labelPlacement='bottom' />\\n                <Radio value='end' label='End' labelPlacement='end' />\\n            </RadioGroup>\\n        </PageWrapper>\\n    );\\n}\" }, ...LabelPlacement.parameters };\nPassingRadioProps.parameters = { storySource: { source: \"() => {\\n    const defaultValue = 'top';\\n    const [, setValue] = useState(defaultValue);\\n\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\\n        setValue((event.target as HTMLInputElement).value);\\n    };\\n    return (\\n        <PageWrapper>\\n            <RadioGroup\\n                name='label-placement'\\n                onChange={onChange}\\n                label='Use of Radio props'\\n                defaultValue={defaultValue}\\n            >\\n                <Radio\\n                    value='top'\\n                    label='Disabled ripple, small size radio button'\\n                    muiRadioProps={{ disableRipple: true, size: 'small' }}\\n                />\\n                <Radio value='start' label='Disabled' muiRadioProps={{ disabled: true }} />\\n                <Radio value='bottom' label='Default Mui color' muiRadioProps={{ color: 'default' }} />\\n                <Radio value='end' label='Without Radio props' />\\n            </RadioGroup>\\n        </PageWrapper>\\n    );\\n}\" }, ...PassingRadioProps.parameters };\nErrorState.parameters = { storySource: { source: \"() => {\\n    const [value, setValue] = useState('');\\n    const [error, setError] = useState(true);\\n    const [helperText, setHelperText] = useState('Choose wisely');\\n\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\\n        setValue((event.target as HTMLInputElement).value);\\n        setError(false);\\n    };\\n\\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\\n        event.preventDefault();\\n        if (value === 'best') {\\n            setHelperText('You got it!');\\n            setError(false);\\n        } else if (value === 'worst') {\\n            setHelperText('Sorry, wrong answer!');\\n            setError(true);\\n        } else {\\n            setHelperText('Please select an option.');\\n            setError(true);\\n        }\\n    };\\n\\n    return (\\n        <PageWrapper>\\n            <form onSubmit={handleSubmit} name='simple-form'>\\n                <RadioGroup\\n                    name='error-state'\\n                    label='Select Black'\\n                    value={value}\\n                    onChange={onChange}\\n                    hasError={error}\\n                    message={helperText}\\n                >\\n                    <FormControlLabel value=\\\"best\\\" control={<Radio/>} label=\\\"The best!\\\" />\\n                    <FormControlLabel value=\\\"worst\\\" control={<Radio/>} label=\\\"The worst.\\\" />\\n                </RadioGroup>\\n                <FormHelperText>{helperText}</FormHelperText>\\n                <Button type='submit' variant='outlined' size='small'>\\n                    Check Answer\\n                </Button>\\n            </form>\\n        </PageWrapper>\\n    );\\n}\" }, ...ErrorState.parameters };",locationsMap:{standard:{startLoc:{col:24,line:29},endLoc:{col:1,line:51},startBody:{col:24,line:29},endBody:{col:1,line:51}},"disabled-state":{startLoc:{col:29,line:53},endLoc:{col:1,line:76},startBody:{col:29,line:53},endBody:{col:1,line:76}},"horizontal-layout":{startLoc:{col:32,line:78},endLoc:{col:1,line:100},startBody:{col:32,line:78},endBody:{col:1,line:100}},"label-placement":{startLoc:{col:30,line:102},endLoc:{col:1,line:125},startBody:{col:30,line:102},endBody:{col:1,line:125}},"passing-radio-props":{startLoc:{col:33,line:127},endLoc:{col:1,line:153},startBody:{col:33,line:127},endBody:{col:1,line:153}},"error-state":{startLoc:{col:26,line:155},endLoc:{col:1,line:200},startBody:{col:26,line:155},endBody:{col:1,line:200}}}}},"storySource",{source:"import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport RadioGroup, { Radio } from '../Radio';\n\nimport { PageWrapper } from '../storybook';\nimport { FormControlLabel, FormHelperText } from '@material-ui/core';\n\nexport default {\n    title: 'Components/Radio',\n    component: RadioGroup,\n};\n\nexport const Standard = () => {\n    const defaultValue = 'female';\n    const [, setValue] = useState(defaultValue);\n\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n        setValue((event.target as HTMLInputElement).value);\n    };\n\n    return (\n        <PageWrapper>\n            <RadioGroup\n                name='standard-usage'\n                onChange={onChange}\n                label='Standard Usage'\n                defaultValue={defaultValue}\n            >\n                <Radio value='female' label='Female' />\n                <Radio value='male' label='Male' />\n                <Radio value='other' label='Other' />\n            </RadioGroup>\n        </PageWrapper>\n    );\n};\n\nexport const DisabledState = () => {\n    const defaultValue = 'male';\n    const [, setValue] = useState(defaultValue);\n\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n        setValue((event.target as HTMLInputElement).value);\n    };\n\n    return (\n        <PageWrapper>\n            <RadioGroup\n                name='disabled-state'\n                onChange={onChange}\n                label='Disabled State'\n                defaultValue={defaultValue}\n                disabled\n            >\n                <Radio value='female' label='Female' disabled />\n                <Radio value='male' label='Male' disabled />\n                <Radio value='other' label='Other' disabled />\n            </RadioGroup>\n        </PageWrapper>\n    );\n};\n\nexport const HorizontalLayout = () => {\n    const defaultValue = 'female';\n    const [, setValue] = useState(defaultValue);\n\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValue((event.target as HTMLInputElement).value);\n    };\n    return (\n        <PageWrapper>\n            <RadioGroup\n                name='horizontal-layout'\n                onChange={onChange}\n                label='Horizontal layout'\n                defaultValue={defaultValue}\n                row\n            >\n                <Radio value='female' label='Female' />\n                <Radio value='male' label='Male' />\n                <Radio value='other' label='Other' />\n            </RadioGroup>\n        </PageWrapper>\n    );\n};\n\nexport const LabelPlacement = () => {\n    const defaultValue = 'start';\n    const [, setValue] = useState(defaultValue);\n\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValue((event.target as HTMLInputElement).value);\n    };\n    return (\n        <PageWrapper>\n            <RadioGroup\n                name='label-placement'\n                onChange={onChange}\n                label='Label placement'\n                defaultValue={defaultValue}\n                row\n            >\n                <Radio value='top' label='Top' labelPlacement='top' />\n                <Radio value='start' label='Start' labelPlacement='start' />\n                <Radio value='bottom' label='Bottom' labelPlacement='bottom' />\n                <Radio value='end' label='End' labelPlacement='end' />\n            </RadioGroup>\n        </PageWrapper>\n    );\n};\n\nexport const PassingRadioProps = () => {\n    const defaultValue = 'top';\n    const [, setValue] = useState(defaultValue);\n\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValue((event.target as HTMLInputElement).value);\n    };\n    return (\n        <PageWrapper>\n            <RadioGroup\n                name='label-placement'\n                onChange={onChange}\n                label='Use of Radio props'\n                defaultValue={defaultValue}\n            >\n                <Radio\n                    value='top'\n                    label='Disabled ripple, small size radio button'\n                    muiRadioProps={{ disableRipple: true, size: 'small' }}\n                />\n                <Radio value='start' label='Disabled' muiRadioProps={{ disabled: true }} />\n                <Radio value='bottom' label='Default Mui color' muiRadioProps={{ color: 'default' }} />\n                <Radio value='end' label='Without Radio props' />\n            </RadioGroup>\n        </PageWrapper>\n    );\n};\n\nexport const ErrorState = () => {\n    const [value, setValue] = useState('');\n    const [error, setError] = useState(true);\n    const [helperText, setHelperText] = useState('Choose wisely');\n\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValue((event.target as HTMLInputElement).value);\n        setError(false);\n    };\n\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        if (value === 'best') {\n            setHelperText('You got it!');\n            setError(false);\n        } else if (value === 'worst') {\n            setHelperText('Sorry, wrong answer!');\n            setError(true);\n        } else {\n            setHelperText('Please select an option.');\n            setError(true);\n        }\n    };\n\n    return (\n        <PageWrapper>\n            <form onSubmit={handleSubmit} name='simple-form'>\n                <RadioGroup\n                    name='error-state'\n                    label='Select Black'\n                    value={value}\n                    onChange={onChange}\n                    hasError={error}\n                    message={helperText}\n                >\n                    <FormControlLabel value=\"best\" control={<Radio/>} label=\"The best!\" />\n                    <FormControlLabel value=\"worst\" control={<Radio/>} label=\"The worst.\" />\n                </RadioGroup>\n                <FormHelperText>{helperText}</FormHelperText>\n                <Button type='submit' variant='outlined' size='small'>\n                    Check Answer\n                </Button>\n            </form>\n        </PageWrapper>\n    );\n};\n",locationsMap:{standard:{startLoc:{col:24,line:13},endLoc:{col:1,line:35},startBody:{col:24,line:13},endBody:{col:1,line:35}},"disabled-state":{startLoc:{col:29,line:37},endLoc:{col:1,line:60},startBody:{col:29,line:37},endBody:{col:1,line:60}},"horizontal-layout":{startLoc:{col:32,line:62},endLoc:{col:1,line:84},startBody:{col:32,line:62},endBody:{col:1,line:84}},"label-placement":{startLoc:{col:30,line:86},endLoc:{col:1,line:109},startBody:{col:30,line:86},endBody:{col:1,line:109}},"passing-radio-props":{startLoc:{col:33,line:111},endLoc:{col:1,line:137},startBody:{col:33,line:111},endBody:{col:1,line:137}},"error-state":{startLoc:{col:26,line:139},endLoc:{col:1,line:184},startBody:{col:26,line:139},endBody:{col:1,line:184}}}}),title:"Components/Radio",component:_Radio__WEBPACK_IMPORTED_MODULE_15__.b};var Standard=function Standard(){var setValue=_slicedToArray(Object(react__WEBPACK_IMPORTED_MODULE_13__.useState)("female"),2)[1];return react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement(_storybook__WEBPACK_IMPORTED_MODULE_16__.a,null,react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement(_Radio__WEBPACK_IMPORTED_MODULE_15__.b,{name:"standard-usage",onChange:function onChange(event){setValue(event.target.value)},label:"Standard Usage",defaultValue:"female"},react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement(_Radio__WEBPACK_IMPORTED_MODULE_15__.a,{value:"female",label:"Female"}),react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement(_Radio__WEBPACK_IMPORTED_MODULE_15__.a,{value:"male",label:"Male"}),react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement(_Radio__WEBPACK_IMPORTED_MODULE_15__.a,{value:"other",label:"Other"})))},DisabledState=function DisabledState(){var setValue=_slicedToArray(Object(react__WEBPACK_IMPORTED_MODULE_13__.useState)("male"),2)[1];return react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement(_storybook__WEBPACK_IMPORTED_MODULE_16__.a,null,react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement(_Radio__WEBPACK_IMPORTED_MODULE_15__.b,{name:"disabled-state",onChange:function onChange(event){setValue(event.target.value)},label:"Disabled State",defaultValue:"male",disabled:!0},react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement(_Radio__WEBPACK_IMPORTED_MODULE_15__.a,{value:"female",label:"Female",disabled:!0}),react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement(_Radio__WEBPACK_IMPORTED_MODULE_15__.a,{value:"male",label:"Male",disabled:!0}),react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement(_Radio__WEBPACK_IMPORTED_MODULE_15__.a,{value:"other",label:"Other",disabled:!0})))},HorizontalLayout=function HorizontalLayout(){var setValue=_slicedToArray(Object(react__WEBPACK_IMPORTED_MODULE_13__.useState)("female"),2)[1];return react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement(_storybook__WEBPACK_IMPORTED_MODULE_16__.a,null,react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement(_Radio__WEBPACK_IMPORTED_MODULE_15__.b,{name:"horizontal-layout",onChange:function onChange(event){setValue(event.target.value)},label:"Horizontal layout",defaultValue:"female",row:!0},react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement(_Radio__WEBPACK_IMPORTED_MODULE_15__.a,{value:"female",label:"Female"}),react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement(_Radio__WEBPACK_IMPORTED_MODULE_15__.a,{value:"male",label:"Male"}),react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement(_Radio__WEBPACK_IMPORTED_MODULE_15__.a,{value:"other",label:"Other"})))},LabelPlacement=function LabelPlacement(){var setValue=_slicedToArray(Object(react__WEBPACK_IMPORTED_MODULE_13__.useState)("start"),2)[1];return react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement(_storybook__WEBPACK_IMPORTED_MODULE_16__.a,null,react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement(_Radio__WEBPACK_IMPORTED_MODULE_15__.b,{name:"label-placement",onChange:function onChange(event){setValue(event.target.value)},label:"Label placement",defaultValue:"start",row:!0},react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement(_Radio__WEBPACK_IMPORTED_MODULE_15__.a,{value:"top",label:"Top",labelPlacement:"top"}),react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement(_Radio__WEBPACK_IMPORTED_MODULE_15__.a,{value:"start",label:"Start",labelPlacement:"start"}),react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement(_Radio__WEBPACK_IMPORTED_MODULE_15__.a,{value:"bottom",label:"Bottom",labelPlacement:"bottom"}),react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement(_Radio__WEBPACK_IMPORTED_MODULE_15__.a,{value:"end",label:"End",labelPlacement:"end"})))},PassingRadioProps=function PassingRadioProps(){var setValue=_slicedToArray(Object(react__WEBPACK_IMPORTED_MODULE_13__.useState)("top"),2)[1];return react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement(_storybook__WEBPACK_IMPORTED_MODULE_16__.a,null,react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement(_Radio__WEBPACK_IMPORTED_MODULE_15__.b,{name:"label-placement",onChange:function onChange(event){setValue(event.target.value)},label:"Use of Radio props",defaultValue:"top"},react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement(_Radio__WEBPACK_IMPORTED_MODULE_15__.a,{value:"top",label:"Disabled ripple, small size radio button",muiRadioProps:{disableRipple:!0,size:"small"}}),react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement(_Radio__WEBPACK_IMPORTED_MODULE_15__.a,{value:"start",label:"Disabled",muiRadioProps:{disabled:!0}}),react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement(_Radio__WEBPACK_IMPORTED_MODULE_15__.a,{value:"bottom",label:"Default Mui color",muiRadioProps:{color:"default"}}),react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement(_Radio__WEBPACK_IMPORTED_MODULE_15__.a,{value:"end",label:"Without Radio props"})))},ErrorState=function ErrorState(){var _useState12=_slicedToArray(Object(react__WEBPACK_IMPORTED_MODULE_13__.useState)(""),2),value=_useState12[0],setValue=_useState12[1],_useState14=_slicedToArray(Object(react__WEBPACK_IMPORTED_MODULE_13__.useState)(!0),2),error=_useState14[0],setError=_useState14[1],_useState16=_slicedToArray(Object(react__WEBPACK_IMPORTED_MODULE_13__.useState)("Choose wisely"),2),helperText=_useState16[0],setHelperText=_useState16[1];return react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement(_storybook__WEBPACK_IMPORTED_MODULE_16__.a,null,react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement("form",{onSubmit:function handleSubmit(event){event.preventDefault(),"best"===value?(setHelperText("You got it!"),setError(!1)):"worst"===value?(setHelperText("Sorry, wrong answer!"),setError(!0)):(setHelperText("Please select an option."),setError(!0))},name:"simple-form"},react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement(_Radio__WEBPACK_IMPORTED_MODULE_15__.b,{name:"error-state",label:"Select Black",value:value,onChange:function onChange(event){setValue(event.target.value),setError(!1)},hasError:error,message:helperText},react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement(_material_ui_core__WEBPACK_IMPORTED_MODULE_17__.a,{value:"best",control:react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement(_Radio__WEBPACK_IMPORTED_MODULE_15__.a,null),label:"The best!"}),react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement(_material_ui_core__WEBPACK_IMPORTED_MODULE_17__.a,{value:"worst",control:react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement(_Radio__WEBPACK_IMPORTED_MODULE_15__.a,null),label:"The worst."})),react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement(_material_ui_core__WEBPACK_IMPORTED_MODULE_18__.a,null,helperText),react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement(_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_14__.a,{type:"submit",variant:"outlined",size:"small"},"Check Answer")))};Standard.parameters=Object.assign({storySource:{source:"() => {\n    const defaultValue = 'female';\n    const [, setValue] = useState(defaultValue);\n\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n        setValue((event.target as HTMLInputElement).value);\n    };\n\n    return (\n        <PageWrapper>\n            <RadioGroup\n                name='standard-usage'\n                onChange={onChange}\n                label='Standard Usage'\n                defaultValue={defaultValue}\n            >\n                <Radio value='female' label='Female' />\n                <Radio value='male' label='Male' />\n                <Radio value='other' label='Other' />\n            </RadioGroup>\n        </PageWrapper>\n    );\n}"}},Standard.parameters),DisabledState.parameters=Object.assign({storySource:{source:"() => {\n    const defaultValue = 'male';\n    const [, setValue] = useState(defaultValue);\n\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n        setValue((event.target as HTMLInputElement).value);\n    };\n\n    return (\n        <PageWrapper>\n            <RadioGroup\n                name='disabled-state'\n                onChange={onChange}\n                label='Disabled State'\n                defaultValue={defaultValue}\n                disabled\n            >\n                <Radio value='female' label='Female' disabled />\n                <Radio value='male' label='Male' disabled />\n                <Radio value='other' label='Other' disabled />\n            </RadioGroup>\n        </PageWrapper>\n    );\n}"}},DisabledState.parameters),HorizontalLayout.parameters=Object.assign({storySource:{source:"() => {\n    const defaultValue = 'female';\n    const [, setValue] = useState(defaultValue);\n\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValue((event.target as HTMLInputElement).value);\n    };\n    return (\n        <PageWrapper>\n            <RadioGroup\n                name='horizontal-layout'\n                onChange={onChange}\n                label='Horizontal layout'\n                defaultValue={defaultValue}\n                row\n            >\n                <Radio value='female' label='Female' />\n                <Radio value='male' label='Male' />\n                <Radio value='other' label='Other' />\n            </RadioGroup>\n        </PageWrapper>\n    );\n}"}},HorizontalLayout.parameters),LabelPlacement.parameters=Object.assign({storySource:{source:"() => {\n    const defaultValue = 'start';\n    const [, setValue] = useState(defaultValue);\n\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValue((event.target as HTMLInputElement).value);\n    };\n    return (\n        <PageWrapper>\n            <RadioGroup\n                name='label-placement'\n                onChange={onChange}\n                label='Label placement'\n                defaultValue={defaultValue}\n                row\n            >\n                <Radio value='top' label='Top' labelPlacement='top' />\n                <Radio value='start' label='Start' labelPlacement='start' />\n                <Radio value='bottom' label='Bottom' labelPlacement='bottom' />\n                <Radio value='end' label='End' labelPlacement='end' />\n            </RadioGroup>\n        </PageWrapper>\n    );\n}"}},LabelPlacement.parameters),PassingRadioProps.parameters=Object.assign({storySource:{source:"() => {\n    const defaultValue = 'top';\n    const [, setValue] = useState(defaultValue);\n\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValue((event.target as HTMLInputElement).value);\n    };\n    return (\n        <PageWrapper>\n            <RadioGroup\n                name='label-placement'\n                onChange={onChange}\n                label='Use of Radio props'\n                defaultValue={defaultValue}\n            >\n                <Radio\n                    value='top'\n                    label='Disabled ripple, small size radio button'\n                    muiRadioProps={{ disableRipple: true, size: 'small' }}\n                />\n                <Radio value='start' label='Disabled' muiRadioProps={{ disabled: true }} />\n                <Radio value='bottom' label='Default Mui color' muiRadioProps={{ color: 'default' }} />\n                <Radio value='end' label='Without Radio props' />\n            </RadioGroup>\n        </PageWrapper>\n    );\n}"}},PassingRadioProps.parameters),ErrorState.parameters=Object.assign({storySource:{source:"() => {\n    const [value, setValue] = useState('');\n    const [error, setError] = useState(true);\n    const [helperText, setHelperText] = useState('Choose wisely');\n\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValue((event.target as HTMLInputElement).value);\n        setError(false);\n    };\n\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        if (value === 'best') {\n            setHelperText('You got it!');\n            setError(false);\n        } else if (value === 'worst') {\n            setHelperText('Sorry, wrong answer!');\n            setError(true);\n        } else {\n            setHelperText('Please select an option.');\n            setError(true);\n        }\n    };\n\n    return (\n        <PageWrapper>\n            <form onSubmit={handleSubmit} name='simple-form'>\n                <RadioGroup\n                    name='error-state'\n                    label='Select Black'\n                    value={value}\n                    onChange={onChange}\n                    hasError={error}\n                    message={helperText}\n                >\n                    <FormControlLabel value=\"best\" control={<Radio/>} label=\"The best!\" />\n                    <FormControlLabel value=\"worst\" control={<Radio/>} label=\"The worst.\" />\n                </RadioGroup>\n                <FormHelperText>{helperText}</FormHelperText>\n                <Button type='submit' variant='outlined' size='small'>\n                    Check Answer\n                </Button>\n            </form>\n        </PageWrapper>\n    );\n}"}},ErrorState.parameters)},1195:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Button_stories_Default})),__webpack_require__.d(__webpack_exports__,"Secondary",(function(){return Button_stories_Secondary})),__webpack_require__.d(__webpack_exports__,"Disabled",(function(){return Button_stories_Disabled})),__webpack_require__.d(__webpack_exports__,"WithClickListener",(function(){return Button_stories_WithClickListener}));__webpack_require__(13),__webpack_require__(243);var _templateObject,storybook=__webpack_require__(59),react=__webpack_require__(0),react_default=__webpack_require__.n(react);__webpack_require__(16),__webpack_require__(28),__webpack_require__(36),__webpack_require__(49),__webpack_require__(244),__webpack_require__(192);var styled_Wrapper=__webpack_require__(113).a.button(_templateObject||(_templateObject=function _taggedTemplateLiteral(strings,raw){return raw||(raw=strings.slice(0)),Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}(["\n    background-color: transparent;\n    border: 1px solid;\n    border-radius: 4px;\n    cursor: pointer;\n    font-size: 1rem;\n    padding: 9px 36px;\n\n    &:disabled {\n        pointer-events: none;\n        cursor: not-allowed;\n        background-color: lightgray;\n    }\n\n    &:hover {\n        background-color: rgba(0, 149, 179, 0.1);\n        border-color: rgba(0, 149, 179, 0.8);\n    }\n\n    &:active {\n        background-color: rgba(5, 102, 121, 0.1);\n        border-color: red;\n        color: gray;\n    }\n"])));function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var Button=Object(react.forwardRef)((function(props,ref){var children=props.children,_props$disabled=props.disabled,disabled=void 0!==_props$disabled&&_props$disabled,onClick=props.onClick,_props$type=(props.secondary,props.type),type=void 0===_props$type?"button":_props$type;_objectWithoutProperties(props,["children","disabled","onClick","secondary","type"]);return react_default.a.createElement(styled_Wrapper,{disabled:disabled,onClick:onClick,ref:ref,type:type},children)})),Button_Button=Object(react.memo)(Button);try{Wrapper.displayName="Wrapper",Wrapper.__docgenInfo={description:"",displayName:"Wrapper",props:{ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"((instance: HTMLButtonElement | null) => void) | RefObject<HTMLButtonElement> | null"}},theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"any"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"undefined"}},forwardedAs:{defaultValue:null,description:"",name:"forwardedAs",required:!1,type:{name:"undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Button/Button.tsx#Wrapper"]={docgenInfo:Wrapper.__docgenInfo,name:"Wrapper",path:"src/components/Button/Button.tsx#Wrapper"})}catch(__react_docgen_typescript_loader_error){}try{Button.displayName="Button",Button.__docgenInfo={description:"",displayName:"Button",props:{disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void)"}},secondary:{defaultValue:null,description:"",name:"secondary",required:!1,type:{name:"boolean"}},type:{defaultValue:null,description:"",name:"type",required:!1,type:{name:'"button"'}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Button/Button.tsx#Button"]={docgenInfo:Button.__docgenInfo,name:"Button",path:"src/components/Button/Button.tsx#Button"})}catch(__react_docgen_typescript_loader_error){}__webpack_require__(27),__webpack_require__(161);__webpack_exports__.default={parameters:function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}({storySource:{source:'\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = "\\n    \\n    // @ts-nocheck\\n    // @ts-ignore\\n    var __STORY__ = \\"import { PageWrapper } from \'../storybook\';\\\\nimport React from \'react\';\\\\nimport { Button } from \'..\';\\\\n\\\\nexport default {\\\\n    title: \'Components/Button\',\\\\n    component: Button,\\\\n};\\\\n\\\\nexport const Default = () => (\\\\n    <PageWrapper>\\\\n        <Button>Default</Button>\\\\n    </PageWrapper>\\\\n);\\\\n\\\\nexport const Secondary = () => (\\\\n    <PageWrapper>\\\\n        <Button secondary>Secondary</Button>\\\\n    </PageWrapper>\\\\n);\\\\n\\\\nexport const Disabled = () => (\\\\n    <PageWrapper>\\\\n        <Button disabled>Disabled</Button>\\\\n    </PageWrapper>\\\\n);\\\\n\\\\nexport const WithClickListener = () => (\\\\n    <PageWrapper>\\\\n        <Button\\\\n            onClick={(event) => {\\\\n                alert(\'You clicked the \\\\\\"non-disabled\\\\\\" button\');\\\\n                console.log(event);\\\\n            }}\\\\n        >\\\\n            Click to see the alert\\\\n        </Button>\\\\n    </PageWrapper>\\\\n);\\\\n\\";\\n    // @ts-ignore\\n    var __LOCATIONS_MAP__ = {\\"Default\\":{\\"startLoc\\":{\\"col\\":23,\\"line\\":10},\\"endLoc\\":{\\"col\\":1,\\"line\\":14},\\"startBody\\":{\\"col\\":23,\\"line\\":10},\\"endBody\\":{\\"col\\":1,\\"line\\":14}},\\"Secondary\\":{\\"startLoc\\":{\\"col\\":25,\\"line\\":16},\\"endLoc\\":{\\"col\\":1,\\"line\\":20},\\"startBody\\":{\\"col\\":25,\\"line\\":16},\\"endBody\\":{\\"col\\":1,\\"line\\":20}},\\"Disabled\\":{\\"startLoc\\":{\\"col\\":24,\\"line\\":22},\\"endLoc\\":{\\"col\\":1,\\"line\\":26},\\"startBody\\":{\\"col\\":24,\\"line\\":22},\\"endBody\\":{\\"col\\":1,\\"line\\":26}},\\"WithClickListener\\":{\\"startLoc\\":{\\"col\\":33,\\"line\\":28},\\"endLoc\\":{\\"col\\":1,\\"line\\":39},\\"startBody\\":{\\"col\\":33,\\"line\\":28},\\"endBody\\":{\\"col\\":1,\\"line\\":39}}};\\n    \\nimport { PageWrapper } from \'../storybook\';\\nimport React from \'react\';\\nimport { Button } from \'..\';\\n\\nexport default {parameters: {\\"storySource\\":{\\"source\\":\\"import { PageWrapper } from \'../storybook\';\\\\nimport React from \'react\';\\\\nimport { Button } from \'..\';\\\\n\\\\nexport default {\\\\n    title: \'Components/Button\',\\\\n    component: Button,\\\\n};\\\\n\\\\nexport const Default = () => (\\\\n    <PageWrapper>\\\\n        <Button>Default</Button>\\\\n    </PageWrapper>\\\\n);\\\\n\\\\nexport const Secondary = () => (\\\\n    <PageWrapper>\\\\n        <Button secondary>Secondary</Button>\\\\n    </PageWrapper>\\\\n);\\\\n\\\\nexport const Disabled = () => (\\\\n    <PageWrapper>\\\\n        <Button disabled>Disabled</Button>\\\\n    </PageWrapper>\\\\n);\\\\n\\\\nexport const WithClickListener = () => (\\\\n    <PageWrapper>\\\\n        <Button\\\\n            onClick={(event) => {\\\\n                alert(\'You clicked the \\\\\\"non-disabled\\\\\\" button\');\\\\n                console.log(event);\\\\n            }}\\\\n        >\\\\n            Click to see the alert\\\\n        </Button>\\\\n    </PageWrapper>\\\\n);\\\\n\\",\\"locationsMap\\":{\\"default\\":{\\"startLoc\\":{\\"col\\":23,\\"line\\":10},\\"endLoc\\":{\\"col\\":1,\\"line\\":14},\\"startBody\\":{\\"col\\":23,\\"line\\":10},\\"endBody\\":{\\"col\\":1,\\"line\\":14}},\\"secondary\\":{\\"startLoc\\":{\\"col\\":25,\\"line\\":16},\\"endLoc\\":{\\"col\\":1,\\"line\\":20},\\"startBody\\":{\\"col\\":25,\\"line\\":16},\\"endBody\\":{\\"col\\":1,\\"line\\":20}},\\"disabled\\":{\\"startLoc\\":{\\"col\\":24,\\"line\\":22},\\"endLoc\\":{\\"col\\":1,\\"line\\":26},\\"startBody\\":{\\"col\\":24,\\"line\\":22},\\"endBody\\":{\\"col\\":1,\\"line\\":26}},\\"with-click-listener\\":{\\"startLoc\\":{\\"col\\":33,\\"line\\":28},\\"endLoc\\":{\\"col\\":1,\\"line\\":39},\\"startBody\\":{\\"col\\":33,\\"line\\":28},\\"endBody\\":{\\"col\\":1,\\"line\\":39}}}},},\\n    title: \'Components/Button\',\\n    component: Button,\\n};\\n\\nexport const Default = () => (\\n    <PageWrapper>\\n        <Button>Default</Button>\\n    </PageWrapper>\\n);;\\n\\nexport const Secondary = () => (\\n    <PageWrapper>\\n        <Button secondary>Secondary</Button>\\n    </PageWrapper>\\n);;\\n\\nexport const Disabled = () => (\\n    <PageWrapper>\\n        <Button disabled>Disabled</Button>\\n    </PageWrapper>\\n);;\\n\\nexport const WithClickListener = () => (\\n    <PageWrapper>\\n        <Button\\n            onClick={(event) => {\\n                alert(\'You clicked the \\"non-disabled\\" button\');\\n                console.log(event);\\n            }}\\n        >\\n            Click to see the alert\\n        </Button>\\n    </PageWrapper>\\n);\\n";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {"Default":{"startLoc":{"col":23,"line":18},"endLoc":{"col":1,"line":22},"startBody":{"col":23,"line":18},"endBody":{"col":1,"line":22}},"Secondary":{"startLoc":{"col":25,"line":24},"endLoc":{"col":1,"line":28},"startBody":{"col":25,"line":24},"endBody":{"col":1,"line":28}},"Disabled":{"startLoc":{"col":24,"line":30},"endLoc":{"col":1,"line":34},"startBody":{"col":24,"line":30},"endBody":{"col":1,"line":34}},"WithClickListener":{"startLoc":{"col":33,"line":36},"endLoc":{"col":1,"line":47},"startBody":{"col":33,"line":36},"endBody":{"col":1,"line":47}}};\n    \n\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = "import { PageWrapper } from \'../storybook\';\\nimport React from \'react\';\\nimport { Button } from \'..\';\\n\\nexport default {\\n    title: \'Components/Button\',\\n    component: Button,\\n};\\n\\nexport const Default = () => (\\n    <PageWrapper>\\n        <Button>Default</Button>\\n    </PageWrapper>\\n);\\n\\nexport const Secondary = () => (\\n    <PageWrapper>\\n        <Button secondary>Secondary</Button>\\n    </PageWrapper>\\n);\\n\\nexport const Disabled = () => (\\n    <PageWrapper>\\n        <Button disabled>Disabled</Button>\\n    </PageWrapper>\\n);\\n\\nexport const WithClickListener = () => (\\n    <PageWrapper>\\n        <Button\\n            onClick={(event) => {\\n                alert(\'You clicked the \\"non-disabled\\" button\');\\n                console.log(event);\\n            }}\\n        >\\n            Click to see the alert\\n        </Button>\\n    </PageWrapper>\\n);\\n";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {"Default":{"startLoc":{"col":23,"line":10},"endLoc":{"col":1,"line":14},"startBody":{"col":23,"line":10},"endBody":{"col":1,"line":14}},"Secondary":{"startLoc":{"col":25,"line":16},"endLoc":{"col":1,"line":20},"startBody":{"col":25,"line":16},"endBody":{"col":1,"line":20}},"Disabled":{"startLoc":{"col":24,"line":22},"endLoc":{"col":1,"line":26},"startBody":{"col":24,"line":22},"endBody":{"col":1,"line":26}},"WithClickListener":{"startLoc":{"col":33,"line":28},"endLoc":{"col":1,"line":39},"startBody":{"col":33,"line":28},"endBody":{"col":1,"line":39}}};\n    \nimport { PageWrapper } from \'../storybook\';\nimport React from \'react\';\nimport { Button } from \'..\';\n\nexport default {parameters: {"storySource":{"source":"import { PageWrapper } from \'../storybook\';\\nimport React from \'react\';\\nimport { Button } from \'..\';\\n\\nexport default {\\n    title: \'Components/Button\',\\n    component: Button,\\n};\\n\\nexport const Default = () => (\\n    <PageWrapper>\\n        <Button>Default</Button>\\n    </PageWrapper>\\n);\\n\\nexport const Secondary = () => (\\n    <PageWrapper>\\n        <Button secondary>Secondary</Button>\\n    </PageWrapper>\\n);\\n\\nexport const Disabled = () => (\\n    <PageWrapper>\\n        <Button disabled>Disabled</Button>\\n    </PageWrapper>\\n);\\n\\nexport const WithClickListener = () => (\\n    <PageWrapper>\\n        <Button\\n            onClick={(event) => {\\n                alert(\'You clicked the \\"non-disabled\\" button\');\\n                console.log(event);\\n            }}\\n        >\\n            Click to see the alert\\n        </Button>\\n    </PageWrapper>\\n);\\n","locationsMap":{"default":{"startLoc":{"col":23,"line":10},"endLoc":{"col":1,"line":14},"startBody":{"col":23,"line":10},"endBody":{"col":1,"line":14}},"secondary":{"startLoc":{"col":25,"line":16},"endLoc":{"col":1,"line":20},"startBody":{"col":25,"line":16},"endBody":{"col":1,"line":20}},"disabled":{"startLoc":{"col":24,"line":22},"endLoc":{"col":1,"line":26},"startBody":{"col":24,"line":22},"endBody":{"col":1,"line":26}},"with-click-listener":{"startLoc":{"col":33,"line":28},"endLoc":{"col":1,"line":39},"startBody":{"col":33,"line":28},"endBody":{"col":1,"line":39}}}},},\n    title: \'Components/Button\',\n    component: Button,\n};\n\nexport const Default = () => (\n    <PageWrapper>\n        <Button>Default</Button>\n    </PageWrapper>\n);;;\n\nexport const Secondary = () => (\n    <PageWrapper>\n        <Button secondary>Secondary</Button>\n    </PageWrapper>\n);;;\n\nexport const Disabled = () => (\n    <PageWrapper>\n        <Button disabled>Disabled</Button>\n    </PageWrapper>\n);;;\n\nexport const WithClickListener = () => (\n    <PageWrapper>\n        <Button\n            onClick={(event) => {\n                alert(\'You clicked the "non-disabled" button\');\n                console.log(event);\n            }}\n        >\n            Click to see the alert\n        </Button>\n    </PageWrapper>\n);\n\n\n\nDefault.parameters = { storySource: { source: "() => (\\n    <PageWrapper>\\n        <Button>Default</Button>\\n    </PageWrapper>\\n)" }, ...Default.parameters };\nSecondary.parameters = { storySource: { source: "() => (\\n    <PageWrapper>\\n        <Button secondary>Secondary</Button>\\n    </PageWrapper>\\n)" }, ...Secondary.parameters };\nDisabled.parameters = { storySource: { source: "() => (\\n    <PageWrapper>\\n        <Button disabled>Disabled</Button>\\n    </PageWrapper>\\n)" }, ...Disabled.parameters };\nWithClickListener.parameters = { storySource: { source: "() => (\\n    <PageWrapper>\\n        <Button\\n            onClick={(event) => {\\n                alert(\'You clicked the \\"non-disabled\\" button\');\\n                console.log(event);\\n            }}\\n        >\\n            Click to see the alert\\n        </Button>\\n    </PageWrapper>\\n)" }, ...WithClickListener.parameters };',locationsMap:{default:{startLoc:{col:23,line:26},endLoc:{col:1,line:30},startBody:{col:23,line:26},endBody:{col:1,line:30}},secondary:{startLoc:{col:25,line:32},endLoc:{col:1,line:36},startBody:{col:25,line:32},endBody:{col:1,line:36}},disabled:{startLoc:{col:24,line:38},endLoc:{col:1,line:42},startBody:{col:24,line:38},endBody:{col:1,line:42}},"with-click-listener":{startLoc:{col:33,line:44},endLoc:{col:1,line:55},startBody:{col:33,line:44},endBody:{col:1,line:55}}}}},"storySource",{source:"import { PageWrapper } from '../storybook';\nimport React from 'react';\nimport { Button } from '..';\n\nexport default {\n    title: 'Components/Button',\n    component: Button,\n};\n\nexport const Default = () => (\n    <PageWrapper>\n        <Button>Default</Button>\n    </PageWrapper>\n);\n\nexport const Secondary = () => (\n    <PageWrapper>\n        <Button secondary>Secondary</Button>\n    </PageWrapper>\n);\n\nexport const Disabled = () => (\n    <PageWrapper>\n        <Button disabled>Disabled</Button>\n    </PageWrapper>\n);\n\nexport const WithClickListener = () => (\n    <PageWrapper>\n        <Button\n            onClick={(event) => {\n                alert('You clicked the \"non-disabled\" button');\n                console.log(event);\n            }}\n        >\n            Click to see the alert\n        </Button>\n    </PageWrapper>\n);\n",locationsMap:{default:{startLoc:{col:23,line:10},endLoc:{col:1,line:14},startBody:{col:23,line:10},endBody:{col:1,line:14}},secondary:{startLoc:{col:25,line:16},endLoc:{col:1,line:20},startBody:{col:25,line:16},endBody:{col:1,line:20}},disabled:{startLoc:{col:24,line:22},endLoc:{col:1,line:26},startBody:{col:24,line:22},endBody:{col:1,line:26}},"with-click-listener":{startLoc:{col:33,line:28},endLoc:{col:1,line:39},startBody:{col:33,line:28},endBody:{col:1,line:39}}}}),title:"Components/Button",component:Button_Button};var Button_stories_Default=function Default(){return react_default.a.createElement(storybook.a,null,react_default.a.createElement(Button_Button,null,"Default"))},Button_stories_Secondary=function Secondary(){return react_default.a.createElement(storybook.a,null,react_default.a.createElement(Button_Button,{secondary:!0},"Secondary"))},Button_stories_Disabled=function Disabled(){return react_default.a.createElement(storybook.a,null,react_default.a.createElement(Button_Button,{disabled:!0},"Disabled"))},Button_stories_WithClickListener=function WithClickListener(){return react_default.a.createElement(storybook.a,null,react_default.a.createElement(Button_Button,{onClick:function onClick(event){alert('You clicked the "non-disabled" button'),console.log(event)}},"Click to see the alert"))};Button_stories_Default.parameters=Object.assign({storySource:{source:"() => (\n    <PageWrapper>\n        <Button>Default</Button>\n    </PageWrapper>\n)"}},Button_stories_Default.parameters),Button_stories_Secondary.parameters=Object.assign({storySource:{source:"() => (\n    <PageWrapper>\n        <Button secondary>Secondary</Button>\n    </PageWrapper>\n)"}},Button_stories_Secondary.parameters),Button_stories_Disabled.parameters=Object.assign({storySource:{source:"() => (\n    <PageWrapper>\n        <Button disabled>Disabled</Button>\n    </PageWrapper>\n)"}},Button_stories_Disabled.parameters),Button_stories_WithClickListener.parameters=Object.assign({storySource:{source:"() => (\n    <PageWrapper>\n        <Button\n            onClick={(event) => {\n                alert('You clicked the \"non-disabled\" button');\n                console.log(event);\n            }}\n        >\n            Click to see the alert\n        </Button>\n    </PageWrapper>\n)"}},Button_stories_WithClickListener.parameters)},161:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return components_Autocomplete_Autocomplete}));__webpack_require__(13),__webpack_require__(18),__webpack_require__(16),__webpack_require__(28),__webpack_require__(36);var _templateObject,_templateObject2,react=__webpack_require__(0),react_default=__webpack_require__.n(react),Autocomplete_Autocomplete=__webpack_require__(1244),Chip=__webpack_require__(1247),styled_components_browser_esm=(__webpack_require__(49),__webpack_require__(244),__webpack_require__(192),__webpack_require__(113)),TextField=__webpack_require__(1243);function _taggedTemplateLiteral(strings,raw){return raw||(raw=strings.slice(0)),Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}var StyledChipContainer=styled_components_browser_esm.a.div(_templateObject||(_templateObject=_taggedTemplateLiteral(["\n    display: flex;\n    flex-wrap: wrap;\n"]))),StyledTextInput=Object(styled_components_browser_esm.a)(TextField.a)(_templateObject2||(_templateObject2=_taggedTemplateLiteral(["\n    .MuiSvgIcon-root.MuiSvgIcon-fontSizeSmall {\n        display: none;\n    }\n"])));function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function _extends(){return(_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}var components_Autocomplete_Autocomplete=function AutocompleteComponent(props){var _onDelete=props.onDelete,rest=_objectWithoutProperties(props,["onDelete"]);return react_default.a.createElement(react_default.a.Fragment,null,react_default.a.createElement(Autocomplete_Autocomplete.a,_extends({},rest,{renderTags:function renderTags(){return null},renderInput:function renderInput(params){return react_default.a.createElement(StyledTextInput,_extends({},params,{variant:"outlined",label:"select options"}))}})),react_default.a.createElement(StyledChipContainer,null,_onDelete&&null!==rest.value&&void 0!==rest.value&&rest.value.map((function(v){return react_default.a.createElement("div",{key:v.title},react_default.a.createElement(Chip.a,{key:v.title,label:v.title,onDelete:function onDelete(){return _onDelete(v.title)}}))}))))};try{Autocomplete.displayName="Autocomplete",Autocomplete.__docgenInfo={description:"",displayName:"Autocomplete",props:{label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"ReactNode"}},placeholder:{defaultValue:null,description:"",name:"placeholder",required:!1,type:{name:"string"}},onDelete:{defaultValue:null,description:"",name:"onDelete",required:!1,type:{name:"((value: string) => void)"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"((instance: unknown) => void) | RefObject<unknown> | null"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Autocomplete/Autocomplete.tsx#Autocomplete"]={docgenInfo:Autocomplete.__docgenInfo,name:"Autocomplete",path:"src/components/Autocomplete/Autocomplete.tsx#Autocomplete"})}catch(__react_docgen_typescript_loader_error){}},27:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"b",(function(){return components_Radio_Radio})),__webpack_require__.d(__webpack_exports__,"a",(function(){return Radio_Radio}));__webpack_require__(13),__webpack_require__(12),__webpack_require__(16),__webpack_require__(28),__webpack_require__(36);var _templateObject,react=__webpack_require__(0),react_default=__webpack_require__.n(react),classnames=__webpack_require__(572),classnames_default=__webpack_require__.n(classnames),Radio=__webpack_require__(1245),FormControlLabel=__webpack_require__(576),RadioGroup=__webpack_require__(1246);__webpack_require__(49),__webpack_require__(244),__webpack_require__(192);var Wrapper=__webpack_require__(113).a.div(_templateObject||(_templateObject=function _taggedTemplateLiteral(strings,raw){return raw||(raw=strings.slice(0)),Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}([""])));function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function _extends(){return(_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function Radio_Radio(props){var muiRadioProps=props.muiRadioProps,rest=_objectWithoutProperties(props,["muiRadioProps"]);return react_default.a.createElement(FormControlLabel.a,_extends({},rest,{control:react_default.a.createElement(Radio.a,muiRadioProps)}))}function Radio_RadioGroup(props){var children=props.children,_props$hasError=(props.label,props.name,props.message,props.hasError),hasError=void 0!==_props$hasError&&_props$hasError,className=(props.generateCss,props.id,props.className),_props$disabled=props.disabled,disabled=void 0!==_props$disabled&&_props$disabled,rest=_objectWithoutProperties(props,["children","label","name","message","hasError","generateCss","id","className","disabled"]);return children?react_default.a.createElement(Wrapper,{className:classnames_default()(className,{disabled:disabled,hasError:hasError})},react_default.a.createElement(RadioGroup.a,rest,children)):null}var components_Radio_Radio=Radio_RadioGroup;try{Radio_Radio.displayName="Radio",Radio_Radio.__docgenInfo={description:"",displayName:"Radio",props:{label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"ReactNode"}},muiRadioProps:{defaultValue:null,description:"",name:"muiRadioProps",required:!1,type:{name:"RadioProps"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Radio/Radio.tsx#Radio"]={docgenInfo:Radio_Radio.__docgenInfo,name:"Radio",path:"src/components/Radio/Radio.tsx#Radio"})}catch(__react_docgen_typescript_loader_error){}try{Radio_RadioGroup.displayName="RadioGroup",Radio_RadioGroup.__docgenInfo={description:"",displayName:"RadioGroup",props:{label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"ReactNode"}},hasError:{defaultValue:null,description:"",name:"hasError",required:!1,type:{name:"boolean"}},message:{defaultValue:null,description:"",name:"message",required:!1,type:{name:"ReactNode"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},options:{defaultValue:null,description:"",name:"options",required:!1,type:{name:"(RadioProps & { key: string; })[]"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Radio/Radio.tsx#RadioGroup"]={docgenInfo:Radio_RadioGroup.__docgenInfo,name:"RadioGroup",path:"src/components/Radio/Radio.tsx#RadioGroup"})}catch(__react_docgen_typescript_loader_error){}},356:function(module,exports){},59:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return PageWrapper}));var _templateObject;__webpack_require__(49),__webpack_require__(244),__webpack_require__(192);var PageWrapper=__webpack_require__(113).a.div(_templateObject||(_templateObject=function _taggedTemplateLiteral(strings,raw){return raw||(raw=strings.slice(0)),Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}(["\n    padding: 30px 100px;\n"])))},604:function(module,exports,__webpack_require__){__webpack_require__(605),__webpack_require__(759),__webpack_require__(760),__webpack_require__(1193),__webpack_require__(1194),__webpack_require__(1185),module.exports=__webpack_require__(1188)},672:function(module,exports){},760:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__(413)},796:function(module,exports){}},[[604,2,3]]]);