(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{"./.storybook/preview.js":function(module,exports){},"./.storybook/preview.js-generated-config-entry.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.array.filter.js"),__webpack_require__("./node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),__webpack_require__("./node_modules/core-js/modules/es.array.for-each.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.for-each.js"),__webpack_require__("./node_modules/core-js/modules/es.object.get-own-property-descriptors.js"),__webpack_require__("./node_modules/core-js/modules/es.object.define-properties.js"),__webpack_require__("./node_modules/core-js/modules/es.object.define-property.js");var _home_runner_work_storybook_typescript_example_storybook_typescript_example_node_modules_storybook_client_api__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./node_modules/@storybook/client-api/dist/esm/ClientApi.js"),_home_runner_work_storybook_typescript_example_storybook_typescript_example_storybook_preview_js__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__("./.storybook/preview.js");function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.keys(_home_runner_work_storybook_typescript_example_storybook_typescript_example_storybook_preview_js__WEBPACK_IMPORTED_MODULE_10__).forEach((function(key){var value=_home_runner_work_storybook_typescript_example_storybook_typescript_example_storybook_preview_js__WEBPACK_IMPORTED_MODULE_10__[key];switch(key){case"args":return Object(_home_runner_work_storybook_typescript_example_storybook_typescript_example_node_modules_storybook_client_api__WEBPACK_IMPORTED_MODULE_9__.d)(value);case"argTypes":return Object(_home_runner_work_storybook_typescript_example_storybook_typescript_example_node_modules_storybook_client_api__WEBPACK_IMPORTED_MODULE_9__.b)(value);case"decorators":return value.forEach((function(decorator){return Object(_home_runner_work_storybook_typescript_example_storybook_typescript_example_node_modules_storybook_client_api__WEBPACK_IMPORTED_MODULE_9__.f)(decorator,!1)}));case"loaders":return value.forEach((function(loader){return Object(_home_runner_work_storybook_typescript_example_storybook_typescript_example_node_modules_storybook_client_api__WEBPACK_IMPORTED_MODULE_9__.g)(loader,!1)}));case"parameters":return Object(_home_runner_work_storybook_typescript_example_storybook_typescript_example_node_modules_storybook_client_api__WEBPACK_IMPORTED_MODULE_9__.h)(function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}({},value),!1);case"argTypesEnhancers":return value.forEach((function(enhancer){return Object(_home_runner_work_storybook_typescript_example_storybook_typescript_example_node_modules_storybook_client_api__WEBPACK_IMPORTED_MODULE_9__.c)(enhancer)}));case"argsEnhancers":return value.forEach((function(enhancer){return Object(_home_runner_work_storybook_typescript_example_storybook_typescript_example_node_modules_storybook_client_api__WEBPACK_IMPORTED_MODULE_9__.e)(enhancer)}));case"render":return Object(_home_runner_work_storybook_typescript_example_storybook_typescript_example_node_modules_storybook_client_api__WEBPACK_IMPORTED_MODULE_9__.i)(value);case"globals":case"globalTypes":var v={};return v[key]=value,Object(_home_runner_work_storybook_typescript_example_storybook_typescript_example_node_modules_storybook_client_api__WEBPACK_IMPORTED_MODULE_9__.h)(v,!1);case"__namedExportsOrder":case"decorateStory":case"renderToDOM":return null;default:return console.log(key+" was not supported :( !")}}))},"./generated-stories-entry.js":function(module,exports,__webpack_require__){"use strict";(function(module){(0,__webpack_require__("./node_modules/@storybook/react/dist/esm/client/index.js").configure)([__webpack_require__("./src sync recursive ^\\.(?:(?:^|\\/|(?:(?:(?!(?:^|\\/)\\.).)*?)\\/)(?!\\.)(?=.)[^/]*?\\.stories\\.(?:\\[tj\\]|[tj])sx)$")],module,!1)}).call(this,__webpack_require__("./node_modules/webpack/buildin/module.js")(module))},"./src sync recursive ^\\.(?:(?:^|\\/|(?:(?:(?!(?:^|\\/)\\.).)*?)\\/)(?!\\.)(?=.)[^/]*?\\.stories\\.(?:\\[tj\\]|[tj])sx)$":function(module,exports,__webpack_require__){var map={"./components/stories/Autocomplete.stories.tsx":"./src/components/stories/Autocomplete.stories.tsx","./components/stories/Button.stories.tsx":"./src/components/stories/Button.stories.tsx","./components/stories/Radio.stories.tsx":"./src/components/stories/Radio.stories.tsx"};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id="./src sync recursive ^\\.(?:(?:^|\\/|(?:(?:(?!(?:^|\\/)\\.).)*?)\\/)(?!\\.)(?=.)[^/]*?\\.stories\\.(?:\\[tj\\]|[tj])sx)$"},"./src/components/Autocomplete/index.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return components_Autocomplete_Autocomplete}));__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.array.map.js"),__webpack_require__("./node_modules/core-js/modules/es.array.is-array.js"),__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js");var _templateObject,_templateObject2,react=__webpack_require__("./node_modules/react/index.js"),react_default=__webpack_require__.n(react),Autocomplete_Autocomplete=__webpack_require__("./node_modules/@material-ui/lab/esm/Autocomplete/Autocomplete.js"),Typography=__webpack_require__("./node_modules/@material-ui/core/esm/Typography/Typography.js"),Chip=__webpack_require__("./node_modules/@material-ui/core/esm/Chip/Chip.js"),styled_components_browser_esm=(__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js")),TextField=__webpack_require__("./node_modules/@material-ui/core/esm/TextField/TextField.js");function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}var StyledChipContainer=styled_components_browser_esm.a.div(_templateObject||(_templateObject=_taggedTemplateLiteralLoose(["\n    display: flex;\n    flex-wrap: wrap;\n"]))),StyledTextInput=Object(styled_components_browser_esm.a)(TextField.a)(_templateObject2||(_templateObject2=_taggedTemplateLiteralLoose(["\n    .MuiSvgIcon-root.MuiSvgIcon-fontSizeSmall {\n        display: none;\n    }\n"])));function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}var Autocomplete_Autocomplete_Autocomplete=function Autocomplete(props){var _onDelete=props.onDelete,rest=_objectWithoutProperties(props,["onDelete"]);return react_default.a.createElement(react_default.a.Fragment,null,react_default.a.createElement(Autocomplete_Autocomplete.a,_extends({},rest,{renderTags:function renderTags(){return null},renderInput:function renderInput(params){return react_default.a.createElement(StyledTextInput,_extends({},params,{variant:"outlined",label:"select options"}))},renderOption:function renderOption(option){return react_default.a.createElement(Typography.a,null,option.title)}})),react_default.a.createElement(StyledChipContainer,null,_onDelete&&(Array.isArray(rest.value)?rest.value:[]).map((function(v){return react_default.a.createElement("div",{key:v.title},react_default.a.createElement(Chip.a,{key:v.title,label:v.title,onDelete:function onDelete(){return _onDelete?_onDelete(v.title):[]}}))}))))},components_Autocomplete_Autocomplete=Autocomplete_Autocomplete_Autocomplete;try{Autocomplete_Autocomplete_Autocomplete.displayName="Autocomplete",Autocomplete_Autocomplete_Autocomplete.__docgenInfo={description:"",displayName:"Autocomplete",props:{label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"ReactNode"}},placeholder:{defaultValue:null,description:"",name:"placeholder",required:!1,type:{name:"string"}},onDelete:{defaultValue:null,description:"",name:"onDelete",required:!1,type:{name:"((value: string) => void)"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<unknown>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Autocomplete/Autocomplete.tsx#Autocomplete"]={docgenInfo:Autocomplete_Autocomplete_Autocomplete.__docgenInfo,name:"Autocomplete",path:"src/components/Autocomplete/Autocomplete.tsx#Autocomplete"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/Radio/index.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"b",(function(){return components_Radio_Radio})),__webpack_require__.d(__webpack_exports__,"a",(function(){return Radio_Radio}));__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.function.name.js"),__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js");var _templateObject,react=__webpack_require__("./node_modules/react/index.js"),react_default=__webpack_require__.n(react),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),Radio=__webpack_require__("./node_modules/@material-ui/core/esm/Radio/Radio.js"),FormControlLabel=__webpack_require__("./node_modules/@material-ui/core/esm/FormControlLabel/FormControlLabel.js"),RadioGroup=__webpack_require__("./node_modules/@material-ui/core/esm/RadioGroup/RadioGroup.js");__webpack_require__("./node_modules/core-js/modules/es.array.slice.js");var Wrapper=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js").a.div(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}([""])));function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function Radio_Radio(props){var muiRadioProps=props.muiRadioProps,rest=_objectWithoutProperties(props,["muiRadioProps"]);return react_default.a.createElement(FormControlLabel.a,_extends({},rest,{control:react_default.a.createElement(Radio.a,muiRadioProps)}))}function Radio_RadioGroup(props){var children=props.children,_props$hasError=(props.label,props.name,props.message,props.hasError),hasError=void 0!==_props$hasError&&_props$hasError,className=(props.generateCss,props.id,props.className),_props$disabled=props.disabled,disabled=void 0!==_props$disabled&&_props$disabled,rest=_objectWithoutProperties(props,["children","label","name","message","hasError","generateCss","id","className","disabled"]);return children?react_default.a.createElement(Wrapper,{className:classnames_default()(className,{disabled:disabled,hasError:hasError})},react_default.a.createElement(RadioGroup.a,rest,children)):null}var components_Radio_Radio=Radio_RadioGroup;try{Radio_Radio.displayName="Radio",Radio_Radio.__docgenInfo={description:"",displayName:"Radio",props:{label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"ReactNode"}},muiRadioProps:{defaultValue:null,description:"",name:"muiRadioProps",required:!1,type:{name:"RadioProps"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Radio/Radio.tsx#Radio"]={docgenInfo:Radio_Radio.__docgenInfo,name:"Radio",path:"src/components/Radio/Radio.tsx#Radio"})}catch(__react_docgen_typescript_loader_error){}try{Radio_RadioGroup.displayName="RadioGroup",Radio_RadioGroup.__docgenInfo={description:"",displayName:"RadioGroup",props:{label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"ReactNode"}},hasError:{defaultValue:null,description:"",name:"hasError",required:!1,type:{name:"boolean"}},message:{defaultValue:null,description:"",name:"message",required:!1,type:{name:"ReactNode"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},options:{defaultValue:null,description:"",name:"options",required:!1,type:{name:"(RadioProps & { key: string; })[]"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Radio/Radio.tsx#RadioGroup"]={docgenInfo:Radio_RadioGroup.__docgenInfo,name:"RadioGroup",path:"src/components/Radio/Radio.tsx#RadioGroup"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/stories/Autocomplete.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"SingleChoice",(function(){return SingleChoice})),__webpack_require__.d(__webpack_exports__,"MultipleSelectChoice",(function(){return MultipleSelectChoice}));__webpack_require__("./node_modules/core-js/modules/es.array.is-array.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.description.js"),__webpack_require__("./node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.function.name.js"),__webpack_require__("./node_modules/core-js/modules/es.array.from.js"),__webpack_require__("./node_modules/core-js/modules/es.array.filter.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _parameters,react__WEBPACK_IMPORTED_MODULE_13__=__webpack_require__("./node_modules/react/index.js"),react__WEBPACK_IMPORTED_MODULE_13___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_13__),_storybook__WEBPACK_IMPORTED_MODULE_14__=__webpack_require__("./src/components/storybook.ts"),_Autocomplete__WEBPACK_IMPORTED_MODULE_15__=__webpack_require__("./src/components/Autocomplete/index.ts"),_material_ui_lab__WEBPACK_IMPORTED_MODULE_16__=__webpack_require__("./node_modules/@material-ui/lab/esm/useAutocomplete/useAutocomplete.js");function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){var _i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null==_i)return;var _s,_e,_arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}__webpack_exports__.default={parameters:(_parameters={storySource:{source:'\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = "\\n    \\n    // @ts-nocheck\\n    // @ts-ignore\\n    var __STORY__ = \\"import React, { useState } from \'react\';\\\\nimport { PageWrapper } from \'../storybook\';\\\\nimport { OptionType } from \'../Autocomplete/types\';\\\\nimport Autocomplete from \'../Autocomplete\';\\\\nimport { createFilterOptions } from \'@material-ui/lab\';\\\\n\\\\nexport default {\\\\n    title: \'Components/Autocomplete\',\\\\n    component: Autocomplete,\\\\n};\\\\n\\\\nconst top100Films: OptionType[] = [\\\\n    { value: \'The Shawshank Redemption\', title: \'The Shawshank Redemption\' },\\\\n    { value: \'The Godfather\', title: \'The Godfather\' },\\\\n    { value: \'The Dark Knight\', title: \'The Dark Knight\' },\\\\n    { value: \'12 Angry Men\', title: \'12 Angry Men\' },\\\\n];\\\\n\\\\nconst filterOptions = createFilterOptions<OptionType>({\\\\n    matchFrom: \'start\',\\\\n    limit: 2,\\\\n});\\\\n\\\\nexport const SingleChoice = () => {\\\\n    const [value, setValue] = useState<OptionType>();\\\\n\\\\n    return (\\\\n        <PageWrapper>\\\\n            <Autocomplete\\\\n                freeSolo\\\\n                options={top100Films}\\\\n                defaultValue={top100Films}\\\\n                getOptionLabel={(option) => option.title}\\\\n                value={value}\\\\n                onChange={(e, newValue) => setValue(newValue as OptionType)}\\\\n            />\\\\n        </PageWrapper>\\\\n    );\\\\n};\\\\n\\\\nexport const MultipleSelectChoice = () => {\\\\n    const [value, setValue] = useState<OptionType[]>([]);\\\\n\\\\n    return (\\\\n        <PageWrapper>\\\\n            <Autocomplete\\\\n                onDelete={(title) => {\\\\n                    setValue((prevValue) => prevValue.filter((v) => v.title !== title));\\\\n                }}\\\\n                multiple\\\\n                options={top100Films}\\\\n                defaultValue={top100Films}\\\\n                getOptionLabel={(option) => option.title}\\\\n                value={value}\\\\n                onChange={(e, newValue) => setValue(newValue as OptionType[])}\\\\n                filterOptions={filterOptions}\\\\n            />\\\\n        </PageWrapper>\\\\n    );\\\\n};\\\\n\\";\\n    // @ts-ignore\\n    var __LOCATIONS_MAP__ = {\\"SingleChoice\\":{\\"startLoc\\":{\\"col\\":28,\\"line\\":24},\\"endLoc\\":{\\"col\\":1,\\"line\\":39},\\"startBody\\":{\\"col\\":28,\\"line\\":24},\\"endBody\\":{\\"col\\":1,\\"line\\":39}},\\"MultipleSelectChoice\\":{\\"startLoc\\":{\\"col\\":36,\\"line\\":41},\\"endLoc\\":{\\"col\\":1,\\"line\\":60},\\"startBody\\":{\\"col\\":36,\\"line\\":41},\\"endBody\\":{\\"col\\":1,\\"line\\":60}}};\\n    \\nimport React, { useState } from \'react\';\\nimport { PageWrapper } from \'../storybook\';\\nimport { OptionType } from \'../Autocomplete/types\';\\nimport Autocomplete from \'../Autocomplete\';\\nimport { createFilterOptions } from \'@material-ui/lab\';\\n\\nexport default {parameters: {\\"storySource\\":{\\"source\\":\\"import React, { useState } from \'react\';\\\\nimport { PageWrapper } from \'../storybook\';\\\\nimport { OptionType } from \'../Autocomplete/types\';\\\\nimport Autocomplete from \'../Autocomplete\';\\\\nimport { createFilterOptions } from \'@material-ui/lab\';\\\\n\\\\nexport default {\\\\n    title: \'Components/Autocomplete\',\\\\n    component: Autocomplete,\\\\n};\\\\n\\\\nconst top100Films: OptionType[] = [\\\\n    { value: \'The Shawshank Redemption\', title: \'The Shawshank Redemption\' },\\\\n    { value: \'The Godfather\', title: \'The Godfather\' },\\\\n    { value: \'The Dark Knight\', title: \'The Dark Knight\' },\\\\n    { value: \'12 Angry Men\', title: \'12 Angry Men\' },\\\\n];\\\\n\\\\nconst filterOptions = createFilterOptions<OptionType>({\\\\n    matchFrom: \'start\',\\\\n    limit: 2,\\\\n});\\\\n\\\\nexport const SingleChoice = () => {\\\\n    const [value, setValue] = useState<OptionType>();\\\\n\\\\n    return (\\\\n        <PageWrapper>\\\\n            <Autocomplete\\\\n                freeSolo\\\\n                options={top100Films}\\\\n                defaultValue={top100Films}\\\\n                getOptionLabel={(option) => option.title}\\\\n                value={value}\\\\n                onChange={(e, newValue) => setValue(newValue as OptionType)}\\\\n            />\\\\n        </PageWrapper>\\\\n    );\\\\n};\\\\n\\\\nexport const MultipleSelectChoice = () => {\\\\n    const [value, setValue] = useState<OptionType[]>([]);\\\\n\\\\n    return (\\\\n        <PageWrapper>\\\\n            <Autocomplete\\\\n                onDelete={(title) => {\\\\n                    setValue((prevValue) => prevValue.filter((v) => v.title !== title));\\\\n                }}\\\\n                multiple\\\\n                options={top100Films}\\\\n                defaultValue={top100Films}\\\\n                getOptionLabel={(option) => option.title}\\\\n                value={value}\\\\n                onChange={(e, newValue) => setValue(newValue as OptionType[])}\\\\n                filterOptions={filterOptions}\\\\n            />\\\\n        </PageWrapper>\\\\n    );\\\\n};\\\\n\\",\\"locationsMap\\":{\\"single-choice\\":{\\"startLoc\\":{\\"col\\":28,\\"line\\":24},\\"endLoc\\":{\\"col\\":1,\\"line\\":39},\\"startBody\\":{\\"col\\":28,\\"line\\":24},\\"endBody\\":{\\"col\\":1,\\"line\\":39}},\\"multiple-select-choice\\":{\\"startLoc\\":{\\"col\\":36,\\"line\\":41},\\"endLoc\\":{\\"col\\":1,\\"line\\":60},\\"startBody\\":{\\"col\\":36,\\"line\\":41},\\"endBody\\":{\\"col\\":1,\\"line\\":60}}}},},\\n    title: \'Components/Autocomplete\',\\n    component: Autocomplete,\\n};\\n\\nconst top100Films: OptionType[] = [\\n    { value: \'The Shawshank Redemption\', title: \'The Shawshank Redemption\' },\\n    { value: \'The Godfather\', title: \'The Godfather\' },\\n    { value: \'The Dark Knight\', title: \'The Dark Knight\' },\\n    { value: \'12 Angry Men\', title: \'12 Angry Men\' },\\n];\\n\\nconst filterOptions = createFilterOptions<OptionType>({\\n    matchFrom: \'start\',\\n    limit: 2,\\n});\\n\\nexport const SingleChoice = () => {\\n    const [value, setValue] = useState<OptionType>();\\n\\n    return (\\n        <PageWrapper>\\n            <Autocomplete\\n                freeSolo\\n                options={top100Films}\\n                defaultValue={top100Films}\\n                getOptionLabel={(option) => option.title}\\n                value={value}\\n                onChange={(e, newValue) => setValue(newValue as OptionType)}\\n            />\\n        </PageWrapper>\\n    );\\n};;\\n\\nexport const MultipleSelectChoice = () => {\\n    const [value, setValue] = useState<OptionType[]>([]);\\n\\n    return (\\n        <PageWrapper>\\n            <Autocomplete\\n                onDelete={(title) => {\\n                    setValue((prevValue) => prevValue.filter((v) => v.title !== title));\\n                }}\\n                multiple\\n                options={top100Films}\\n                defaultValue={top100Films}\\n                getOptionLabel={(option) => option.title}\\n                value={value}\\n                onChange={(e, newValue) => setValue(newValue as OptionType[])}\\n                filterOptions={filterOptions}\\n            />\\n        </PageWrapper>\\n    );\\n};\\n";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {"SingleChoice":{"startLoc":{"col":28,"line":32},"endLoc":{"col":1,"line":47},"startBody":{"col":28,"line":32},"endBody":{"col":1,"line":47}},"MultipleSelectChoice":{"startLoc":{"col":36,"line":49},"endLoc":{"col":1,"line":68},"startBody":{"col":36,"line":49},"endBody":{"col":1,"line":68}}};\n    \n\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = "import React, { useState } from \'react\';\\nimport { PageWrapper } from \'../storybook\';\\nimport { OptionType } from \'../Autocomplete/types\';\\nimport Autocomplete from \'../Autocomplete\';\\nimport { createFilterOptions } from \'@material-ui/lab\';\\n\\nexport default {\\n    title: \'Components/Autocomplete\',\\n    component: Autocomplete,\\n};\\n\\nconst top100Films: OptionType[] = [\\n    { value: \'The Shawshank Redemption\', title: \'The Shawshank Redemption\' },\\n    { value: \'The Godfather\', title: \'The Godfather\' },\\n    { value: \'The Dark Knight\', title: \'The Dark Knight\' },\\n    { value: \'12 Angry Men\', title: \'12 Angry Men\' },\\n];\\n\\nconst filterOptions = createFilterOptions<OptionType>({\\n    matchFrom: \'start\',\\n    limit: 2,\\n});\\n\\nexport const SingleChoice = () => {\\n    const [value, setValue] = useState<OptionType>();\\n\\n    return (\\n        <PageWrapper>\\n            <Autocomplete\\n                freeSolo\\n                options={top100Films}\\n                defaultValue={top100Films}\\n                getOptionLabel={(option) => option.title}\\n                value={value}\\n                onChange={(e, newValue) => setValue(newValue as OptionType)}\\n            />\\n        </PageWrapper>\\n    );\\n};\\n\\nexport const MultipleSelectChoice = () => {\\n    const [value, setValue] = useState<OptionType[]>([]);\\n\\n    return (\\n        <PageWrapper>\\n            <Autocomplete\\n                onDelete={(title) => {\\n                    setValue((prevValue) => prevValue.filter((v) => v.title !== title));\\n                }}\\n                multiple\\n                options={top100Films}\\n                defaultValue={top100Films}\\n                getOptionLabel={(option) => option.title}\\n                value={value}\\n                onChange={(e, newValue) => setValue(newValue as OptionType[])}\\n                filterOptions={filterOptions}\\n            />\\n        </PageWrapper>\\n    );\\n};\\n";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {"SingleChoice":{"startLoc":{"col":28,"line":24},"endLoc":{"col":1,"line":39},"startBody":{"col":28,"line":24},"endBody":{"col":1,"line":39}},"MultipleSelectChoice":{"startLoc":{"col":36,"line":41},"endLoc":{"col":1,"line":60},"startBody":{"col":36,"line":41},"endBody":{"col":1,"line":60}}};\n    \nimport React, { useState } from \'react\';\nimport { PageWrapper } from \'../storybook\';\nimport { OptionType } from \'../Autocomplete/types\';\nimport Autocomplete from \'../Autocomplete\';\nimport { createFilterOptions } from \'@material-ui/lab\';\n\nexport default {parameters: {"storySource":{"source":"import React, { useState } from \'react\';\\nimport { PageWrapper } from \'../storybook\';\\nimport { OptionType } from \'../Autocomplete/types\';\\nimport Autocomplete from \'../Autocomplete\';\\nimport { createFilterOptions } from \'@material-ui/lab\';\\n\\nexport default {\\n    title: \'Components/Autocomplete\',\\n    component: Autocomplete,\\n};\\n\\nconst top100Films: OptionType[] = [\\n    { value: \'The Shawshank Redemption\', title: \'The Shawshank Redemption\' },\\n    { value: \'The Godfather\', title: \'The Godfather\' },\\n    { value: \'The Dark Knight\', title: \'The Dark Knight\' },\\n    { value: \'12 Angry Men\', title: \'12 Angry Men\' },\\n];\\n\\nconst filterOptions = createFilterOptions<OptionType>({\\n    matchFrom: \'start\',\\n    limit: 2,\\n});\\n\\nexport const SingleChoice = () => {\\n    const [value, setValue] = useState<OptionType>();\\n\\n    return (\\n        <PageWrapper>\\n            <Autocomplete\\n                freeSolo\\n                options={top100Films}\\n                defaultValue={top100Films}\\n                getOptionLabel={(option) => option.title}\\n                value={value}\\n                onChange={(e, newValue) => setValue(newValue as OptionType)}\\n            />\\n        </PageWrapper>\\n    );\\n};\\n\\nexport const MultipleSelectChoice = () => {\\n    const [value, setValue] = useState<OptionType[]>([]);\\n\\n    return (\\n        <PageWrapper>\\n            <Autocomplete\\n                onDelete={(title) => {\\n                    setValue((prevValue) => prevValue.filter((v) => v.title !== title));\\n                }}\\n                multiple\\n                options={top100Films}\\n                defaultValue={top100Films}\\n                getOptionLabel={(option) => option.title}\\n                value={value}\\n                onChange={(e, newValue) => setValue(newValue as OptionType[])}\\n                filterOptions={filterOptions}\\n            />\\n        </PageWrapper>\\n    );\\n};\\n","locationsMap":{"single-choice":{"startLoc":{"col":28,"line":24},"endLoc":{"col":1,"line":39},"startBody":{"col":28,"line":24},"endBody":{"col":1,"line":39}},"multiple-select-choice":{"startLoc":{"col":36,"line":41},"endLoc":{"col":1,"line":60},"startBody":{"col":36,"line":41},"endBody":{"col":1,"line":60}}}},},\n    title: \'Components/Autocomplete\',\n    component: Autocomplete,\n};\n\nconst top100Films: OptionType[] = [\n    { value: \'The Shawshank Redemption\', title: \'The Shawshank Redemption\' },\n    { value: \'The Godfather\', title: \'The Godfather\' },\n    { value: \'The Dark Knight\', title: \'The Dark Knight\' },\n    { value: \'12 Angry Men\', title: \'12 Angry Men\' },\n];\n\nconst filterOptions = createFilterOptions<OptionType>({\n    matchFrom: \'start\',\n    limit: 2,\n});\n\nexport const SingleChoice = () => {\n    const [value, setValue] = useState<OptionType>();\n\n    return (\n        <PageWrapper>\n            <Autocomplete\n                freeSolo\n                options={top100Films}\n                defaultValue={top100Films}\n                getOptionLabel={(option) => option.title}\n                value={value}\n                onChange={(e, newValue) => setValue(newValue as OptionType)}\n            />\n        </PageWrapper>\n    );\n};;;\n\nexport const MultipleSelectChoice = () => {\n    const [value, setValue] = useState<OptionType[]>([]);\n\n    return (\n        <PageWrapper>\n            <Autocomplete\n                onDelete={(title) => {\n                    setValue((prevValue) => prevValue.filter((v) => v.title !== title));\n                }}\n                multiple\n                options={top100Films}\n                defaultValue={top100Films}\n                getOptionLabel={(option) => option.title}\n                value={value}\n                onChange={(e, newValue) => setValue(newValue as OptionType[])}\n                filterOptions={filterOptions}\n            />\n        </PageWrapper>\n    );\n};\n\n\n\nSingleChoice.parameters = { storySource: { source: "() => {\\n    const [value, setValue] = useState<OptionType>();\\n\\n    return (\\n        <PageWrapper>\\n            <Autocomplete\\n                freeSolo\\n                options={top100Films}\\n                defaultValue={top100Films}\\n                getOptionLabel={(option) => option.title}\\n                value={value}\\n                onChange={(e, newValue) => setValue(newValue as OptionType)}\\n            />\\n        </PageWrapper>\\n    );\\n}" }, ...SingleChoice.parameters };\nMultipleSelectChoice.parameters = { storySource: { source: "() => {\\n    const [value, setValue] = useState<OptionType[]>([]);\\n\\n    return (\\n        <PageWrapper>\\n            <Autocomplete\\n                onDelete={(title) => {\\n                    setValue((prevValue) => prevValue.filter((v) => v.title !== title));\\n                }}\\n                multiple\\n                options={top100Films}\\n                defaultValue={top100Films}\\n                getOptionLabel={(option) => option.title}\\n                value={value}\\n                onChange={(e, newValue) => setValue(newValue as OptionType[])}\\n                filterOptions={filterOptions}\\n            />\\n        </PageWrapper>\\n    );\\n}" }, ...MultipleSelectChoice.parameters };',locationsMap:{"single-choice":{startLoc:{col:28,line:40},endLoc:{col:1,line:55},startBody:{col:28,line:40},endBody:{col:1,line:55}},"multiple-select-choice":{startLoc:{col:36,line:57},endLoc:{col:1,line:76},startBody:{col:36,line:57},endBody:{col:1,line:76}}}}},_parameters.storySource={source:"import React, { useState } from 'react';\nimport { PageWrapper } from '../storybook';\nimport { OptionType } from '../Autocomplete/types';\nimport Autocomplete from '../Autocomplete';\nimport { createFilterOptions } from '@material-ui/lab';\n\nexport default {\n    title: 'Components/Autocomplete',\n    component: Autocomplete,\n};\n\nconst top100Films: OptionType[] = [\n    { value: 'The Shawshank Redemption', title: 'The Shawshank Redemption' },\n    { value: 'The Godfather', title: 'The Godfather' },\n    { value: 'The Dark Knight', title: 'The Dark Knight' },\n    { value: '12 Angry Men', title: '12 Angry Men' },\n];\n\nconst filterOptions = createFilterOptions<OptionType>({\n    matchFrom: 'start',\n    limit: 2,\n});\n\nexport const SingleChoice = () => {\n    const [value, setValue] = useState<OptionType>();\n\n    return (\n        <PageWrapper>\n            <Autocomplete\n                freeSolo\n                options={top100Films}\n                defaultValue={top100Films}\n                getOptionLabel={(option) => option.title}\n                value={value}\n                onChange={(e, newValue) => setValue(newValue as OptionType)}\n            />\n        </PageWrapper>\n    );\n};\n\nexport const MultipleSelectChoice = () => {\n    const [value, setValue] = useState<OptionType[]>([]);\n\n    return (\n        <PageWrapper>\n            <Autocomplete\n                onDelete={(title) => {\n                    setValue((prevValue) => prevValue.filter((v) => v.title !== title));\n                }}\n                multiple\n                options={top100Films}\n                defaultValue={top100Films}\n                getOptionLabel={(option) => option.title}\n                value={value}\n                onChange={(e, newValue) => setValue(newValue as OptionType[])}\n                filterOptions={filterOptions}\n            />\n        </PageWrapper>\n    );\n};\n",locationsMap:{"single-choice":{startLoc:{col:28,line:24},endLoc:{col:1,line:39},startBody:{col:28,line:24},endBody:{col:1,line:39}},"multiple-select-choice":{startLoc:{col:36,line:41},endLoc:{col:1,line:60},startBody:{col:36,line:41},endBody:{col:1,line:60}}}},_parameters),title:"Components/Autocomplete",component:_Autocomplete__WEBPACK_IMPORTED_MODULE_15__.a};var top100Films=[{value:"The Shawshank Redemption",title:"The Shawshank Redemption"},{value:"The Godfather",title:"The Godfather"},{value:"The Dark Knight",title:"The Dark Knight"},{value:"12 Angry Men",title:"12 Angry Men"}],filterOptions=Object(_material_ui_lab__WEBPACK_IMPORTED_MODULE_16__.a)({matchFrom:"start",limit:2}),SingleChoice=function SingleChoice(){var _useState2=_slicedToArray(Object(react__WEBPACK_IMPORTED_MODULE_13__.useState)(),2),value=_useState2[0],setValue=_useState2[1];return react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement(_storybook__WEBPACK_IMPORTED_MODULE_14__.a,null,react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement(_Autocomplete__WEBPACK_IMPORTED_MODULE_15__.a,{freeSolo:!0,options:top100Films,defaultValue:top100Films,getOptionLabel:function getOptionLabel(option){return option.title},value:value,onChange:function onChange(e,newValue){return setValue(newValue)}}))},MultipleSelectChoice=function MultipleSelectChoice(){var _useState4=_slicedToArray(Object(react__WEBPACK_IMPORTED_MODULE_13__.useState)([]),2),value=_useState4[0],setValue=_useState4[1];return react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement(_storybook__WEBPACK_IMPORTED_MODULE_14__.a,null,react__WEBPACK_IMPORTED_MODULE_13___default.a.createElement(_Autocomplete__WEBPACK_IMPORTED_MODULE_15__.a,{onDelete:function onDelete(title){setValue((function(prevValue){return prevValue.filter((function(v){return v.title!==title}))}))},multiple:!0,options:top100Films,defaultValue:top100Films,getOptionLabel:function getOptionLabel(option){return option.title},value:value,onChange:function onChange(e,newValue){return setValue(newValue)},filterOptions:filterOptions}))};SingleChoice.parameters=Object.assign({storySource:{source:"() => {\n    const [value, setValue] = useState<OptionType>();\n\n    return (\n        <PageWrapper>\n            <Autocomplete\n                freeSolo\n                options={top100Films}\n                defaultValue={top100Films}\n                getOptionLabel={(option) => option.title}\n                value={value}\n                onChange={(e, newValue) => setValue(newValue as OptionType)}\n            />\n        </PageWrapper>\n    );\n}"}},SingleChoice.parameters),MultipleSelectChoice.parameters=Object.assign({storySource:{source:"() => {\n    const [value, setValue] = useState<OptionType[]>([]);\n\n    return (\n        <PageWrapper>\n            <Autocomplete\n                onDelete={(title) => {\n                    setValue((prevValue) => prevValue.filter((v) => v.title !== title));\n                }}\n                multiple\n                options={top100Films}\n                defaultValue={top100Films}\n                getOptionLabel={(option) => option.title}\n                value={value}\n                onChange={(e, newValue) => setValue(newValue as OptionType[])}\n                filterOptions={filterOptions}\n            />\n        </PageWrapper>\n    );\n}"}},MultipleSelectChoice.parameters)},"./src/components/stories/Button.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Button_stories_Default})),__webpack_require__.d(__webpack_exports__,"Secondary",(function(){return Button_stories_Secondary})),__webpack_require__.d(__webpack_exports__,"Disabled",(function(){return Button_stories_Disabled})),__webpack_require__.d(__webpack_exports__,"WithClickListener",(function(){return Button_stories_WithClickListener}));__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _templateObject,storybook=__webpack_require__("./src/components/storybook.ts"),react=__webpack_require__("./node_modules/react/index.js"),react_default=__webpack_require__.n(react);__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.array.slice.js");var styled_Wrapper=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js").a.button(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["\n    background-color: transparent;\n    border: 1px solid;\n    border-radius: 4px;\n    cursor: pointer;\n    font-size: 1rem;\n    padding: 9px 36px;\n\n    &:disabled {\n        pointer-events: none;\n        cursor: not-allowed;\n        background-color: lightgray;\n    }\n\n    &:hover {\n        background-color: rgba(0, 149, 179, 0.1);\n        border-color: rgba(0, 149, 179, 0.8);\n    }\n\n    &:active {\n        background-color: rgba(5, 102, 121, 0.1);\n        border-color: red;\n        color: gray;\n    }\n"])));function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var Button=Object(react.forwardRef)((function(props,ref){var children=props.children,_props$disabled=props.disabled,disabled=void 0!==_props$disabled&&_props$disabled,onClick=props.onClick,_props$type=(props.secondary,props.type),type=void 0===_props$type?"button":_props$type;_objectWithoutProperties(props,["children","disabled","onClick","secondary","type"]);return react_default.a.createElement(styled_Wrapper,{disabled:disabled,onClick:onClick,ref:ref,type:type},children)})),Button_Button=Object(react.memo)(Button);try{Wrapper.displayName="Wrapper",Wrapper.__docgenInfo={description:"",displayName:"Wrapper",props:{ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"((instance: HTMLButtonElement | null) => void) | RefObject<HTMLButtonElement> | null"}},theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"any"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"undefined"}},forwardedAs:{defaultValue:null,description:"",name:"forwardedAs",required:!1,type:{name:"undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Button/Button.tsx#Wrapper"]={docgenInfo:Wrapper.__docgenInfo,name:"Wrapper",path:"src/components/Button/Button.tsx#Wrapper"})}catch(__react_docgen_typescript_loader_error){}try{Button.displayName="Button",Button.__docgenInfo={description:"",displayName:"Button",props:{disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void)"}},secondary:{defaultValue:null,description:"",name:"secondary",required:!1,type:{name:"boolean"}},type:{defaultValue:null,description:"",name:"type",required:!1,type:{name:"enum",value:[{value:'"button"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Button/Button.tsx#Button"]={docgenInfo:Button.__docgenInfo,name:"Button",path:"src/components/Button/Button.tsx#Button"})}catch(__react_docgen_typescript_loader_error){}__webpack_require__("./src/components/Radio/index.ts"),__webpack_require__("./src/components/Autocomplete/index.ts"),__webpack_exports__.default={parameters:(_parameters={storySource:{source:'\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = "\\n    \\n    // @ts-nocheck\\n    // @ts-ignore\\n    var __STORY__ = \\"import { PageWrapper } from \'../storybook\';\\\\nimport React from \'react\';\\\\nimport { Button } from \'..\';\\\\n\\\\nexport default {\\\\n    title: \'Components/Button\',\\\\n    component: Button,\\\\n};\\\\n\\\\nexport const Default = () => (\\\\n    <PageWrapper>\\\\n        <Button>Default</Button>\\\\n    </PageWrapper>\\\\n);\\\\n\\\\nexport const Secondary = () => (\\\\n    <PageWrapper>\\\\n        <Button secondary>Secondary</Button>\\\\n    </PageWrapper>\\\\n);\\\\n\\\\nexport const Disabled = () => (\\\\n    <PageWrapper>\\\\n        <Button disabled>Disabled</Button>\\\\n    </PageWrapper>\\\\n);\\\\n\\\\nexport const WithClickListener = () => (\\\\n    <PageWrapper>\\\\n        <Button\\\\n            onClick={(event) => {\\\\n                alert(\'You clicked the \\\\\\"non-disabled\\\\\\" button\');\\\\n                console.log(event);\\\\n            }}\\\\n        >\\\\n            Click to see the alert\\\\n        </Button>\\\\n    </PageWrapper>\\\\n);\\\\n\\";\\n    // @ts-ignore\\n    var __LOCATIONS_MAP__ = {\\"Default\\":{\\"startLoc\\":{\\"col\\":23,\\"line\\":10},\\"endLoc\\":{\\"col\\":1,\\"line\\":14},\\"startBody\\":{\\"col\\":23,\\"line\\":10},\\"endBody\\":{\\"col\\":1,\\"line\\":14}},\\"Secondary\\":{\\"startLoc\\":{\\"col\\":25,\\"line\\":16},\\"endLoc\\":{\\"col\\":1,\\"line\\":20},\\"startBody\\":{\\"col\\":25,\\"line\\":16},\\"endBody\\":{\\"col\\":1,\\"line\\":20}},\\"Disabled\\":{\\"startLoc\\":{\\"col\\":24,\\"line\\":22},\\"endLoc\\":{\\"col\\":1,\\"line\\":26},\\"startBody\\":{\\"col\\":24,\\"line\\":22},\\"endBody\\":{\\"col\\":1,\\"line\\":26}},\\"WithClickListener\\":{\\"startLoc\\":{\\"col\\":33,\\"line\\":28},\\"endLoc\\":{\\"col\\":1,\\"line\\":39},\\"startBody\\":{\\"col\\":33,\\"line\\":28},\\"endBody\\":{\\"col\\":1,\\"line\\":39}}};\\n    \\nimport { PageWrapper } from \'../storybook\';\\nimport React from \'react\';\\nimport { Button } from \'..\';\\n\\nexport default {parameters: {\\"storySource\\":{\\"source\\":\\"import { PageWrapper } from \'../storybook\';\\\\nimport React from \'react\';\\\\nimport { Button } from \'..\';\\\\n\\\\nexport default {\\\\n    title: \'Components/Button\',\\\\n    component: Button,\\\\n};\\\\n\\\\nexport const Default = () => (\\\\n    <PageWrapper>\\\\n        <Button>Default</Button>\\\\n    </PageWrapper>\\\\n);\\\\n\\\\nexport const Secondary = () => (\\\\n    <PageWrapper>\\\\n        <Button secondary>Secondary</Button>\\\\n    </PageWrapper>\\\\n);\\\\n\\\\nexport const Disabled = () => (\\\\n    <PageWrapper>\\\\n        <Button disabled>Disabled</Button>\\\\n    </PageWrapper>\\\\n);\\\\n\\\\nexport const WithClickListener = () => (\\\\n    <PageWrapper>\\\\n        <Button\\\\n            onClick={(event) => {\\\\n                alert(\'You clicked the \\\\\\"non-disabled\\\\\\" button\');\\\\n                console.log(event);\\\\n            }}\\\\n        >\\\\n            Click to see the alert\\\\n        </Button>\\\\n    </PageWrapper>\\\\n);\\\\n\\",\\"locationsMap\\":{\\"default\\":{\\"startLoc\\":{\\"col\\":23,\\"line\\":10},\\"endLoc\\":{\\"col\\":1,\\"line\\":14},\\"startBody\\":{\\"col\\":23,\\"line\\":10},\\"endBody\\":{\\"col\\":1,\\"line\\":14}},\\"secondary\\":{\\"startLoc\\":{\\"col\\":25,\\"line\\":16},\\"endLoc\\":{\\"col\\":1,\\"line\\":20},\\"startBody\\":{\\"col\\":25,\\"line\\":16},\\"endBody\\":{\\"col\\":1,\\"line\\":20}},\\"disabled\\":{\\"startLoc\\":{\\"col\\":24,\\"line\\":22},\\"endLoc\\":{\\"col\\":1,\\"line\\":26},\\"startBody\\":{\\"col\\":24,\\"line\\":22},\\"endBody\\":{\\"col\\":1,\\"line\\":26}},\\"with-click-listener\\":{\\"startLoc\\":{\\"col\\":33,\\"line\\":28},\\"endLoc\\":{\\"col\\":1,\\"line\\":39},\\"startBody\\":{\\"col\\":33,\\"line\\":28},\\"endBody\\":{\\"col\\":1,\\"line\\":39}}}},},\\n    title: \'Components/Button\',\\n    component: Button,\\n};\\n\\nexport const Default = () => (\\n    <PageWrapper>\\n        <Button>Default</Button>\\n    </PageWrapper>\\n);;\\n\\nexport const Secondary = () => (\\n    <PageWrapper>\\n        <Button secondary>Secondary</Button>\\n    </PageWrapper>\\n);;\\n\\nexport const Disabled = () => (\\n    <PageWrapper>\\n        <Button disabled>Disabled</Button>\\n    </PageWrapper>\\n);;\\n\\nexport const WithClickListener = () => (\\n    <PageWrapper>\\n        <Button\\n            onClick={(event) => {\\n                alert(\'You clicked the \\"non-disabled\\" button\');\\n                console.log(event);\\n            }}\\n        >\\n            Click to see the alert\\n        </Button>\\n    </PageWrapper>\\n);\\n";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {"Default":{"startLoc":{"col":23,"line":18},"endLoc":{"col":1,"line":22},"startBody":{"col":23,"line":18},"endBody":{"col":1,"line":22}},"Secondary":{"startLoc":{"col":25,"line":24},"endLoc":{"col":1,"line":28},"startBody":{"col":25,"line":24},"endBody":{"col":1,"line":28}},"Disabled":{"startLoc":{"col":24,"line":30},"endLoc":{"col":1,"line":34},"startBody":{"col":24,"line":30},"endBody":{"col":1,"line":34}},"WithClickListener":{"startLoc":{"col":33,"line":36},"endLoc":{"col":1,"line":47},"startBody":{"col":33,"line":36},"endBody":{"col":1,"line":47}}};\n    \n\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = "import { PageWrapper } from \'../storybook\';\\nimport React from \'react\';\\nimport { Button } from \'..\';\\n\\nexport default {\\n    title: \'Components/Button\',\\n    component: Button,\\n};\\n\\nexport const Default = () => (\\n    <PageWrapper>\\n        <Button>Default</Button>\\n    </PageWrapper>\\n);\\n\\nexport const Secondary = () => (\\n    <PageWrapper>\\n        <Button secondary>Secondary</Button>\\n    </PageWrapper>\\n);\\n\\nexport const Disabled = () => (\\n    <PageWrapper>\\n        <Button disabled>Disabled</Button>\\n    </PageWrapper>\\n);\\n\\nexport const WithClickListener = () => (\\n    <PageWrapper>\\n        <Button\\n            onClick={(event) => {\\n                alert(\'You clicked the \\"non-disabled\\" button\');\\n                console.log(event);\\n            }}\\n        >\\n            Click to see the alert\\n        </Button>\\n    </PageWrapper>\\n);\\n";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {"Default":{"startLoc":{"col":23,"line":10},"endLoc":{"col":1,"line":14},"startBody":{"col":23,"line":10},"endBody":{"col":1,"line":14}},"Secondary":{"startLoc":{"col":25,"line":16},"endLoc":{"col":1,"line":20},"startBody":{"col":25,"line":16},"endBody":{"col":1,"line":20}},"Disabled":{"startLoc":{"col":24,"line":22},"endLoc":{"col":1,"line":26},"startBody":{"col":24,"line":22},"endBody":{"col":1,"line":26}},"WithClickListener":{"startLoc":{"col":33,"line":28},"endLoc":{"col":1,"line":39},"startBody":{"col":33,"line":28},"endBody":{"col":1,"line":39}}};\n    \nimport { PageWrapper } from \'../storybook\';\nimport React from \'react\';\nimport { Button } from \'..\';\n\nexport default {parameters: {"storySource":{"source":"import { PageWrapper } from \'../storybook\';\\nimport React from \'react\';\\nimport { Button } from \'..\';\\n\\nexport default {\\n    title: \'Components/Button\',\\n    component: Button,\\n};\\n\\nexport const Default = () => (\\n    <PageWrapper>\\n        <Button>Default</Button>\\n    </PageWrapper>\\n);\\n\\nexport const Secondary = () => (\\n    <PageWrapper>\\n        <Button secondary>Secondary</Button>\\n    </PageWrapper>\\n);\\n\\nexport const Disabled = () => (\\n    <PageWrapper>\\n        <Button disabled>Disabled</Button>\\n    </PageWrapper>\\n);\\n\\nexport const WithClickListener = () => (\\n    <PageWrapper>\\n        <Button\\n            onClick={(event) => {\\n                alert(\'You clicked the \\"non-disabled\\" button\');\\n                console.log(event);\\n            }}\\n        >\\n            Click to see the alert\\n        </Button>\\n    </PageWrapper>\\n);\\n","locationsMap":{"default":{"startLoc":{"col":23,"line":10},"endLoc":{"col":1,"line":14},"startBody":{"col":23,"line":10},"endBody":{"col":1,"line":14}},"secondary":{"startLoc":{"col":25,"line":16},"endLoc":{"col":1,"line":20},"startBody":{"col":25,"line":16},"endBody":{"col":1,"line":20}},"disabled":{"startLoc":{"col":24,"line":22},"endLoc":{"col":1,"line":26},"startBody":{"col":24,"line":22},"endBody":{"col":1,"line":26}},"with-click-listener":{"startLoc":{"col":33,"line":28},"endLoc":{"col":1,"line":39},"startBody":{"col":33,"line":28},"endBody":{"col":1,"line":39}}}},},\n    title: \'Components/Button\',\n    component: Button,\n};\n\nexport const Default = () => (\n    <PageWrapper>\n        <Button>Default</Button>\n    </PageWrapper>\n);;;\n\nexport const Secondary = () => (\n    <PageWrapper>\n        <Button secondary>Secondary</Button>\n    </PageWrapper>\n);;;\n\nexport const Disabled = () => (\n    <PageWrapper>\n        <Button disabled>Disabled</Button>\n    </PageWrapper>\n);;;\n\nexport const WithClickListener = () => (\n    <PageWrapper>\n        <Button\n            onClick={(event) => {\n                alert(\'You clicked the "non-disabled" button\');\n                console.log(event);\n            }}\n        >\n            Click to see the alert\n        </Button>\n    </PageWrapper>\n);\n\n\n\nDefault.parameters = { storySource: { source: "() => (\\n    <PageWrapper>\\n        <Button>Default</Button>\\n    </PageWrapper>\\n)" }, ...Default.parameters };\nSecondary.parameters = { storySource: { source: "() => (\\n    <PageWrapper>\\n        <Button secondary>Secondary</Button>\\n    </PageWrapper>\\n)" }, ...Secondary.parameters };\nDisabled.parameters = { storySource: { source: "() => (\\n    <PageWrapper>\\n        <Button disabled>Disabled</Button>\\n    </PageWrapper>\\n)" }, ...Disabled.parameters };\nWithClickListener.parameters = { storySource: { source: "() => (\\n    <PageWrapper>\\n        <Button\\n            onClick={(event) => {\\n                alert(\'You clicked the \\"non-disabled\\" button\');\\n                console.log(event);\\n            }}\\n        >\\n            Click to see the alert\\n        </Button>\\n    </PageWrapper>\\n)" }, ...WithClickListener.parameters };',locationsMap:{default:{startLoc:{col:23,line:26},endLoc:{col:1,line:30},startBody:{col:23,line:26},endBody:{col:1,line:30}},secondary:{startLoc:{col:25,line:32},endLoc:{col:1,line:36},startBody:{col:25,line:32},endBody:{col:1,line:36}},disabled:{startLoc:{col:24,line:38},endLoc:{col:1,line:42},startBody:{col:24,line:38},endBody:{col:1,line:42}},"with-click-listener":{startLoc:{col:33,line:44},endLoc:{col:1,line:55},startBody:{col:33,line:44},endBody:{col:1,line:55}}}}},_parameters.storySource={source:"import { PageWrapper } from '../storybook';\nimport React from 'react';\nimport { Button } from '..';\n\nexport default {\n    title: 'Components/Button',\n    component: Button,\n};\n\nexport const Default = () => (\n    <PageWrapper>\n        <Button>Default</Button>\n    </PageWrapper>\n);\n\nexport const Secondary = () => (\n    <PageWrapper>\n        <Button secondary>Secondary</Button>\n    </PageWrapper>\n);\n\nexport const Disabled = () => (\n    <PageWrapper>\n        <Button disabled>Disabled</Button>\n    </PageWrapper>\n);\n\nexport const WithClickListener = () => (\n    <PageWrapper>\n        <Button\n            onClick={(event) => {\n                alert('You clicked the \"non-disabled\" button');\n                console.log(event);\n            }}\n        >\n            Click to see the alert\n        </Button>\n    </PageWrapper>\n);\n",locationsMap:{default:{startLoc:{col:23,line:10},endLoc:{col:1,line:14},startBody:{col:23,line:10},endBody:{col:1,line:14}},secondary:{startLoc:{col:25,line:16},endLoc:{col:1,line:20},startBody:{col:25,line:16},endBody:{col:1,line:20}},disabled:{startLoc:{col:24,line:22},endLoc:{col:1,line:26},startBody:{col:24,line:22},endBody:{col:1,line:26}},"with-click-listener":{startLoc:{col:33,line:28},endLoc:{col:1,line:39},startBody:{col:33,line:28},endBody:{col:1,line:39}}}},_parameters),title:"Components/Button",component:Button_Button};var _parameters,Button_stories_Default=function Default(){return react_default.a.createElement(storybook.a,null,react_default.a.createElement(Button_Button,null,"Default"))},Button_stories_Secondary=function Secondary(){return react_default.a.createElement(storybook.a,null,react_default.a.createElement(Button_Button,{secondary:!0},"Secondary"))},Button_stories_Disabled=function Disabled(){return react_default.a.createElement(storybook.a,null,react_default.a.createElement(Button_Button,{disabled:!0},"Disabled"))},Button_stories_WithClickListener=function WithClickListener(){return react_default.a.createElement(storybook.a,null,react_default.a.createElement(Button_Button,{onClick:function onClick(event){alert('You clicked the "non-disabled" button'),console.log(event)}},"Click to see the alert"))};Button_stories_Default.parameters=Object.assign({storySource:{source:"() => (\n    <PageWrapper>\n        <Button>Default</Button>\n    </PageWrapper>\n)"}},Button_stories_Default.parameters),Button_stories_Secondary.parameters=Object.assign({storySource:{source:"() => (\n    <PageWrapper>\n        <Button secondary>Secondary</Button>\n    </PageWrapper>\n)"}},Button_stories_Secondary.parameters),Button_stories_Disabled.parameters=Object.assign({storySource:{source:"() => (\n    <PageWrapper>\n        <Button disabled>Disabled</Button>\n    </PageWrapper>\n)"}},Button_stories_Disabled.parameters),Button_stories_WithClickListener.parameters=Object.assign({storySource:{source:"() => (\n    <PageWrapper>\n        <Button\n            onClick={(event) => {\n                alert('You clicked the \"non-disabled\" button');\n                console.log(event);\n            }}\n        >\n            Click to see the alert\n        </Button>\n    </PageWrapper>\n)"}},Button_stories_WithClickListener.parameters)},"./src/components/stories/Radio.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Standard",(function(){return Standard})),__webpack_require__.d(__webpack_exports__,"DisabledState",(function(){return DisabledState})),__webpack_require__.d(__webpack_exports__,"HorizontalLayout",(function(){return HorizontalLayout})),__webpack_require__.d(__webpack_exports__,"LabelPlacement",(function(){return LabelPlacement})),__webpack_require__.d(__webpack_exports__,"PassingRadioProps",(function(){return PassingRadioProps})),__webpack_require__.d(__webpack_exports__,"ErrorState",(function(){return ErrorState}));__webpack_require__("./node_modules/core-js/modules/es.array.is-array.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.description.js"),__webpack_require__("./node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.function.name.js"),__webpack_require__("./node_modules/core-js/modules/es.array.from.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _parameters,react__WEBPACK_IMPORTED_MODULE_12__=__webpack_require__("./node_modules/react/index.js"),react__WEBPACK_IMPORTED_MODULE_12___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_12__),_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_13__=__webpack_require__("./node_modules/@material-ui/core/esm/Button/Button.js"),_Radio__WEBPACK_IMPORTED_MODULE_14__=__webpack_require__("./src/components/Radio/index.ts"),_storybook__WEBPACK_IMPORTED_MODULE_15__=__webpack_require__("./src/components/storybook.ts"),_material_ui_core__WEBPACK_IMPORTED_MODULE_16__=__webpack_require__("./node_modules/@material-ui/core/esm/FormControlLabel/FormControlLabel.js"),_material_ui_core__WEBPACK_IMPORTED_MODULE_17__=__webpack_require__("./node_modules/@material-ui/core/esm/FormHelperText/FormHelperText.js");function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){var _i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null==_i)return;var _s,_e,_arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}__webpack_exports__.default={parameters:(_parameters={storySource:{source:'\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = "\\n    \\n    // @ts-nocheck\\n    // @ts-ignore\\n    var __STORY__ = \\"import React, { useState } from \'react\';\\\\nimport Button from \'@material-ui/core/Button\';\\\\nimport RadioGroup, { Radio } from \'../Radio\';\\\\n\\\\nimport { PageWrapper } from \'../storybook\';\\\\nimport { FormControlLabel, FormHelperText } from \'@material-ui/core\';\\\\n\\\\nexport default {\\\\n    title: \'Components/Radio\',\\\\n    component: RadioGroup,\\\\n};\\\\n\\\\nexport const Standard = () => {\\\\n    const defaultValue = \'female\';\\\\n    const [, setValue] = useState(defaultValue);\\\\n\\\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\\\\n        setValue((event.target as HTMLInputElement).value);\\\\n    };\\\\n\\\\n    return (\\\\n        <PageWrapper>\\\\n            <RadioGroup name=\\\\\\"standard-usage\\\\\\" onChange={onChange} label=\\\\\\"Standard Usage\\\\\\" defaultValue={defaultValue}>\\\\n                <Radio value=\\\\\\"female\\\\\\" label=\\\\\\"Female\\\\\\" />\\\\n                <Radio value=\\\\\\"male\\\\\\" label=\\\\\\"Male\\\\\\" />\\\\n                <Radio value=\\\\\\"other\\\\\\" label=\\\\\\"Other\\\\\\" />\\\\n            </RadioGroup>\\\\n        </PageWrapper>\\\\n    );\\\\n};\\\\n\\\\nexport const DisabledState = () => {\\\\n    const defaultValue = \'male\';\\\\n    const [, setValue] = useState(defaultValue);\\\\n\\\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\\\\n        setValue((event.target as HTMLInputElement).value);\\\\n    };\\\\n\\\\n    return (\\\\n        <PageWrapper>\\\\n            <RadioGroup\\\\n                name=\\\\\\"disabled-state\\\\\\"\\\\n                onChange={onChange}\\\\n                label=\\\\\\"Disabled State\\\\\\"\\\\n                defaultValue={defaultValue}\\\\n                disabled\\\\n            >\\\\n                <Radio value=\\\\\\"female\\\\\\" label=\\\\\\"Female\\\\\\" disabled />\\\\n                <Radio value=\\\\\\"male\\\\\\" label=\\\\\\"Male\\\\\\" disabled />\\\\n                <Radio value=\\\\\\"other\\\\\\" label=\\\\\\"Other\\\\\\" disabled />\\\\n            </RadioGroup>\\\\n        </PageWrapper>\\\\n    );\\\\n};\\\\n\\\\nexport const HorizontalLayout = () => {\\\\n    const defaultValue = \'female\';\\\\n    const [, setValue] = useState(defaultValue);\\\\n\\\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\\\\n        setValue((event.target as HTMLInputElement).value);\\\\n    };\\\\n    return (\\\\n        <PageWrapper>\\\\n            <RadioGroup\\\\n                name=\\\\\\"horizontal-layout\\\\\\"\\\\n                onChange={onChange}\\\\n                label=\\\\\\"Horizontal layout\\\\\\"\\\\n                defaultValue={defaultValue}\\\\n                row\\\\n            >\\\\n                <Radio value=\\\\\\"female\\\\\\" label=\\\\\\"Female\\\\\\" />\\\\n                <Radio value=\\\\\\"male\\\\\\" label=\\\\\\"Male\\\\\\" />\\\\n                <Radio value=\\\\\\"other\\\\\\" label=\\\\\\"Other\\\\\\" />\\\\n            </RadioGroup>\\\\n        </PageWrapper>\\\\n    );\\\\n};\\\\n\\\\nexport const LabelPlacement = () => {\\\\n    const defaultValue = \'start\';\\\\n    const [, setValue] = useState(defaultValue);\\\\n\\\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\\\\n        setValue((event.target as HTMLInputElement).value);\\\\n    };\\\\n    return (\\\\n        <PageWrapper>\\\\n            <RadioGroup\\\\n                name=\\\\\\"label-placement\\\\\\"\\\\n                onChange={onChange}\\\\n                label=\\\\\\"Label placement\\\\\\"\\\\n                defaultValue={defaultValue}\\\\n                row\\\\n            >\\\\n                <Radio value=\\\\\\"top\\\\\\" label=\\\\\\"Top\\\\\\" labelPlacement=\\\\\\"top\\\\\\" />\\\\n                <Radio value=\\\\\\"start\\\\\\" label=\\\\\\"Start\\\\\\" labelPlacement=\\\\\\"start\\\\\\" />\\\\n                <Radio value=\\\\\\"bottom\\\\\\" label=\\\\\\"Bottom\\\\\\" labelPlacement=\\\\\\"bottom\\\\\\" />\\\\n                <Radio value=\\\\\\"end\\\\\\" label=\\\\\\"End\\\\\\" labelPlacement=\\\\\\"end\\\\\\" />\\\\n            </RadioGroup>\\\\n        </PageWrapper>\\\\n    );\\\\n};\\\\n\\\\nexport const PassingRadioProps = () => {\\\\n    const defaultValue = \'top\';\\\\n    const [, setValue] = useState(defaultValue);\\\\n\\\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\\\\n        setValue((event.target as HTMLInputElement).value);\\\\n    };\\\\n    return (\\\\n        <PageWrapper>\\\\n            <RadioGroup\\\\n                name=\\\\\\"label-placement\\\\\\"\\\\n                onChange={onChange}\\\\n                label=\\\\\\"Use of Radio props\\\\\\"\\\\n                defaultValue={defaultValue}\\\\n            >\\\\n                <Radio\\\\n                    value=\\\\\\"top\\\\\\"\\\\n                    label=\\\\\\"Disabled ripple, small size radio button\\\\\\"\\\\n                    muiRadioProps={{ disableRipple: true, size: \'small\' }}\\\\n                />\\\\n                <Radio value=\\\\\\"start\\\\\\" label=\\\\\\"Disabled\\\\\\" muiRadioProps={{ disabled: true }} />\\\\n                <Radio value=\\\\\\"bottom\\\\\\" label=\\\\\\"Default Mui color\\\\\\" muiRadioProps={{ color: \'default\' }} />\\\\n                <Radio value=\\\\\\"end\\\\\\" label=\\\\\\"Without Radio props\\\\\\" />\\\\n            </RadioGroup>\\\\n        </PageWrapper>\\\\n    );\\\\n};\\\\n\\\\nexport const ErrorState = () => {\\\\n    const [value, setValue] = useState(\'\');\\\\n    const [error, setError] = useState(true);\\\\n    const [helperText, setHelperText] = useState(\'Choose wisely\');\\\\n\\\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\\\\n        setValue((event.target as HTMLInputElement).value);\\\\n        setError(false);\\\\n    };\\\\n\\\\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\\\\n        event.preventDefault();\\\\n        if (value === \'best\') {\\\\n            setHelperText(\'You got it!\');\\\\n            setError(false);\\\\n        } else if (value === \'worst\') {\\\\n            setHelperText(\'Sorry, wrong answer!\');\\\\n            setError(true);\\\\n        } else {\\\\n            setHelperText(\'Please select an option.\');\\\\n            setError(true);\\\\n        }\\\\n    };\\\\n\\\\n    return (\\\\n        <PageWrapper>\\\\n            <form onSubmit={handleSubmit} name=\\\\\\"simple-form\\\\\\">\\\\n                <RadioGroup\\\\n                    name=\\\\\\"error-state\\\\\\"\\\\n                    label=\\\\\\"Select Black\\\\\\"\\\\n                    value={value}\\\\n                    onChange={onChange}\\\\n                    hasError={error}\\\\n                    message={helperText}\\\\n                >\\\\n                    <FormControlLabel value=\\\\\\"best\\\\\\" control={<Radio />} label=\\\\\\"The best!\\\\\\" />\\\\n                    <FormControlLabel value=\\\\\\"worst\\\\\\" control={<Radio />} label=\\\\\\"The worst.\\\\\\" />\\\\n                </RadioGroup>\\\\n                <FormHelperText>{helperText}</FormHelperText>\\\\n                <Button type=\\\\\\"submit\\\\\\" variant=\\\\\\"outlined\\\\\\" size=\\\\\\"small\\\\\\">\\\\n                    Check Answer\\\\n                </Button>\\\\n            </form>\\\\n        </PageWrapper>\\\\n    );\\\\n};\\\\n\\";\\n    // @ts-ignore\\n    var __LOCATIONS_MAP__ = {\\"Standard\\":{\\"startLoc\\":{\\"col\\":24,\\"line\\":13},\\"endLoc\\":{\\"col\\":1,\\"line\\":30},\\"startBody\\":{\\"col\\":24,\\"line\\":13},\\"endBody\\":{\\"col\\":1,\\"line\\":30}},\\"DisabledState\\":{\\"startLoc\\":{\\"col\\":29,\\"line\\":32},\\"endLoc\\":{\\"col\\":1,\\"line\\":55},\\"startBody\\":{\\"col\\":29,\\"line\\":32},\\"endBody\\":{\\"col\\":1,\\"line\\":55}},\\"HorizontalLayout\\":{\\"startLoc\\":{\\"col\\":32,\\"line\\":57},\\"endLoc\\":{\\"col\\":1,\\"line\\":79},\\"startBody\\":{\\"col\\":32,\\"line\\":57},\\"endBody\\":{\\"col\\":1,\\"line\\":79}},\\"LabelPlacement\\":{\\"startLoc\\":{\\"col\\":30,\\"line\\":81},\\"endLoc\\":{\\"col\\":1,\\"line\\":104},\\"startBody\\":{\\"col\\":30,\\"line\\":81},\\"endBody\\":{\\"col\\":1,\\"line\\":104}},\\"PassingRadioProps\\":{\\"startLoc\\":{\\"col\\":33,\\"line\\":106},\\"endLoc\\":{\\"col\\":1,\\"line\\":132},\\"startBody\\":{\\"col\\":33,\\"line\\":106},\\"endBody\\":{\\"col\\":1,\\"line\\":132}},\\"ErrorState\\":{\\"startLoc\\":{\\"col\\":26,\\"line\\":134},\\"endLoc\\":{\\"col\\":1,\\"line\\":179},\\"startBody\\":{\\"col\\":26,\\"line\\":134},\\"endBody\\":{\\"col\\":1,\\"line\\":179}}};\\n    \\nimport React, { useState } from \'react\';\\nimport Button from \'@material-ui/core/Button\';\\nimport RadioGroup, { Radio } from \'../Radio\';\\n\\nimport { PageWrapper } from \'../storybook\';\\nimport { FormControlLabel, FormHelperText } from \'@material-ui/core\';\\n\\nexport default {parameters: {\\"storySource\\":{\\"source\\":\\"import React, { useState } from \'react\';\\\\nimport Button from \'@material-ui/core/Button\';\\\\nimport RadioGroup, { Radio } from \'../Radio\';\\\\n\\\\nimport { PageWrapper } from \'../storybook\';\\\\nimport { FormControlLabel, FormHelperText } from \'@material-ui/core\';\\\\n\\\\nexport default {\\\\n    title: \'Components/Radio\',\\\\n    component: RadioGroup,\\\\n};\\\\n\\\\nexport const Standard = () => {\\\\n    const defaultValue = \'female\';\\\\n    const [, setValue] = useState(defaultValue);\\\\n\\\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\\\\n        setValue((event.target as HTMLInputElement).value);\\\\n    };\\\\n\\\\n    return (\\\\n        <PageWrapper>\\\\n            <RadioGroup name=\\\\\\"standard-usage\\\\\\" onChange={onChange} label=\\\\\\"Standard Usage\\\\\\" defaultValue={defaultValue}>\\\\n                <Radio value=\\\\\\"female\\\\\\" label=\\\\\\"Female\\\\\\" />\\\\n                <Radio value=\\\\\\"male\\\\\\" label=\\\\\\"Male\\\\\\" />\\\\n                <Radio value=\\\\\\"other\\\\\\" label=\\\\\\"Other\\\\\\" />\\\\n            </RadioGroup>\\\\n        </PageWrapper>\\\\n    );\\\\n};\\\\n\\\\nexport const DisabledState = () => {\\\\n    const defaultValue = \'male\';\\\\n    const [, setValue] = useState(defaultValue);\\\\n\\\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\\\\n        setValue((event.target as HTMLInputElement).value);\\\\n    };\\\\n\\\\n    return (\\\\n        <PageWrapper>\\\\n            <RadioGroup\\\\n                name=\\\\\\"disabled-state\\\\\\"\\\\n                onChange={onChange}\\\\n                label=\\\\\\"Disabled State\\\\\\"\\\\n                defaultValue={defaultValue}\\\\n                disabled\\\\n            >\\\\n                <Radio value=\\\\\\"female\\\\\\" label=\\\\\\"Female\\\\\\" disabled />\\\\n                <Radio value=\\\\\\"male\\\\\\" label=\\\\\\"Male\\\\\\" disabled />\\\\n                <Radio value=\\\\\\"other\\\\\\" label=\\\\\\"Other\\\\\\" disabled />\\\\n            </RadioGroup>\\\\n        </PageWrapper>\\\\n    );\\\\n};\\\\n\\\\nexport const HorizontalLayout = () => {\\\\n    const defaultValue = \'female\';\\\\n    const [, setValue] = useState(defaultValue);\\\\n\\\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\\\\n        setValue((event.target as HTMLInputElement).value);\\\\n    };\\\\n    return (\\\\n        <PageWrapper>\\\\n            <RadioGroup\\\\n                name=\\\\\\"horizontal-layout\\\\\\"\\\\n                onChange={onChange}\\\\n                label=\\\\\\"Horizontal layout\\\\\\"\\\\n                defaultValue={defaultValue}\\\\n                row\\\\n            >\\\\n                <Radio value=\\\\\\"female\\\\\\" label=\\\\\\"Female\\\\\\" />\\\\n                <Radio value=\\\\\\"male\\\\\\" label=\\\\\\"Male\\\\\\" />\\\\n                <Radio value=\\\\\\"other\\\\\\" label=\\\\\\"Other\\\\\\" />\\\\n            </RadioGroup>\\\\n        </PageWrapper>\\\\n    );\\\\n};\\\\n\\\\nexport const LabelPlacement = () => {\\\\n    const defaultValue = \'start\';\\\\n    const [, setValue] = useState(defaultValue);\\\\n\\\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\\\\n        setValue((event.target as HTMLInputElement).value);\\\\n    };\\\\n    return (\\\\n        <PageWrapper>\\\\n            <RadioGroup\\\\n                name=\\\\\\"label-placement\\\\\\"\\\\n                onChange={onChange}\\\\n                label=\\\\\\"Label placement\\\\\\"\\\\n                defaultValue={defaultValue}\\\\n                row\\\\n            >\\\\n                <Radio value=\\\\\\"top\\\\\\" label=\\\\\\"Top\\\\\\" labelPlacement=\\\\\\"top\\\\\\" />\\\\n                <Radio value=\\\\\\"start\\\\\\" label=\\\\\\"Start\\\\\\" labelPlacement=\\\\\\"start\\\\\\" />\\\\n                <Radio value=\\\\\\"bottom\\\\\\" label=\\\\\\"Bottom\\\\\\" labelPlacement=\\\\\\"bottom\\\\\\" />\\\\n                <Radio value=\\\\\\"end\\\\\\" label=\\\\\\"End\\\\\\" labelPlacement=\\\\\\"end\\\\\\" />\\\\n            </RadioGroup>\\\\n        </PageWrapper>\\\\n    );\\\\n};\\\\n\\\\nexport const PassingRadioProps = () => {\\\\n    const defaultValue = \'top\';\\\\n    const [, setValue] = useState(defaultValue);\\\\n\\\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\\\\n        setValue((event.target as HTMLInputElement).value);\\\\n    };\\\\n    return (\\\\n        <PageWrapper>\\\\n            <RadioGroup\\\\n                name=\\\\\\"label-placement\\\\\\"\\\\n                onChange={onChange}\\\\n                label=\\\\\\"Use of Radio props\\\\\\"\\\\n                defaultValue={defaultValue}\\\\n            >\\\\n                <Radio\\\\n                    value=\\\\\\"top\\\\\\"\\\\n                    label=\\\\\\"Disabled ripple, small size radio button\\\\\\"\\\\n                    muiRadioProps={{ disableRipple: true, size: \'small\' }}\\\\n                />\\\\n                <Radio value=\\\\\\"start\\\\\\" label=\\\\\\"Disabled\\\\\\" muiRadioProps={{ disabled: true }} />\\\\n                <Radio value=\\\\\\"bottom\\\\\\" label=\\\\\\"Default Mui color\\\\\\" muiRadioProps={{ color: \'default\' }} />\\\\n                <Radio value=\\\\\\"end\\\\\\" label=\\\\\\"Without Radio props\\\\\\" />\\\\n            </RadioGroup>\\\\n        </PageWrapper>\\\\n    );\\\\n};\\\\n\\\\nexport const ErrorState = () => {\\\\n    const [value, setValue] = useState(\'\');\\\\n    const [error, setError] = useState(true);\\\\n    const [helperText, setHelperText] = useState(\'Choose wisely\');\\\\n\\\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\\\\n        setValue((event.target as HTMLInputElement).value);\\\\n        setError(false);\\\\n    };\\\\n\\\\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\\\\n        event.preventDefault();\\\\n        if (value === \'best\') {\\\\n            setHelperText(\'You got it!\');\\\\n            setError(false);\\\\n        } else if (value === \'worst\') {\\\\n            setHelperText(\'Sorry, wrong answer!\');\\\\n            setError(true);\\\\n        } else {\\\\n            setHelperText(\'Please select an option.\');\\\\n            setError(true);\\\\n        }\\\\n    };\\\\n\\\\n    return (\\\\n        <PageWrapper>\\\\n            <form onSubmit={handleSubmit} name=\\\\\\"simple-form\\\\\\">\\\\n                <RadioGroup\\\\n                    name=\\\\\\"error-state\\\\\\"\\\\n                    label=\\\\\\"Select Black\\\\\\"\\\\n                    value={value}\\\\n                    onChange={onChange}\\\\n                    hasError={error}\\\\n                    message={helperText}\\\\n                >\\\\n                    <FormControlLabel value=\\\\\\"best\\\\\\" control={<Radio />} label=\\\\\\"The best!\\\\\\" />\\\\n                    <FormControlLabel value=\\\\\\"worst\\\\\\" control={<Radio />} label=\\\\\\"The worst.\\\\\\" />\\\\n                </RadioGroup>\\\\n                <FormHelperText>{helperText}</FormHelperText>\\\\n                <Button type=\\\\\\"submit\\\\\\" variant=\\\\\\"outlined\\\\\\" size=\\\\\\"small\\\\\\">\\\\n                    Check Answer\\\\n                </Button>\\\\n            </form>\\\\n        </PageWrapper>\\\\n    );\\\\n};\\\\n\\",\\"locationsMap\\":{\\"standard\\":{\\"startLoc\\":{\\"col\\":24,\\"line\\":13},\\"endLoc\\":{\\"col\\":1,\\"line\\":30},\\"startBody\\":{\\"col\\":24,\\"line\\":13},\\"endBody\\":{\\"col\\":1,\\"line\\":30}},\\"disabled-state\\":{\\"startLoc\\":{\\"col\\":29,\\"line\\":32},\\"endLoc\\":{\\"col\\":1,\\"line\\":55},\\"startBody\\":{\\"col\\":29,\\"line\\":32},\\"endBody\\":{\\"col\\":1,\\"line\\":55}},\\"horizontal-layout\\":{\\"startLoc\\":{\\"col\\":32,\\"line\\":57},\\"endLoc\\":{\\"col\\":1,\\"line\\":79},\\"startBody\\":{\\"col\\":32,\\"line\\":57},\\"endBody\\":{\\"col\\":1,\\"line\\":79}},\\"label-placement\\":{\\"startLoc\\":{\\"col\\":30,\\"line\\":81},\\"endLoc\\":{\\"col\\":1,\\"line\\":104},\\"startBody\\":{\\"col\\":30,\\"line\\":81},\\"endBody\\":{\\"col\\":1,\\"line\\":104}},\\"passing-radio-props\\":{\\"startLoc\\":{\\"col\\":33,\\"line\\":106},\\"endLoc\\":{\\"col\\":1,\\"line\\":132},\\"startBody\\":{\\"col\\":33,\\"line\\":106},\\"endBody\\":{\\"col\\":1,\\"line\\":132}},\\"error-state\\":{\\"startLoc\\":{\\"col\\":26,\\"line\\":134},\\"endLoc\\":{\\"col\\":1,\\"line\\":179},\\"startBody\\":{\\"col\\":26,\\"line\\":134},\\"endBody\\":{\\"col\\":1,\\"line\\":179}}}},},\\n    title: \'Components/Radio\',\\n    component: RadioGroup,\\n};\\n\\nexport const Standard = () => {\\n    const defaultValue = \'female\';\\n    const [, setValue] = useState(defaultValue);\\n\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\\n        setValue((event.target as HTMLInputElement).value);\\n    };\\n\\n    return (\\n        <PageWrapper>\\n            <RadioGroup name=\\"standard-usage\\" onChange={onChange} label=\\"Standard Usage\\" defaultValue={defaultValue}>\\n                <Radio value=\\"female\\" label=\\"Female\\" />\\n                <Radio value=\\"male\\" label=\\"Male\\" />\\n                <Radio value=\\"other\\" label=\\"Other\\" />\\n            </RadioGroup>\\n        </PageWrapper>\\n    );\\n};;\\n\\nexport const DisabledState = () => {\\n    const defaultValue = \'male\';\\n    const [, setValue] = useState(defaultValue);\\n\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\\n        setValue((event.target as HTMLInputElement).value);\\n    };\\n\\n    return (\\n        <PageWrapper>\\n            <RadioGroup\\n                name=\\"disabled-state\\"\\n                onChange={onChange}\\n                label=\\"Disabled State\\"\\n                defaultValue={defaultValue}\\n                disabled\\n            >\\n                <Radio value=\\"female\\" label=\\"Female\\" disabled />\\n                <Radio value=\\"male\\" label=\\"Male\\" disabled />\\n                <Radio value=\\"other\\" label=\\"Other\\" disabled />\\n            </RadioGroup>\\n        </PageWrapper>\\n    );\\n};;\\n\\nexport const HorizontalLayout = () => {\\n    const defaultValue = \'female\';\\n    const [, setValue] = useState(defaultValue);\\n\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\\n        setValue((event.target as HTMLInputElement).value);\\n    };\\n    return (\\n        <PageWrapper>\\n            <RadioGroup\\n                name=\\"horizontal-layout\\"\\n                onChange={onChange}\\n                label=\\"Horizontal layout\\"\\n                defaultValue={defaultValue}\\n                row\\n            >\\n                <Radio value=\\"female\\" label=\\"Female\\" />\\n                <Radio value=\\"male\\" label=\\"Male\\" />\\n                <Radio value=\\"other\\" label=\\"Other\\" />\\n            </RadioGroup>\\n        </PageWrapper>\\n    );\\n};;\\n\\nexport const LabelPlacement = () => {\\n    const defaultValue = \'start\';\\n    const [, setValue] = useState(defaultValue);\\n\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\\n        setValue((event.target as HTMLInputElement).value);\\n    };\\n    return (\\n        <PageWrapper>\\n            <RadioGroup\\n                name=\\"label-placement\\"\\n                onChange={onChange}\\n                label=\\"Label placement\\"\\n                defaultValue={defaultValue}\\n                row\\n            >\\n                <Radio value=\\"top\\" label=\\"Top\\" labelPlacement=\\"top\\" />\\n                <Radio value=\\"start\\" label=\\"Start\\" labelPlacement=\\"start\\" />\\n                <Radio value=\\"bottom\\" label=\\"Bottom\\" labelPlacement=\\"bottom\\" />\\n                <Radio value=\\"end\\" label=\\"End\\" labelPlacement=\\"end\\" />\\n            </RadioGroup>\\n        </PageWrapper>\\n    );\\n};;\\n\\nexport const PassingRadioProps = () => {\\n    const defaultValue = \'top\';\\n    const [, setValue] = useState(defaultValue);\\n\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\\n        setValue((event.target as HTMLInputElement).value);\\n    };\\n    return (\\n        <PageWrapper>\\n            <RadioGroup\\n                name=\\"label-placement\\"\\n                onChange={onChange}\\n                label=\\"Use of Radio props\\"\\n                defaultValue={defaultValue}\\n            >\\n                <Radio\\n                    value=\\"top\\"\\n                    label=\\"Disabled ripple, small size radio button\\"\\n                    muiRadioProps={{ disableRipple: true, size: \'small\' }}\\n                />\\n                <Radio value=\\"start\\" label=\\"Disabled\\" muiRadioProps={{ disabled: true }} />\\n                <Radio value=\\"bottom\\" label=\\"Default Mui color\\" muiRadioProps={{ color: \'default\' }} />\\n                <Radio value=\\"end\\" label=\\"Without Radio props\\" />\\n            </RadioGroup>\\n        </PageWrapper>\\n    );\\n};;\\n\\nexport const ErrorState = () => {\\n    const [value, setValue] = useState(\'\');\\n    const [error, setError] = useState(true);\\n    const [helperText, setHelperText] = useState(\'Choose wisely\');\\n\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\\n        setValue((event.target as HTMLInputElement).value);\\n        setError(false);\\n    };\\n\\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\\n        event.preventDefault();\\n        if (value === \'best\') {\\n            setHelperText(\'You got it!\');\\n            setError(false);\\n        } else if (value === \'worst\') {\\n            setHelperText(\'Sorry, wrong answer!\');\\n            setError(true);\\n        } else {\\n            setHelperText(\'Please select an option.\');\\n            setError(true);\\n        }\\n    };\\n\\n    return (\\n        <PageWrapper>\\n            <form onSubmit={handleSubmit} name=\\"simple-form\\">\\n                <RadioGroup\\n                    name=\\"error-state\\"\\n                    label=\\"Select Black\\"\\n                    value={value}\\n                    onChange={onChange}\\n                    hasError={error}\\n                    message={helperText}\\n                >\\n                    <FormControlLabel value=\\"best\\" control={<Radio />} label=\\"The best!\\" />\\n                    <FormControlLabel value=\\"worst\\" control={<Radio />} label=\\"The worst.\\" />\\n                </RadioGroup>\\n                <FormHelperText>{helperText}</FormHelperText>\\n                <Button type=\\"submit\\" variant=\\"outlined\\" size=\\"small\\">\\n                    Check Answer\\n                </Button>\\n            </form>\\n        </PageWrapper>\\n    );\\n};\\n";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {"Standard":{"startLoc":{"col":24,"line":21},"endLoc":{"col":1,"line":38},"startBody":{"col":24,"line":21},"endBody":{"col":1,"line":38}},"DisabledState":{"startLoc":{"col":29,"line":40},"endLoc":{"col":1,"line":63},"startBody":{"col":29,"line":40},"endBody":{"col":1,"line":63}},"HorizontalLayout":{"startLoc":{"col":32,"line":65},"endLoc":{"col":1,"line":87},"startBody":{"col":32,"line":65},"endBody":{"col":1,"line":87}},"LabelPlacement":{"startLoc":{"col":30,"line":89},"endLoc":{"col":1,"line":112},"startBody":{"col":30,"line":89},"endBody":{"col":1,"line":112}},"PassingRadioProps":{"startLoc":{"col":33,"line":114},"endLoc":{"col":1,"line":140},"startBody":{"col":33,"line":114},"endBody":{"col":1,"line":140}},"ErrorState":{"startLoc":{"col":26,"line":142},"endLoc":{"col":1,"line":187},"startBody":{"col":26,"line":142},"endBody":{"col":1,"line":187}}};\n    \n\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = "import React, { useState } from \'react\';\\nimport Button from \'@material-ui/core/Button\';\\nimport RadioGroup, { Radio } from \'../Radio\';\\n\\nimport { PageWrapper } from \'../storybook\';\\nimport { FormControlLabel, FormHelperText } from \'@material-ui/core\';\\n\\nexport default {\\n    title: \'Components/Radio\',\\n    component: RadioGroup,\\n};\\n\\nexport const Standard = () => {\\n    const defaultValue = \'female\';\\n    const [, setValue] = useState(defaultValue);\\n\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\\n        setValue((event.target as HTMLInputElement).value);\\n    };\\n\\n    return (\\n        <PageWrapper>\\n            <RadioGroup name=\\"standard-usage\\" onChange={onChange} label=\\"Standard Usage\\" defaultValue={defaultValue}>\\n                <Radio value=\\"female\\" label=\\"Female\\" />\\n                <Radio value=\\"male\\" label=\\"Male\\" />\\n                <Radio value=\\"other\\" label=\\"Other\\" />\\n            </RadioGroup>\\n        </PageWrapper>\\n    );\\n};\\n\\nexport const DisabledState = () => {\\n    const defaultValue = \'male\';\\n    const [, setValue] = useState(defaultValue);\\n\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\\n        setValue((event.target as HTMLInputElement).value);\\n    };\\n\\n    return (\\n        <PageWrapper>\\n            <RadioGroup\\n                name=\\"disabled-state\\"\\n                onChange={onChange}\\n                label=\\"Disabled State\\"\\n                defaultValue={defaultValue}\\n                disabled\\n            >\\n                <Radio value=\\"female\\" label=\\"Female\\" disabled />\\n                <Radio value=\\"male\\" label=\\"Male\\" disabled />\\n                <Radio value=\\"other\\" label=\\"Other\\" disabled />\\n            </RadioGroup>\\n        </PageWrapper>\\n    );\\n};\\n\\nexport const HorizontalLayout = () => {\\n    const defaultValue = \'female\';\\n    const [, setValue] = useState(defaultValue);\\n\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\\n        setValue((event.target as HTMLInputElement).value);\\n    };\\n    return (\\n        <PageWrapper>\\n            <RadioGroup\\n                name=\\"horizontal-layout\\"\\n                onChange={onChange}\\n                label=\\"Horizontal layout\\"\\n                defaultValue={defaultValue}\\n                row\\n            >\\n                <Radio value=\\"female\\" label=\\"Female\\" />\\n                <Radio value=\\"male\\" label=\\"Male\\" />\\n                <Radio value=\\"other\\" label=\\"Other\\" />\\n            </RadioGroup>\\n        </PageWrapper>\\n    );\\n};\\n\\nexport const LabelPlacement = () => {\\n    const defaultValue = \'start\';\\n    const [, setValue] = useState(defaultValue);\\n\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\\n        setValue((event.target as HTMLInputElement).value);\\n    };\\n    return (\\n        <PageWrapper>\\n            <RadioGroup\\n                name=\\"label-placement\\"\\n                onChange={onChange}\\n                label=\\"Label placement\\"\\n                defaultValue={defaultValue}\\n                row\\n            >\\n                <Radio value=\\"top\\" label=\\"Top\\" labelPlacement=\\"top\\" />\\n                <Radio value=\\"start\\" label=\\"Start\\" labelPlacement=\\"start\\" />\\n                <Radio value=\\"bottom\\" label=\\"Bottom\\" labelPlacement=\\"bottom\\" />\\n                <Radio value=\\"end\\" label=\\"End\\" labelPlacement=\\"end\\" />\\n            </RadioGroup>\\n        </PageWrapper>\\n    );\\n};\\n\\nexport const PassingRadioProps = () => {\\n    const defaultValue = \'top\';\\n    const [, setValue] = useState(defaultValue);\\n\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\\n        setValue((event.target as HTMLInputElement).value);\\n    };\\n    return (\\n        <PageWrapper>\\n            <RadioGroup\\n                name=\\"label-placement\\"\\n                onChange={onChange}\\n                label=\\"Use of Radio props\\"\\n                defaultValue={defaultValue}\\n            >\\n                <Radio\\n                    value=\\"top\\"\\n                    label=\\"Disabled ripple, small size radio button\\"\\n                    muiRadioProps={{ disableRipple: true, size: \'small\' }}\\n                />\\n                <Radio value=\\"start\\" label=\\"Disabled\\" muiRadioProps={{ disabled: true }} />\\n                <Radio value=\\"bottom\\" label=\\"Default Mui color\\" muiRadioProps={{ color: \'default\' }} />\\n                <Radio value=\\"end\\" label=\\"Without Radio props\\" />\\n            </RadioGroup>\\n        </PageWrapper>\\n    );\\n};\\n\\nexport const ErrorState = () => {\\n    const [value, setValue] = useState(\'\');\\n    const [error, setError] = useState(true);\\n    const [helperText, setHelperText] = useState(\'Choose wisely\');\\n\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\\n        setValue((event.target as HTMLInputElement).value);\\n        setError(false);\\n    };\\n\\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\\n        event.preventDefault();\\n        if (value === \'best\') {\\n            setHelperText(\'You got it!\');\\n            setError(false);\\n        } else if (value === \'worst\') {\\n            setHelperText(\'Sorry, wrong answer!\');\\n            setError(true);\\n        } else {\\n            setHelperText(\'Please select an option.\');\\n            setError(true);\\n        }\\n    };\\n\\n    return (\\n        <PageWrapper>\\n            <form onSubmit={handleSubmit} name=\\"simple-form\\">\\n                <RadioGroup\\n                    name=\\"error-state\\"\\n                    label=\\"Select Black\\"\\n                    value={value}\\n                    onChange={onChange}\\n                    hasError={error}\\n                    message={helperText}\\n                >\\n                    <FormControlLabel value=\\"best\\" control={<Radio />} label=\\"The best!\\" />\\n                    <FormControlLabel value=\\"worst\\" control={<Radio />} label=\\"The worst.\\" />\\n                </RadioGroup>\\n                <FormHelperText>{helperText}</FormHelperText>\\n                <Button type=\\"submit\\" variant=\\"outlined\\" size=\\"small\\">\\n                    Check Answer\\n                </Button>\\n            </form>\\n        </PageWrapper>\\n    );\\n};\\n";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {"Standard":{"startLoc":{"col":24,"line":13},"endLoc":{"col":1,"line":30},"startBody":{"col":24,"line":13},"endBody":{"col":1,"line":30}},"DisabledState":{"startLoc":{"col":29,"line":32},"endLoc":{"col":1,"line":55},"startBody":{"col":29,"line":32},"endBody":{"col":1,"line":55}},"HorizontalLayout":{"startLoc":{"col":32,"line":57},"endLoc":{"col":1,"line":79},"startBody":{"col":32,"line":57},"endBody":{"col":1,"line":79}},"LabelPlacement":{"startLoc":{"col":30,"line":81},"endLoc":{"col":1,"line":104},"startBody":{"col":30,"line":81},"endBody":{"col":1,"line":104}},"PassingRadioProps":{"startLoc":{"col":33,"line":106},"endLoc":{"col":1,"line":132},"startBody":{"col":33,"line":106},"endBody":{"col":1,"line":132}},"ErrorState":{"startLoc":{"col":26,"line":134},"endLoc":{"col":1,"line":179},"startBody":{"col":26,"line":134},"endBody":{"col":1,"line":179}}};\n    \nimport React, { useState } from \'react\';\nimport Button from \'@material-ui/core/Button\';\nimport RadioGroup, { Radio } from \'../Radio\';\n\nimport { PageWrapper } from \'../storybook\';\nimport { FormControlLabel, FormHelperText } from \'@material-ui/core\';\n\nexport default {parameters: {"storySource":{"source":"import React, { useState } from \'react\';\\nimport Button from \'@material-ui/core/Button\';\\nimport RadioGroup, { Radio } from \'../Radio\';\\n\\nimport { PageWrapper } from \'../storybook\';\\nimport { FormControlLabel, FormHelperText } from \'@material-ui/core\';\\n\\nexport default {\\n    title: \'Components/Radio\',\\n    component: RadioGroup,\\n};\\n\\nexport const Standard = () => {\\n    const defaultValue = \'female\';\\n    const [, setValue] = useState(defaultValue);\\n\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\\n        setValue((event.target as HTMLInputElement).value);\\n    };\\n\\n    return (\\n        <PageWrapper>\\n            <RadioGroup name=\\"standard-usage\\" onChange={onChange} label=\\"Standard Usage\\" defaultValue={defaultValue}>\\n                <Radio value=\\"female\\" label=\\"Female\\" />\\n                <Radio value=\\"male\\" label=\\"Male\\" />\\n                <Radio value=\\"other\\" label=\\"Other\\" />\\n            </RadioGroup>\\n        </PageWrapper>\\n    );\\n};\\n\\nexport const DisabledState = () => {\\n    const defaultValue = \'male\';\\n    const [, setValue] = useState(defaultValue);\\n\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\\n        setValue((event.target as HTMLInputElement).value);\\n    };\\n\\n    return (\\n        <PageWrapper>\\n            <RadioGroup\\n                name=\\"disabled-state\\"\\n                onChange={onChange}\\n                label=\\"Disabled State\\"\\n                defaultValue={defaultValue}\\n                disabled\\n            >\\n                <Radio value=\\"female\\" label=\\"Female\\" disabled />\\n                <Radio value=\\"male\\" label=\\"Male\\" disabled />\\n                <Radio value=\\"other\\" label=\\"Other\\" disabled />\\n            </RadioGroup>\\n        </PageWrapper>\\n    );\\n};\\n\\nexport const HorizontalLayout = () => {\\n    const defaultValue = \'female\';\\n    const [, setValue] = useState(defaultValue);\\n\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\\n        setValue((event.target as HTMLInputElement).value);\\n    };\\n    return (\\n        <PageWrapper>\\n            <RadioGroup\\n                name=\\"horizontal-layout\\"\\n                onChange={onChange}\\n                label=\\"Horizontal layout\\"\\n                defaultValue={defaultValue}\\n                row\\n            >\\n                <Radio value=\\"female\\" label=\\"Female\\" />\\n                <Radio value=\\"male\\" label=\\"Male\\" />\\n                <Radio value=\\"other\\" label=\\"Other\\" />\\n            </RadioGroup>\\n        </PageWrapper>\\n    );\\n};\\n\\nexport const LabelPlacement = () => {\\n    const defaultValue = \'start\';\\n    const [, setValue] = useState(defaultValue);\\n\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\\n        setValue((event.target as HTMLInputElement).value);\\n    };\\n    return (\\n        <PageWrapper>\\n            <RadioGroup\\n                name=\\"label-placement\\"\\n                onChange={onChange}\\n                label=\\"Label placement\\"\\n                defaultValue={defaultValue}\\n                row\\n            >\\n                <Radio value=\\"top\\" label=\\"Top\\" labelPlacement=\\"top\\" />\\n                <Radio value=\\"start\\" label=\\"Start\\" labelPlacement=\\"start\\" />\\n                <Radio value=\\"bottom\\" label=\\"Bottom\\" labelPlacement=\\"bottom\\" />\\n                <Radio value=\\"end\\" label=\\"End\\" labelPlacement=\\"end\\" />\\n            </RadioGroup>\\n        </PageWrapper>\\n    );\\n};\\n\\nexport const PassingRadioProps = () => {\\n    const defaultValue = \'top\';\\n    const [, setValue] = useState(defaultValue);\\n\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\\n        setValue((event.target as HTMLInputElement).value);\\n    };\\n    return (\\n        <PageWrapper>\\n            <RadioGroup\\n                name=\\"label-placement\\"\\n                onChange={onChange}\\n                label=\\"Use of Radio props\\"\\n                defaultValue={defaultValue}\\n            >\\n                <Radio\\n                    value=\\"top\\"\\n                    label=\\"Disabled ripple, small size radio button\\"\\n                    muiRadioProps={{ disableRipple: true, size: \'small\' }}\\n                />\\n                <Radio value=\\"start\\" label=\\"Disabled\\" muiRadioProps={{ disabled: true }} />\\n                <Radio value=\\"bottom\\" label=\\"Default Mui color\\" muiRadioProps={{ color: \'default\' }} />\\n                <Radio value=\\"end\\" label=\\"Without Radio props\\" />\\n            </RadioGroup>\\n        </PageWrapper>\\n    );\\n};\\n\\nexport const ErrorState = () => {\\n    const [value, setValue] = useState(\'\');\\n    const [error, setError] = useState(true);\\n    const [helperText, setHelperText] = useState(\'Choose wisely\');\\n\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\\n        setValue((event.target as HTMLInputElement).value);\\n        setError(false);\\n    };\\n\\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\\n        event.preventDefault();\\n        if (value === \'best\') {\\n            setHelperText(\'You got it!\');\\n            setError(false);\\n        } else if (value === \'worst\') {\\n            setHelperText(\'Sorry, wrong answer!\');\\n            setError(true);\\n        } else {\\n            setHelperText(\'Please select an option.\');\\n            setError(true);\\n        }\\n    };\\n\\n    return (\\n        <PageWrapper>\\n            <form onSubmit={handleSubmit} name=\\"simple-form\\">\\n                <RadioGroup\\n                    name=\\"error-state\\"\\n                    label=\\"Select Black\\"\\n                    value={value}\\n                    onChange={onChange}\\n                    hasError={error}\\n                    message={helperText}\\n                >\\n                    <FormControlLabel value=\\"best\\" control={<Radio />} label=\\"The best!\\" />\\n                    <FormControlLabel value=\\"worst\\" control={<Radio />} label=\\"The worst.\\" />\\n                </RadioGroup>\\n                <FormHelperText>{helperText}</FormHelperText>\\n                <Button type=\\"submit\\" variant=\\"outlined\\" size=\\"small\\">\\n                    Check Answer\\n                </Button>\\n            </form>\\n        </PageWrapper>\\n    );\\n};\\n","locationsMap":{"standard":{"startLoc":{"col":24,"line":13},"endLoc":{"col":1,"line":30},"startBody":{"col":24,"line":13},"endBody":{"col":1,"line":30}},"disabled-state":{"startLoc":{"col":29,"line":32},"endLoc":{"col":1,"line":55},"startBody":{"col":29,"line":32},"endBody":{"col":1,"line":55}},"horizontal-layout":{"startLoc":{"col":32,"line":57},"endLoc":{"col":1,"line":79},"startBody":{"col":32,"line":57},"endBody":{"col":1,"line":79}},"label-placement":{"startLoc":{"col":30,"line":81},"endLoc":{"col":1,"line":104},"startBody":{"col":30,"line":81},"endBody":{"col":1,"line":104}},"passing-radio-props":{"startLoc":{"col":33,"line":106},"endLoc":{"col":1,"line":132},"startBody":{"col":33,"line":106},"endBody":{"col":1,"line":132}},"error-state":{"startLoc":{"col":26,"line":134},"endLoc":{"col":1,"line":179},"startBody":{"col":26,"line":134},"endBody":{"col":1,"line":179}}}},},\n    title: \'Components/Radio\',\n    component: RadioGroup,\n};\n\nexport const Standard = () => {\n    const defaultValue = \'female\';\n    const [, setValue] = useState(defaultValue);\n\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n        setValue((event.target as HTMLInputElement).value);\n    };\n\n    return (\n        <PageWrapper>\n            <RadioGroup name="standard-usage" onChange={onChange} label="Standard Usage" defaultValue={defaultValue}>\n                <Radio value="female" label="Female" />\n                <Radio value="male" label="Male" />\n                <Radio value="other" label="Other" />\n            </RadioGroup>\n        </PageWrapper>\n    );\n};;;\n\nexport const DisabledState = () => {\n    const defaultValue = \'male\';\n    const [, setValue] = useState(defaultValue);\n\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n        setValue((event.target as HTMLInputElement).value);\n    };\n\n    return (\n        <PageWrapper>\n            <RadioGroup\n                name="disabled-state"\n                onChange={onChange}\n                label="Disabled State"\n                defaultValue={defaultValue}\n                disabled\n            >\n                <Radio value="female" label="Female" disabled />\n                <Radio value="male" label="Male" disabled />\n                <Radio value="other" label="Other" disabled />\n            </RadioGroup>\n        </PageWrapper>\n    );\n};;;\n\nexport const HorizontalLayout = () => {\n    const defaultValue = \'female\';\n    const [, setValue] = useState(defaultValue);\n\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValue((event.target as HTMLInputElement).value);\n    };\n    return (\n        <PageWrapper>\n            <RadioGroup\n                name="horizontal-layout"\n                onChange={onChange}\n                label="Horizontal layout"\n                defaultValue={defaultValue}\n                row\n            >\n                <Radio value="female" label="Female" />\n                <Radio value="male" label="Male" />\n                <Radio value="other" label="Other" />\n            </RadioGroup>\n        </PageWrapper>\n    );\n};;;\n\nexport const LabelPlacement = () => {\n    const defaultValue = \'start\';\n    const [, setValue] = useState(defaultValue);\n\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValue((event.target as HTMLInputElement).value);\n    };\n    return (\n        <PageWrapper>\n            <RadioGroup\n                name="label-placement"\n                onChange={onChange}\n                label="Label placement"\n                defaultValue={defaultValue}\n                row\n            >\n                <Radio value="top" label="Top" labelPlacement="top" />\n                <Radio value="start" label="Start" labelPlacement="start" />\n                <Radio value="bottom" label="Bottom" labelPlacement="bottom" />\n                <Radio value="end" label="End" labelPlacement="end" />\n            </RadioGroup>\n        </PageWrapper>\n    );\n};;;\n\nexport const PassingRadioProps = () => {\n    const defaultValue = \'top\';\n    const [, setValue] = useState(defaultValue);\n\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValue((event.target as HTMLInputElement).value);\n    };\n    return (\n        <PageWrapper>\n            <RadioGroup\n                name="label-placement"\n                onChange={onChange}\n                label="Use of Radio props"\n                defaultValue={defaultValue}\n            >\n                <Radio\n                    value="top"\n                    label="Disabled ripple, small size radio button"\n                    muiRadioProps={{ disableRipple: true, size: \'small\' }}\n                />\n                <Radio value="start" label="Disabled" muiRadioProps={{ disabled: true }} />\n                <Radio value="bottom" label="Default Mui color" muiRadioProps={{ color: \'default\' }} />\n                <Radio value="end" label="Without Radio props" />\n            </RadioGroup>\n        </PageWrapper>\n    );\n};;;\n\nexport const ErrorState = () => {\n    const [value, setValue] = useState(\'\');\n    const [error, setError] = useState(true);\n    const [helperText, setHelperText] = useState(\'Choose wisely\');\n\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValue((event.target as HTMLInputElement).value);\n        setError(false);\n    };\n\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        if (value === \'best\') {\n            setHelperText(\'You got it!\');\n            setError(false);\n        } else if (value === \'worst\') {\n            setHelperText(\'Sorry, wrong answer!\');\n            setError(true);\n        } else {\n            setHelperText(\'Please select an option.\');\n            setError(true);\n        }\n    };\n\n    return (\n        <PageWrapper>\n            <form onSubmit={handleSubmit} name="simple-form">\n                <RadioGroup\n                    name="error-state"\n                    label="Select Black"\n                    value={value}\n                    onChange={onChange}\n                    hasError={error}\n                    message={helperText}\n                >\n                    <FormControlLabel value="best" control={<Radio />} label="The best!" />\n                    <FormControlLabel value="worst" control={<Radio />} label="The worst." />\n                </RadioGroup>\n                <FormHelperText>{helperText}</FormHelperText>\n                <Button type="submit" variant="outlined" size="small">\n                    Check Answer\n                </Button>\n            </form>\n        </PageWrapper>\n    );\n};\n\n\n\nStandard.parameters = { storySource: { source: "() => {\\n    const defaultValue = \'female\';\\n    const [, setValue] = useState(defaultValue);\\n\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\\n        setValue((event.target as HTMLInputElement).value);\\n    };\\n\\n    return (\\n        <PageWrapper>\\n            <RadioGroup name=\\"standard-usage\\" onChange={onChange} label=\\"Standard Usage\\" defaultValue={defaultValue}>\\n                <Radio value=\\"female\\" label=\\"Female\\" />\\n                <Radio value=\\"male\\" label=\\"Male\\" />\\n                <Radio value=\\"other\\" label=\\"Other\\" />\\n            </RadioGroup>\\n        </PageWrapper>\\n    );\\n}" }, ...Standard.parameters };\nDisabledState.parameters = { storySource: { source: "() => {\\n    const defaultValue = \'male\';\\n    const [, setValue] = useState(defaultValue);\\n\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\\n        setValue((event.target as HTMLInputElement).value);\\n    };\\n\\n    return (\\n        <PageWrapper>\\n            <RadioGroup\\n                name=\\"disabled-state\\"\\n                onChange={onChange}\\n                label=\\"Disabled State\\"\\n                defaultValue={defaultValue}\\n                disabled\\n            >\\n                <Radio value=\\"female\\" label=\\"Female\\" disabled />\\n                <Radio value=\\"male\\" label=\\"Male\\" disabled />\\n                <Radio value=\\"other\\" label=\\"Other\\" disabled />\\n            </RadioGroup>\\n        </PageWrapper>\\n    );\\n}" }, ...DisabledState.parameters };\nHorizontalLayout.parameters = { storySource: { source: "() => {\\n    const defaultValue = \'female\';\\n    const [, setValue] = useState(defaultValue);\\n\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\\n        setValue((event.target as HTMLInputElement).value);\\n    };\\n    return (\\n        <PageWrapper>\\n            <RadioGroup\\n                name=\\"horizontal-layout\\"\\n                onChange={onChange}\\n                label=\\"Horizontal layout\\"\\n                defaultValue={defaultValue}\\n                row\\n            >\\n                <Radio value=\\"female\\" label=\\"Female\\" />\\n                <Radio value=\\"male\\" label=\\"Male\\" />\\n                <Radio value=\\"other\\" label=\\"Other\\" />\\n            </RadioGroup>\\n        </PageWrapper>\\n    );\\n}" }, ...HorizontalLayout.parameters };\nLabelPlacement.parameters = { storySource: { source: "() => {\\n    const defaultValue = \'start\';\\n    const [, setValue] = useState(defaultValue);\\n\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\\n        setValue((event.target as HTMLInputElement).value);\\n    };\\n    return (\\n        <PageWrapper>\\n            <RadioGroup\\n                name=\\"label-placement\\"\\n                onChange={onChange}\\n                label=\\"Label placement\\"\\n                defaultValue={defaultValue}\\n                row\\n            >\\n                <Radio value=\\"top\\" label=\\"Top\\" labelPlacement=\\"top\\" />\\n                <Radio value=\\"start\\" label=\\"Start\\" labelPlacement=\\"start\\" />\\n                <Radio value=\\"bottom\\" label=\\"Bottom\\" labelPlacement=\\"bottom\\" />\\n                <Radio value=\\"end\\" label=\\"End\\" labelPlacement=\\"end\\" />\\n            </RadioGroup>\\n        </PageWrapper>\\n    );\\n}" }, ...LabelPlacement.parameters };\nPassingRadioProps.parameters = { storySource: { source: "() => {\\n    const defaultValue = \'top\';\\n    const [, setValue] = useState(defaultValue);\\n\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\\n        setValue((event.target as HTMLInputElement).value);\\n    };\\n    return (\\n        <PageWrapper>\\n            <RadioGroup\\n                name=\\"label-placement\\"\\n                onChange={onChange}\\n                label=\\"Use of Radio props\\"\\n                defaultValue={defaultValue}\\n            >\\n                <Radio\\n                    value=\\"top\\"\\n                    label=\\"Disabled ripple, small size radio button\\"\\n                    muiRadioProps={{ disableRipple: true, size: \'small\' }}\\n                />\\n                <Radio value=\\"start\\" label=\\"Disabled\\" muiRadioProps={{ disabled: true }} />\\n                <Radio value=\\"bottom\\" label=\\"Default Mui color\\" muiRadioProps={{ color: \'default\' }} />\\n                <Radio value=\\"end\\" label=\\"Without Radio props\\" />\\n            </RadioGroup>\\n        </PageWrapper>\\n    );\\n}" }, ...PassingRadioProps.parameters };\nErrorState.parameters = { storySource: { source: "() => {\\n    const [value, setValue] = useState(\'\');\\n    const [error, setError] = useState(true);\\n    const [helperText, setHelperText] = useState(\'Choose wisely\');\\n\\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\\n        setValue((event.target as HTMLInputElement).value);\\n        setError(false);\\n    };\\n\\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\\n        event.preventDefault();\\n        if (value === \'best\') {\\n            setHelperText(\'You got it!\');\\n            setError(false);\\n        } else if (value === \'worst\') {\\n            setHelperText(\'Sorry, wrong answer!\');\\n            setError(true);\\n        } else {\\n            setHelperText(\'Please select an option.\');\\n            setError(true);\\n        }\\n    };\\n\\n    return (\\n        <PageWrapper>\\n            <form onSubmit={handleSubmit} name=\\"simple-form\\">\\n                <RadioGroup\\n                    name=\\"error-state\\"\\n                    label=\\"Select Black\\"\\n                    value={value}\\n                    onChange={onChange}\\n                    hasError={error}\\n                    message={helperText}\\n                >\\n                    <FormControlLabel value=\\"best\\" control={<Radio />} label=\\"The best!\\" />\\n                    <FormControlLabel value=\\"worst\\" control={<Radio />} label=\\"The worst.\\" />\\n                </RadioGroup>\\n                <FormHelperText>{helperText}</FormHelperText>\\n                <Button type=\\"submit\\" variant=\\"outlined\\" size=\\"small\\">\\n                    Check Answer\\n                </Button>\\n            </form>\\n        </PageWrapper>\\n    );\\n}" }, ...ErrorState.parameters };',locationsMap:{standard:{startLoc:{col:24,line:29},endLoc:{col:1,line:46},startBody:{col:24,line:29},endBody:{col:1,line:46}},"disabled-state":{startLoc:{col:29,line:48},endLoc:{col:1,line:71},startBody:{col:29,line:48},endBody:{col:1,line:71}},"horizontal-layout":{startLoc:{col:32,line:73},endLoc:{col:1,line:95},startBody:{col:32,line:73},endBody:{col:1,line:95}},"label-placement":{startLoc:{col:30,line:97},endLoc:{col:1,line:120},startBody:{col:30,line:97},endBody:{col:1,line:120}},"passing-radio-props":{startLoc:{col:33,line:122},endLoc:{col:1,line:148},startBody:{col:33,line:122},endBody:{col:1,line:148}},"error-state":{startLoc:{col:26,line:150},endLoc:{col:1,line:195},startBody:{col:26,line:150},endBody:{col:1,line:195}}}}},_parameters.storySource={source:'import React, { useState } from \'react\';\nimport Button from \'@material-ui/core/Button\';\nimport RadioGroup, { Radio } from \'../Radio\';\n\nimport { PageWrapper } from \'../storybook\';\nimport { FormControlLabel, FormHelperText } from \'@material-ui/core\';\n\nexport default {\n    title: \'Components/Radio\',\n    component: RadioGroup,\n};\n\nexport const Standard = () => {\n    const defaultValue = \'female\';\n    const [, setValue] = useState(defaultValue);\n\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n        setValue((event.target as HTMLInputElement).value);\n    };\n\n    return (\n        <PageWrapper>\n            <RadioGroup name="standard-usage" onChange={onChange} label="Standard Usage" defaultValue={defaultValue}>\n                <Radio value="female" label="Female" />\n                <Radio value="male" label="Male" />\n                <Radio value="other" label="Other" />\n            </RadioGroup>\n        </PageWrapper>\n    );\n};\n\nexport const DisabledState = () => {\n    const defaultValue = \'male\';\n    const [, setValue] = useState(defaultValue);\n\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n        setValue((event.target as HTMLInputElement).value);\n    };\n\n    return (\n        <PageWrapper>\n            <RadioGroup\n                name="disabled-state"\n                onChange={onChange}\n                label="Disabled State"\n                defaultValue={defaultValue}\n                disabled\n            >\n                <Radio value="female" label="Female" disabled />\n                <Radio value="male" label="Male" disabled />\n                <Radio value="other" label="Other" disabled />\n            </RadioGroup>\n        </PageWrapper>\n    );\n};\n\nexport const HorizontalLayout = () => {\n    const defaultValue = \'female\';\n    const [, setValue] = useState(defaultValue);\n\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValue((event.target as HTMLInputElement).value);\n    };\n    return (\n        <PageWrapper>\n            <RadioGroup\n                name="horizontal-layout"\n                onChange={onChange}\n                label="Horizontal layout"\n                defaultValue={defaultValue}\n                row\n            >\n                <Radio value="female" label="Female" />\n                <Radio value="male" label="Male" />\n                <Radio value="other" label="Other" />\n            </RadioGroup>\n        </PageWrapper>\n    );\n};\n\nexport const LabelPlacement = () => {\n    const defaultValue = \'start\';\n    const [, setValue] = useState(defaultValue);\n\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValue((event.target as HTMLInputElement).value);\n    };\n    return (\n        <PageWrapper>\n            <RadioGroup\n                name="label-placement"\n                onChange={onChange}\n                label="Label placement"\n                defaultValue={defaultValue}\n                row\n            >\n                <Radio value="top" label="Top" labelPlacement="top" />\n                <Radio value="start" label="Start" labelPlacement="start" />\n                <Radio value="bottom" label="Bottom" labelPlacement="bottom" />\n                <Radio value="end" label="End" labelPlacement="end" />\n            </RadioGroup>\n        </PageWrapper>\n    );\n};\n\nexport const PassingRadioProps = () => {\n    const defaultValue = \'top\';\n    const [, setValue] = useState(defaultValue);\n\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValue((event.target as HTMLInputElement).value);\n    };\n    return (\n        <PageWrapper>\n            <RadioGroup\n                name="label-placement"\n                onChange={onChange}\n                label="Use of Radio props"\n                defaultValue={defaultValue}\n            >\n                <Radio\n                    value="top"\n                    label="Disabled ripple, small size radio button"\n                    muiRadioProps={{ disableRipple: true, size: \'small\' }}\n                />\n                <Radio value="start" label="Disabled" muiRadioProps={{ disabled: true }} />\n                <Radio value="bottom" label="Default Mui color" muiRadioProps={{ color: \'default\' }} />\n                <Radio value="end" label="Without Radio props" />\n            </RadioGroup>\n        </PageWrapper>\n    );\n};\n\nexport const ErrorState = () => {\n    const [value, setValue] = useState(\'\');\n    const [error, setError] = useState(true);\n    const [helperText, setHelperText] = useState(\'Choose wisely\');\n\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValue((event.target as HTMLInputElement).value);\n        setError(false);\n    };\n\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        if (value === \'best\') {\n            setHelperText(\'You got it!\');\n            setError(false);\n        } else if (value === \'worst\') {\n            setHelperText(\'Sorry, wrong answer!\');\n            setError(true);\n        } else {\n            setHelperText(\'Please select an option.\');\n            setError(true);\n        }\n    };\n\n    return (\n        <PageWrapper>\n            <form onSubmit={handleSubmit} name="simple-form">\n                <RadioGroup\n                    name="error-state"\n                    label="Select Black"\n                    value={value}\n                    onChange={onChange}\n                    hasError={error}\n                    message={helperText}\n                >\n                    <FormControlLabel value="best" control={<Radio />} label="The best!" />\n                    <FormControlLabel value="worst" control={<Radio />} label="The worst." />\n                </RadioGroup>\n                <FormHelperText>{helperText}</FormHelperText>\n                <Button type="submit" variant="outlined" size="small">\n                    Check Answer\n                </Button>\n            </form>\n        </PageWrapper>\n    );\n};\n',locationsMap:{standard:{startLoc:{col:24,line:13},endLoc:{col:1,line:30},startBody:{col:24,line:13},endBody:{col:1,line:30}},"disabled-state":{startLoc:{col:29,line:32},endLoc:{col:1,line:55},startBody:{col:29,line:32},endBody:{col:1,line:55}},"horizontal-layout":{startLoc:{col:32,line:57},endLoc:{col:1,line:79},startBody:{col:32,line:57},endBody:{col:1,line:79}},"label-placement":{startLoc:{col:30,line:81},endLoc:{col:1,line:104},startBody:{col:30,line:81},endBody:{col:1,line:104}},"passing-radio-props":{startLoc:{col:33,line:106},endLoc:{col:1,line:132},startBody:{col:33,line:106},endBody:{col:1,line:132}},"error-state":{startLoc:{col:26,line:134},endLoc:{col:1,line:179},startBody:{col:26,line:134},endBody:{col:1,line:179}}}},_parameters),title:"Components/Radio",component:_Radio__WEBPACK_IMPORTED_MODULE_14__.b};var Standard=function Standard(){var setValue=_slicedToArray(Object(react__WEBPACK_IMPORTED_MODULE_12__.useState)("female"),2)[1];return react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(_storybook__WEBPACK_IMPORTED_MODULE_15__.a,null,react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(_Radio__WEBPACK_IMPORTED_MODULE_14__.b,{name:"standard-usage",onChange:function onChange(event){setValue(event.target.value)},label:"Standard Usage",defaultValue:"female"},react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(_Radio__WEBPACK_IMPORTED_MODULE_14__.a,{value:"female",label:"Female"}),react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(_Radio__WEBPACK_IMPORTED_MODULE_14__.a,{value:"male",label:"Male"}),react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(_Radio__WEBPACK_IMPORTED_MODULE_14__.a,{value:"other",label:"Other"})))},DisabledState=function DisabledState(){var setValue=_slicedToArray(Object(react__WEBPACK_IMPORTED_MODULE_12__.useState)("male"),2)[1];return react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(_storybook__WEBPACK_IMPORTED_MODULE_15__.a,null,react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(_Radio__WEBPACK_IMPORTED_MODULE_14__.b,{name:"disabled-state",onChange:function onChange(event){setValue(event.target.value)},label:"Disabled State",defaultValue:"male",disabled:!0},react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(_Radio__WEBPACK_IMPORTED_MODULE_14__.a,{value:"female",label:"Female",disabled:!0}),react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(_Radio__WEBPACK_IMPORTED_MODULE_14__.a,{value:"male",label:"Male",disabled:!0}),react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(_Radio__WEBPACK_IMPORTED_MODULE_14__.a,{value:"other",label:"Other",disabled:!0})))},HorizontalLayout=function HorizontalLayout(){var setValue=_slicedToArray(Object(react__WEBPACK_IMPORTED_MODULE_12__.useState)("female"),2)[1];return react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(_storybook__WEBPACK_IMPORTED_MODULE_15__.a,null,react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(_Radio__WEBPACK_IMPORTED_MODULE_14__.b,{name:"horizontal-layout",onChange:function onChange(event){setValue(event.target.value)},label:"Horizontal layout",defaultValue:"female",row:!0},react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(_Radio__WEBPACK_IMPORTED_MODULE_14__.a,{value:"female",label:"Female"}),react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(_Radio__WEBPACK_IMPORTED_MODULE_14__.a,{value:"male",label:"Male"}),react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(_Radio__WEBPACK_IMPORTED_MODULE_14__.a,{value:"other",label:"Other"})))},LabelPlacement=function LabelPlacement(){var setValue=_slicedToArray(Object(react__WEBPACK_IMPORTED_MODULE_12__.useState)("start"),2)[1];return react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(_storybook__WEBPACK_IMPORTED_MODULE_15__.a,null,react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(_Radio__WEBPACK_IMPORTED_MODULE_14__.b,{name:"label-placement",onChange:function onChange(event){setValue(event.target.value)},label:"Label placement",defaultValue:"start",row:!0},react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(_Radio__WEBPACK_IMPORTED_MODULE_14__.a,{value:"top",label:"Top",labelPlacement:"top"}),react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(_Radio__WEBPACK_IMPORTED_MODULE_14__.a,{value:"start",label:"Start",labelPlacement:"start"}),react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(_Radio__WEBPACK_IMPORTED_MODULE_14__.a,{value:"bottom",label:"Bottom",labelPlacement:"bottom"}),react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(_Radio__WEBPACK_IMPORTED_MODULE_14__.a,{value:"end",label:"End",labelPlacement:"end"})))},PassingRadioProps=function PassingRadioProps(){var setValue=_slicedToArray(Object(react__WEBPACK_IMPORTED_MODULE_12__.useState)("top"),2)[1];return react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(_storybook__WEBPACK_IMPORTED_MODULE_15__.a,null,react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(_Radio__WEBPACK_IMPORTED_MODULE_14__.b,{name:"label-placement",onChange:function onChange(event){setValue(event.target.value)},label:"Use of Radio props",defaultValue:"top"},react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(_Radio__WEBPACK_IMPORTED_MODULE_14__.a,{value:"top",label:"Disabled ripple, small size radio button",muiRadioProps:{disableRipple:!0,size:"small"}}),react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(_Radio__WEBPACK_IMPORTED_MODULE_14__.a,{value:"start",label:"Disabled",muiRadioProps:{disabled:!0}}),react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(_Radio__WEBPACK_IMPORTED_MODULE_14__.a,{value:"bottom",label:"Default Mui color",muiRadioProps:{color:"default"}}),react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(_Radio__WEBPACK_IMPORTED_MODULE_14__.a,{value:"end",label:"Without Radio props"})))},ErrorState=function ErrorState(){var _useState12=_slicedToArray(Object(react__WEBPACK_IMPORTED_MODULE_12__.useState)(""),2),value=_useState12[0],setValue=_useState12[1],_useState14=_slicedToArray(Object(react__WEBPACK_IMPORTED_MODULE_12__.useState)(!0),2),error=_useState14[0],setError=_useState14[1],_useState16=_slicedToArray(Object(react__WEBPACK_IMPORTED_MODULE_12__.useState)("Choose wisely"),2),helperText=_useState16[0],setHelperText=_useState16[1];return react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(_storybook__WEBPACK_IMPORTED_MODULE_15__.a,null,react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("form",{onSubmit:function handleSubmit(event){event.preventDefault(),"best"===value?(setHelperText("You got it!"),setError(!1)):"worst"===value?(setHelperText("Sorry, wrong answer!"),setError(!0)):(setHelperText("Please select an option."),setError(!0))},name:"simple-form"},react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(_Radio__WEBPACK_IMPORTED_MODULE_14__.b,{name:"error-state",label:"Select Black",value:value,onChange:function onChange(event){setValue(event.target.value),setError(!1)},hasError:error,message:helperText},react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(_material_ui_core__WEBPACK_IMPORTED_MODULE_16__.a,{value:"best",control:react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(_Radio__WEBPACK_IMPORTED_MODULE_14__.a,null),label:"The best!"}),react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(_material_ui_core__WEBPACK_IMPORTED_MODULE_16__.a,{value:"worst",control:react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(_Radio__WEBPACK_IMPORTED_MODULE_14__.a,null),label:"The worst."})),react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(_material_ui_core__WEBPACK_IMPORTED_MODULE_17__.a,null,helperText),react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_13__.a,{type:"submit",variant:"outlined",size:"small"},"Check Answer")))};Standard.parameters=Object.assign({storySource:{source:'() => {\n    const defaultValue = \'female\';\n    const [, setValue] = useState(defaultValue);\n\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n        setValue((event.target as HTMLInputElement).value);\n    };\n\n    return (\n        <PageWrapper>\n            <RadioGroup name="standard-usage" onChange={onChange} label="Standard Usage" defaultValue={defaultValue}>\n                <Radio value="female" label="Female" />\n                <Radio value="male" label="Male" />\n                <Radio value="other" label="Other" />\n            </RadioGroup>\n        </PageWrapper>\n    );\n}'}},Standard.parameters),DisabledState.parameters=Object.assign({storySource:{source:'() => {\n    const defaultValue = \'male\';\n    const [, setValue] = useState(defaultValue);\n\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n        setValue((event.target as HTMLInputElement).value);\n    };\n\n    return (\n        <PageWrapper>\n            <RadioGroup\n                name="disabled-state"\n                onChange={onChange}\n                label="Disabled State"\n                defaultValue={defaultValue}\n                disabled\n            >\n                <Radio value="female" label="Female" disabled />\n                <Radio value="male" label="Male" disabled />\n                <Radio value="other" label="Other" disabled />\n            </RadioGroup>\n        </PageWrapper>\n    );\n}'}},DisabledState.parameters),HorizontalLayout.parameters=Object.assign({storySource:{source:'() => {\n    const defaultValue = \'female\';\n    const [, setValue] = useState(defaultValue);\n\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValue((event.target as HTMLInputElement).value);\n    };\n    return (\n        <PageWrapper>\n            <RadioGroup\n                name="horizontal-layout"\n                onChange={onChange}\n                label="Horizontal layout"\n                defaultValue={defaultValue}\n                row\n            >\n                <Radio value="female" label="Female" />\n                <Radio value="male" label="Male" />\n                <Radio value="other" label="Other" />\n            </RadioGroup>\n        </PageWrapper>\n    );\n}'}},HorizontalLayout.parameters),LabelPlacement.parameters=Object.assign({storySource:{source:'() => {\n    const defaultValue = \'start\';\n    const [, setValue] = useState(defaultValue);\n\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValue((event.target as HTMLInputElement).value);\n    };\n    return (\n        <PageWrapper>\n            <RadioGroup\n                name="label-placement"\n                onChange={onChange}\n                label="Label placement"\n                defaultValue={defaultValue}\n                row\n            >\n                <Radio value="top" label="Top" labelPlacement="top" />\n                <Radio value="start" label="Start" labelPlacement="start" />\n                <Radio value="bottom" label="Bottom" labelPlacement="bottom" />\n                <Radio value="end" label="End" labelPlacement="end" />\n            </RadioGroup>\n        </PageWrapper>\n    );\n}'}},LabelPlacement.parameters),PassingRadioProps.parameters=Object.assign({storySource:{source:'() => {\n    const defaultValue = \'top\';\n    const [, setValue] = useState(defaultValue);\n\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValue((event.target as HTMLInputElement).value);\n    };\n    return (\n        <PageWrapper>\n            <RadioGroup\n                name="label-placement"\n                onChange={onChange}\n                label="Use of Radio props"\n                defaultValue={defaultValue}\n            >\n                <Radio\n                    value="top"\n                    label="Disabled ripple, small size radio button"\n                    muiRadioProps={{ disableRipple: true, size: \'small\' }}\n                />\n                <Radio value="start" label="Disabled" muiRadioProps={{ disabled: true }} />\n                <Radio value="bottom" label="Default Mui color" muiRadioProps={{ color: \'default\' }} />\n                <Radio value="end" label="Without Radio props" />\n            </RadioGroup>\n        </PageWrapper>\n    );\n}'}},PassingRadioProps.parameters),ErrorState.parameters=Object.assign({storySource:{source:'() => {\n    const [value, setValue] = useState(\'\');\n    const [error, setError] = useState(true);\n    const [helperText, setHelperText] = useState(\'Choose wisely\');\n\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValue((event.target as HTMLInputElement).value);\n        setError(false);\n    };\n\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        if (value === \'best\') {\n            setHelperText(\'You got it!\');\n            setError(false);\n        } else if (value === \'worst\') {\n            setHelperText(\'Sorry, wrong answer!\');\n            setError(true);\n        } else {\n            setHelperText(\'Please select an option.\');\n            setError(true);\n        }\n    };\n\n    return (\n        <PageWrapper>\n            <form onSubmit={handleSubmit} name="simple-form">\n                <RadioGroup\n                    name="error-state"\n                    label="Select Black"\n                    value={value}\n                    onChange={onChange}\n                    hasError={error}\n                    message={helperText}\n                >\n                    <FormControlLabel value="best" control={<Radio />} label="The best!" />\n                    <FormControlLabel value="worst" control={<Radio />} label="The worst." />\n                </RadioGroup>\n                <FormHelperText>{helperText}</FormHelperText>\n                <Button type="submit" variant="outlined" size="small">\n                    Check Answer\n                </Button>\n            </form>\n        </PageWrapper>\n    );\n}'}},ErrorState.parameters)},"./src/components/storybook.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return PageWrapper}));var _templateObject;__webpack_require__("./node_modules/core-js/modules/es.array.slice.js");var PageWrapper=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js").a.div(_templateObject||(_templateObject=function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}(["\n    padding: 30px 100px;\n"])))},"./storybook-init-framework-entry.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__("./node_modules/@storybook/react/dist/esm/client/index.js")},0:function(module,exports,__webpack_require__){__webpack_require__("./node_modules/@storybook/core-client/dist/esm/globals/polyfills.js"),__webpack_require__("./node_modules/@storybook/core-client/dist/esm/globals/globals.js"),__webpack_require__("./storybook-init-framework-entry.js"),__webpack_require__("./node_modules/@storybook/react/dist/esm/client/docs/config-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/react/dist/esm/client/preview/config-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-docs/preview.js-generated-config-entry.js"),__webpack_require__("./.storybook/preview.js-generated-config-entry.js"),module.exports=__webpack_require__("./generated-stories-entry.js")},1:function(module,exports){},2:function(module,exports){}},[[0,5,6]]]);